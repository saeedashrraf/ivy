Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_docstrings", "deep_dive/12_docstring_examples", "deep_dive/13_array_api_tests", "deep_dive/14_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_container", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_docstrings.rst", "deep_dive/12_docstring_examples.rst", "deep_dive/13_array_api_tests.rst", "deep_dive/14_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_container.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.Container.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "DevMapper", "DevMapperMultiProc", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "floormod", "fourier_encode", "gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 5, 11, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 127, 128, 129, 130, 134, 135, 137, 138, 139, 149, 150, 151, 248, 287, 290, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 607, 614, 663, 669, 701, 702, 704, 706, 737, 908, 910, 920, 944, 947, 1025, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 181, 186, 187, 192, 195, 200, 201, 206, 209, 212, 217, 222, 225, 230, 235, 240, 243, 248, 249, 250, 251, 256, 261, 266, 271, 272, 273, 274, 275, 279, 280, 285, 286, 287, 292, 293, 298, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 374, 378, 383, 387, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 437, 441, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 514, 518, 522, 526, 530, 534, 535, 536, 541, 545, 549, 553, 557, 561, 565, 570, 575, 580, 584, 588, 593, 598, 603, 607, 608, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 633, 637, 641, 642, 643, 644, 648, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 696, 697, 698, 699, 700, 701, 702, 707, 711, 712, 716, 721, 725, 729, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 751, 752, 753, 754, 755, 756, 757, 762, 765, 768, 771, 774, 777, 780, 784, 787, 788, 791, 794, 797, 800, 803, 804, 807, 810, 813, 816, 819, 822, 825, 828, 829, 834, 839, 844, 845, 850, 854, 858, 862, 866, 870, 874, 878, 883, 884, 888, 892, 896, 900, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 932, 933, 934, 937, 938, 942, 943, 944, 945, 946, 947, 948, 949, 950, 955, 960, 965, 970, 971, 976, 981, 982, 986, 990, 994, 998, 1002, 1006, 1010, 1014, 1015, 1020, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070], "backend_handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1025], "contextmanag": 0, "modul": [0, 3, 4, 15, 17, 20, 69, 70, 71, 74, 75, 76, 77, 78, 115, 116, 123, 124, 125, 127, 131, 132, 134, 135, 137, 139, 150, 151, 607, 670, 932, 933, 937, 1025, 1033, 1034, 1035, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1066, 1067], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127, 128, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070], "base": [0, 18, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 128, 134, 150, 177, 209, 210, 211, 248, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 364, 454, 457, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 607, 654, 677, 685, 701, 949, 950, 954, 955, 959, 965, 969, 981, 982, 985, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "object": [0, 71, 74, 75, 76, 77, 78, 87, 88, 123, 136, 139, 177, 195, 198, 248, 280, 283, 317, 359, 644, 645, 648, 650, 652, 701, 908, 911, 913, 915, 916, 917, 922, 923, 924, 925, 932, 943, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1057], "__init__": [0, 3, 4, 22, 25, 26, 27, 71, 74, 75, 76, 77, 78, 118, 125, 129, 134, 136, 137, 138, 139, 248, 317, 324, 325, 326, 327, 328, 329, 701, 932, 933, 937, 1025, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "choose_random_backend": 0, "exclud": [0, 1, 121, 134, 177, 178, 179, 932, 938, 940], "none": [0, 1, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 138, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 275, 277, 280, 282, 283, 284, 287, 289, 290, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 316, 317, 324, 325, 332, 333, 356, 357, 358, 359, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 612, 613, 619, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 657, 659, 660, 664, 670, 672, 675, 676, 677, 678, 680, 684, 685, 691, 692, 694, 697, 698, 701, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 914, 919, 920, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "clear_backend_stack": 0, "current_backend": [0, 22, 25, 26, 71, 76, 77, 118, 124], "arg": [0, 3, 20, 22, 25, 26, 28, 29, 30, 74, 75, 134, 136, 138, 317, 324, 338, 342, 346, 358, 607, 676, 1036, 1037, 1056, 1057], "kwarg": [0, 3, 22, 25, 26, 28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 134, 136, 138, 317, 324, 338, 342, 346, 607, 669, 1036, 1037, 1056, 1057], "return": [0, 3, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 316, 317, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 918, 919, 920, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1036, 1037, 1044, 1053, 1054, 1060, 1064], "current": [0, 3, 4, 11, 15, 17, 18, 19, 20, 22, 25, 26, 71, 74, 75, 76, 77, 78, 124, 128, 130, 134, 139, 150, 151, 248, 285, 286, 292, 316, 317, 324, 347, 348, 352, 354, 607, 653, 660, 664, 671, 673, 683, 701, 738, 908, 909, 918, 919, 1025], "prioriti": [0, 3, 18, 74, 75, 131], "global_backend": [0, 3], "argument": [0, 3, 4, 13, 19, 28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 78, 117, 118, 120, 121, 123, 124, 125, 127, 128, 132, 134, 136, 137, 174, 175, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 304, 307, 317, 324, 325, 338, 342, 346, 364, 365, 368, 378, 381, 383, 386, 387, 390, 428, 431, 462, 465, 534, 545, 548, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 607, 613, 614, 618, 628, 644, 646, 669, 676, 739, 742, 746, 749, 755, 756, 757, 760, 768, 770, 844, 878, 881, 908, 914, 926, 927, 930, 949, 955, 959, 981, 986, 989, 1006, 1009, 1014, 1015, 1018, 1028, 1030, 1036, 1037, 1056, 1057], "": [0, 3, 4, 5, 11, 14, 15, 16, 17, 18, 20, 22, 25, 26, 28, 31, 32, 33, 34, 74, 75, 117, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 176, 177, 212, 215, 230, 232, 234, 235, 237, 239, 248, 285, 286, 317, 333, 357, 364, 557, 560, 607, 616, 701, 707, 709, 712, 714, 721, 723, 729, 731, 756, 807, 809, 810, 812, 908, 914, 920, 981, 1002, 1005, 1010, 1013, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "paramet": [0, 3, 4, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 120, 123, 136, 137, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 249, 250, 251, 254, 256, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 304, 307, 309, 310, 311, 312, 316, 317, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1030, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "from": [0, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 47, 48, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 87, 88, 93, 94, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 182, 184, 187, 188, 190, 195, 198, 200, 201, 202, 204, 212, 215, 217, 218, 220, 225, 226, 228, 243, 245, 247, 248, 266, 267, 268, 269, 270, 304, 307, 317, 324, 325, 333, 348, 352, 357, 358, 364, 470, 473, 580, 583, 607, 628, 644, 645, 646, 648, 649, 650, 651, 652, 689, 701, 707, 709, 721, 723, 739, 746, 747, 748, 749, 750, 751, 754, 756, 768, 770, 807, 809, 819, 821, 844, 862, 865, 874, 877, 884, 887, 904, 905, 906, 907, 908, 910, 920, 921, 932, 933, 934, 935, 936, 937, 938, 940, 944, 948, 949, 950, 954, 960, 964, 981, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1031, 1036, 1037, 1044, 1052, 1055, 1060, 1064], "which": [0, 3, 4, 13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 33, 34, 35, 36, 41, 42, 51, 52, 53, 54, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 162, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 266, 267, 268, 269, 270, 271, 275, 278, 280, 283, 287, 290, 292, 316, 317, 324, 325, 334, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 354, 356, 357, 358, 364, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 557, 560, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 613, 625, 626, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 663, 671, 672, 673, 675, 676, 691, 692, 694, 699, 701, 707, 709, 711, 712, 714, 716, 718, 720, 721, 723, 725, 727, 729, 731, 734, 736, 737, 739, 754, 756, 757, 759, 761, 762, 764, 768, 770, 784, 786, 804, 806, 807, 809, 819, 821, 822, 824, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 849, 850, 853, 862, 865, 870, 873, 878, 879, 880, 881, 882, 883, 888, 891, 908, 913, 914, 915, 916, 921, 922, 923, 924, 925, 927, 929, 931, 932, 933, 934, 935, 936, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "try": [0, 3, 12, 14, 15, 17, 18, 19, 20, 74, 75, 127, 128, 132, 136, 151, 607, 697, 1025], "infer": [0, 3, 33, 34, 117, 125, 129, 130, 134, 139, 174, 175, 177, 178, 179, 181, 182, 184, 187, 188, 190, 200, 201, 202, 204, 217, 218, 220, 225, 226, 228, 243, 245, 247, 364, 470, 473, 607, 656, 682, 844, 874, 877], "when": [0, 3, 13, 14, 17, 18, 19, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 151, 248, 251, 254, 317, 364, 378, 381, 458, 461, 553, 556, 607, 618, 663, 685, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 908, 919, 944, 945, 946, 948, 981, 986, 989, 994, 997, 1002, 1005, 1010, 1013, 1025, 1056, 1057], "i": [0, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 162, 163, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 266, 268, 269, 270, 275, 278, 292, 293, 296, 298, 301, 316, 317, 324, 325, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 353, 357, 358, 360, 361, 363, 364, 365, 367, 368, 369, 370, 373, 374, 377, 378, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 404, 407, 412, 415, 420, 423, 424, 427, 428, 430, 431, 432, 434, 435, 436, 437, 440, 454, 457, 458, 461, 462, 464, 465, 466, 469, 478, 481, 482, 485, 486, 489, 494, 497, 498, 501, 502, 505, 510, 513, 514, 517, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 587, 593, 594, 596, 597, 598, 599, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 615, 616, 618, 619, 620, 622, 625, 626, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 650, 652, 658, 659, 663, 665, 666, 667, 668, 669, 670, 674, 676, 679, 691, 692, 694, 699, 700, 701, 707, 709, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 738, 739, 742, 746, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 780, 783, 784, 786, 788, 790, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 813, 815, 816, 818, 819, 821, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 888, 891, 900, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 918, 919, 920, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "global": [0, 3, 4, 5, 11, 55, 56, 71, 74, 75, 76, 77, 78, 101, 102, 124, 125, 129, 130, 134, 248, 272, 273, 274, 317, 324, 325, 356, 357, 358, 607, 654, 655, 674, 677, 678, 679, 684, 685, 701, 738, 926, 927, 928, 929, 930, 931, 1058, 1059], "set": [0, 3, 4, 5, 11, 13, 16, 18, 28, 31, 32, 41, 42, 43, 44, 62, 74, 75, 87, 88, 89, 90, 108, 117, 118, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 317, 333, 343, 344, 355, 356, 357, 358, 364, 396, 399, 607, 608, 609, 610, 611, 612, 677, 678, 679, 680, 681, 701, 707, 709, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 756, 762, 764, 784, 786, 788, 790, 797, 799, 804, 806, 908, 909, 918, 919, 920, 924, 925, 932, 942, 944, 945, 950, 954, 955, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 1002, 1005, 1010, 1013, 1044, 1053, 1060, 1061, 1062, 1063, 1064, 1065], "ret": [0, 3, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 120, 134, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 249, 250, 251, 254, 256, 259, 261, 264, 266, 267, 268, 269, 270, 271, 275, 278, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 304, 307, 316, 317, 324, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 635, 637, 639, 641, 642, 643, 644, 646, 648, 649, 651, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 675, 676, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 918, 919, 920, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1030, 1036, 1037, 1060, 1064], "exampl": [0, 3, 4, 5, 11, 15, 17, 18, 19, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 162, 164, 165, 166, 167, 168, 171, 173, 174, 175, 177, 200, 201, 204, 212, 215, 222, 223, 225, 228, 240, 242, 243, 247, 248, 251, 254, 266, 267, 268, 269, 270, 275, 278, 285, 286, 298, 301, 316, 317, 333, 334, 336, 348, 349, 350, 351, 352, 355, 357, 359, 361, 362, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 400, 403, 404, 407, 408, 411, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 612, 615, 616, 624, 625, 641, 644, 646, 648, 649, 651, 655, 666, 680, 682, 683, 689, 691, 692, 693, 694, 695, 696, 698, 701, 702, 703, 704, 705, 706, 716, 717, 718, 719, 720, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 777, 779, 788, 790, 794, 796, 807, 809, 813, 815, 816, 818, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 908, 911, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1002, 1005, 1006, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025], "If": [0, 3, 4, 5, 13, 16, 17, 18, 19, 20, 28, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 151, 168, 170, 172, 177, 178, 179, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 212, 215, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 266, 268, 270, 304, 307, 317, 333, 357, 364, 365, 367, 368, 369, 370, 373, 374, 377, 378, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 428, 430, 431, 432, 434, 435, 436, 437, 440, 454, 457, 458, 461, 462, 464, 465, 498, 501, 502, 505, 510, 513, 514, 517, 522, 525, 526, 529, 536, 539, 553, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 583, 593, 594, 596, 597, 598, 599, 601, 602, 603, 606, 607, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 663, 691, 692, 694, 701, 707, 709, 712, 714, 716, 718, 720, 721, 723, 725, 727, 729, 731, 738, 756, 757, 758, 759, 760, 761, 762, 764, 784, 786, 788, 790, 797, 799, 800, 802, 804, 806, 807, 809, 819, 821, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 849, 858, 861, 862, 865, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 904, 905, 906, 908, 920, 921, 927, 929, 931, 932, 937, 938, 940, 944, 945, 946, 947, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "import": [0, 3, 14, 19, 69, 70, 115, 116, 118, 120, 121, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 151, 317, 355, 1025, 1031], "numpi": [0, 3, 4, 5, 13, 14, 18, 19, 41, 42, 74, 75, 87, 88, 119, 123, 125, 129, 130, 131, 134, 136, 139, 607, 691, 692, 693, 694, 695, 981, 982, 985, 1025], "np": [0, 3, 119, 123, 127, 129, 130, 131, 136, 137, 139, 1025], "x": [0, 3, 11, 20, 22, 25, 26, 28, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 120, 121, 123, 124, 125, 128, 131, 132, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 177, 181, 184, 185, 187, 190, 191, 195, 198, 199, 201, 204, 205, 212, 215, 217, 220, 221, 225, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 244, 247, 248, 251, 254, 255, 261, 264, 265, 266, 267, 268, 269, 270, 275, 278, 298, 301, 317, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 348, 352, 357, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 522, 525, 534, 535, 541, 544, 549, 552, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 611, 615, 616, 617, 619, 620, 622, 624, 625, 626, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 648, 649, 651, 655, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 672, 682, 686, 689, 691, 692, 693, 694, 695, 696, 699, 700, 701, 711, 716, 717, 718, 719, 720, 734, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 807, 809, 810, 812, 813, 815, 816, 818, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 892, 895, 896, 899, 900, 903, 908, 909, 911, 914, 918, 919, 920, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 969, 970, 971, 974, 975, 976, 979, 980, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1055], "arrai": [0, 3, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 151, 152, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 176, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 214, 215, 216, 217, 220, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 251, 254, 256, 258, 259, 260, 261, 264, 266, 268, 269, 270, 275, 278, 280, 283, 287, 290, 293, 296, 298, 301, 304, 307, 312, 317, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 354, 358, 359, 364, 365, 367, 368, 369, 370, 373, 374, 377, 378, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 430, 431, 432, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 606, 607, 608, 610, 611, 612, 615, 616, 617, 619, 620, 622, 624, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 659, 660, 661, 662, 663, 665, 666, 668, 671, 672, 673, 675, 676, 680, 682, 686, 689, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 706, 707, 709, 712, 714, 716, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 841, 842, 843, 844, 845, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 910, 911, 920, 921, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1028, 1030, 1044, 1052, 1055], "2": [0, 3, 17, 18, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 121, 123, 125, 128, 133, 134, 136, 137, 138, 139, 151, 162, 164, 165, 166, 167, 173, 176, 177, 200, 201, 204, 212, 215, 222, 223, 225, 228, 243, 247, 248, 251, 254, 266, 267, 268, 269, 270, 275, 278, 298, 301, 317, 333, 334, 336, 348, 350, 352, 359, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 404, 407, 408, 411, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 435, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 510, 513, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 615, 616, 619, 620, 622, 625, 641, 644, 646, 648, 649, 651, 666, 682, 689, 701, 702, 703, 704, 705, 706, 716, 717, 718, 719, 720, 739, 742, 743, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 777, 779, 780, 783, 784, 786, 788, 790, 794, 796, 797, 799, 800, 802, 807, 809, 813, 814, 815, 816, 818, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 892, 895, 908, 911, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025], "0": [0, 3, 18, 22, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 123, 134, 136, 137, 138, 139, 162, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 192, 193, 194, 206, 207, 209, 210, 211, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 248, 251, 254, 266, 268, 269, 270, 275, 278, 280, 283, 298, 301, 317, 318, 321, 324, 326, 330, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 348, 352, 355, 357, 358, 362, 364, 365, 366, 368, 369, 370, 373, 374, 377, 378, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 412, 415, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 457, 458, 461, 462, 463, 464, 465, 474, 477, 494, 497, 498, 501, 502, 505, 510, 513, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 615, 616, 619, 620, 622, 624, 625, 626, 641, 644, 646, 648, 649, 651, 657, 666, 672, 675, 676, 682, 689, 691, 692, 693, 694, 695, 696, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 777, 779, 807, 809, 813, 815, 816, 817, 818, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 866, 869, 870, 873, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 892, 895, 900, 902, 908, 911, 920, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 981, 982, 985, 986, 989, 990, 993, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067], "print": [0, 3, 4, 5, 11, 17, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 121, 123, 128, 134, 136, 137, 138, 162, 164, 165, 166, 167, 168, 171, 173, 177, 200, 201, 204, 212, 215, 222, 223, 225, 228, 240, 242, 243, 247, 248, 251, 254, 266, 267, 268, 269, 270, 275, 278, 285, 286, 298, 301, 316, 317, 334, 348, 349, 350, 351, 352, 354, 357, 361, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 400, 403, 404, 407, 408, 411, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 612, 615, 616, 624, 625, 641, 644, 646, 648, 649, 651, 655, 673, 682, 689, 691, 692, 693, 694, 695, 696, 701, 702, 703, 705, 706, 716, 717, 718, 719, 720, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 777, 779, 794, 796, 807, 809, 813, 815, 816, 818, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 858, 861, 862, 865, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 892, 895, 908, 911, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1002, 1005, 1006, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025], "function": [0, 3, 4, 5, 13, 18, 20, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 127, 131, 132, 133, 135, 136, 137, 138, 149, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 249, 250, 251, 254, 256, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1033, 1034, 1035, 1060, 1063, 1065], "py": [0, 3, 4, 18, 118, 119, 120, 123, 124, 125, 129, 130, 132, 134, 136, 138, 139, 932, 933, 937], "noqa": [0, 3, 4, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 378, 381, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 494, 497, 534, 545, 548, 561, 564, 565, 568, 580, 583, 584, 587, 593, 597, 598, 602, 756, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 981, 986, 989], "The": [0, 3, 4, 12, 13, 15, 16, 17, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 150, 162, 163, 164, 167, 168, 170, 172, 173, 174, 175, 177, 178, 179, 195, 198, 209, 210, 230, 232, 234, 235, 237, 239, 248, 249, 250, 251, 254, 266, 268, 270, 271, 279, 285, 286, 292, 293, 296, 303, 312, 316, 317, 324, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 610, 612, 613, 615, 618, 619, 627, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 643, 644, 645, 647, 648, 649, 650, 651, 652, 661, 662, 663, 665, 666, 667, 668, 670, 675, 676, 677, 678, 679, 684, 685, 688, 690, 691, 692, 694, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 716, 718, 720, 721, 723, 725, 727, 729, 731, 734, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 880, 882, 883, 896, 899, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 944, 945, 946, 947, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064], "set_backend": [0, 3, 4, 11, 124, 125, 126, 129, 248, 285, 286, 317, 355, 607, 682, 1025], "ha": [0, 3, 4, 13, 14, 15, 18, 61, 62, 74, 75, 107, 108, 120, 121, 123, 124, 125, 126, 129, 130, 132, 134, 136, 138, 139, 150, 151, 177, 212, 215, 317, 333, 364, 365, 368, 536, 539, 553, 556, 701, 738, 756, 780, 783, 803, 804, 806, 807, 809, 816, 818, 844, 858, 861, 884, 887, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 981, 990, 993, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "over": [0, 3, 13, 15, 17, 67, 68, 69, 70, 74, 75, 113, 114, 115, 116, 120, 121, 123, 125, 131, 136, 151, 756, 784, 786, 813, 815, 819, 821, 822, 824, 926, 927, 930, 932, 938, 940, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1058, 1059], "ani": [0, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 33, 34, 41, 42, 67, 68, 69, 70, 74, 75, 87, 88, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 217, 220, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 317, 359, 364, 365, 368, 378, 381, 383, 386, 387, 390, 428, 431, 446, 449, 462, 465, 474, 477, 494, 497, 534, 545, 548, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 607, 608, 609, 610, 611, 612, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 646, 647, 658, 665, 666, 667, 668, 684, 685, 701, 711, 739, 742, 746, 749, 753, 755, 756, 757, 760, 768, 770, 844, 878, 881, 904, 905, 906, 907, 908, 911, 914, 918, 926, 927, 930, 932, 938, 940, 949, 955, 959, 981, 986, 989, 1014, 1015, 1018, 1024, 1025], "pass": [0, 3, 19, 69, 70, 71, 74, 75, 76, 77, 78, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 136, 151, 248, 271, 317, 324, 358, 364, 396, 399, 607, 618, 663, 701, 737, 904, 905, 906, 1036, 1037, 1056, 1057, 1060, 1064, 1066, 1067], "jax": [0, 3, 4, 5, 14, 15, 18, 19, 43, 44, 89, 90, 119, 123, 125, 129, 130, 131, 134, 136, 139, 151, 701, 716, 717, 718, 719, 720, 949, 950, 954, 955, 959, 965, 969, 1025], "get_backend": [0, 124, 125], "specifi": [0, 4, 33, 34, 51, 52, 53, 54, 67, 68, 74, 75, 87, 88, 97, 98, 99, 100, 113, 114, 117, 119, 123, 124, 129, 130, 131, 134, 137, 138, 139, 177, 178, 179, 186, 200, 206, 207, 209, 210, 222, 223, 230, 232, 234, 235, 237, 239, 240, 242, 248, 251, 254, 261, 264, 317, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 348, 352, 354, 357, 358, 359, 364, 557, 560, 607, 613, 625, 644, 646, 648, 650, 651, 652, 658, 699, 756, 768, 770, 784, 786, 813, 815, 816, 818, 819, 821, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 850, 853, 854, 857, 862, 865, 878, 879, 880, 881, 882, 884, 887, 888, 891, 900, 903, 908, 913, 915, 916, 922, 923, 924, 925, 944, 945, 946, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 981, 982, 985, 998, 1001, 1006, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "isn": [0, 4, 18, 137, 151], "t": [0, 4, 14, 15, 17, 18, 19, 20, 22, 25, 26, 69, 70, 115, 116, 121, 123, 129, 134, 136, 137, 138, 139, 151, 607, 616, 739, 752, 753], "associ": [0, 4, 18, 123, 124, 126, 151, 364, 378, 381, 536, 539, 756, 788, 790, 797, 799, 825, 827], "option": [0, 4, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 128, 129, 130, 131, 132, 134, 139, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 266, 268, 270, 271, 272, 273, 274, 292, 316, 317, 333, 357, 358, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 610, 612, 613, 619, 620, 622, 625, 626, 627, 629, 631, 632, 633, 635, 636, 637, 639, 640, 642, 644, 646, 647, 648, 649, 651, 652, 659, 670, 672, 675, 676, 684, 685, 691, 692, 694, 701, 716, 718, 720, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 914, 919, 920, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 948, 949, 955, 956, 958, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "str": [0, 4, 28, 29, 30, 47, 48, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 129, 130, 132, 168, 170, 172, 174, 175, 177, 212, 215, 248, 249, 266, 268, 270, 271, 272, 273, 279, 280, 283, 287, 290, 292, 293, 296, 298, 301, 309, 310, 311, 316, 317, 330, 333, 334, 336, 339, 340, 341, 342, 358, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 613, 627, 629, 631, 632, 633, 635, 636, 637, 639, 640, 644, 647, 648, 652, 670, 675, 676, 691, 692, 694, 716, 718, 720, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 756, 757, 759, 761, 800, 802, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 904, 905, 906, 907, 908, 914, 927, 929, 934, 936, 955, 956, 958, 981, 982, 985, 1015, 1017, 1019, 1020, 1022, 1024], "we": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 69, 70, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 150, 151, 701, 711, 1025, 1031], "want": [0, 4, 14, 16, 17, 18, 69, 70, 115, 116, 123, 137, 138, 139, 151], "retriev": [0, 4, 18, 607, 613], "e": [0, 4, 14, 15, 16, 18, 20, 117, 123, 128, 137, 151, 176, 177, 212, 215, 248, 250, 304, 307, 317, 330, 364, 365, 368, 396, 399, 412, 415, 420, 423, 428, 431, 454, 457, 462, 465, 466, 469, 478, 481, 498, 501, 506, 509, 534, 535, 541, 544, 553, 556, 557, 560, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 756, 762, 764, 780, 783, 788, 790, 797, 799, 804, 806, 807, 809, 822, 824, 844, 888, 891, 908, 911, 932, 937, 938, 940, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "one": [0, 4, 14, 15, 17, 18, 22, 25, 26, 61, 62, 74, 75, 85, 86, 87, 88, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 119, 121, 123, 124, 127, 128, 129, 131, 132, 133, 136, 137, 139, 151, 177, 178, 179, 212, 215, 248, 256, 259, 266, 269, 317, 343, 344, 345, 346, 358, 364, 365, 369, 378, 382, 387, 391, 534, 565, 569, 570, 574, 607, 608, 610, 611, 612, 669, 672, 675, 676, 691, 692, 694, 756, 757, 761, 780, 783, 784, 786, 794, 796, 800, 802, 819, 821, 822, 824, 844, 845, 849, 858, 861, 862, 865, 878, 881, 882, 884, 887, 926, 927, 929, 930, 931, 934, 936, 944, 945, 947, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 981, 982, 985, 1025], "default": [0, 4, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 128, 129, 130, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 266, 268, 270, 272, 273, 274, 275, 278, 317, 324, 325, 333, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 619, 620, 622, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 658, 659, 660, 663, 664, 665, 666, 668, 669, 670, 672, 674, 675, 676, 679, 682, 684, 685, 691, 692, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 914, 918, 919, 920, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "torch": [0, 4, 11, 18, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 174, 175, 248, 285, 286, 298, 301, 317, 355, 607, 682, 844, 858, 861, 1025], "tensorflow": [0, 4, 11, 14, 15, 18, 19, 119, 123, 129, 130, 131, 134, 139, 151, 1025], "mxnet": [0, 4, 14, 19, 129, 130, 131, 134, 139, 1025], "either": [0, 4, 11, 17, 18, 20, 74, 75, 120, 121, 123, 124, 125, 128, 129, 130, 134, 136, 137, 151, 177, 195, 198, 364, 378, 381, 396, 399, 482, 485, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 557, 560, 565, 568, 570, 573, 593, 597, 607, 628, 665, 669, 670, 756, 780, 783, 904, 905, 906, 907, 981, 998, 1001, 1006, 1009, 1044, 1055, 1056, 1057], "doesn": [0, 4, 17, 20, 121, 123, 129, 134, 151], "matter": [0, 4, 13, 121], "been": [0, 4, 18, 119, 120, 123, 124, 125, 128, 129, 130, 132, 134, 150, 151, 317, 333, 607, 629, 631, 633, 635, 637, 639, 932, 933], "ivy_np": [0, 4, 123], "us": [0, 4, 11, 15, 18, 19, 39, 40, 53, 54, 55, 56, 69, 70, 71, 74, 75, 76, 77, 78, 85, 86, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 150, 151, 162, 164, 165, 166, 167, 168, 171, 173, 176, 248, 279, 317, 324, 325, 349, 353, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 383, 386, 387, 388, 389, 404, 407, 424, 427, 437, 440, 474, 477, 494, 497, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 580, 583, 607, 644, 646, 654, 655, 669, 676, 677, 678, 684, 685, 701, 702, 705, 707, 709, 721, 723, 725, 727, 739, 745, 751, 752, 754, 755, 756, 765, 767, 768, 770, 784, 786, 828, 829, 832, 844, 858, 861, 862, 865, 870, 873, 878, 879, 880, 881, 882, 892, 895, 904, 905, 906, 907, 908, 909, 911, 917, 918, 919, 921, 926, 927, 928, 929, 930, 931, 944, 945, 946, 947, 949, 950, 954, 981, 982, 985, 1014, 1015, 1018, 1025, 1044, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063], "ivy_jax": [0, 4], "subsequ": [0, 5, 17, 119, 121, 123, 124, 127, 131, 138], "call": [0, 5, 11, 14, 20, 71, 76, 77, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 317, 358, 607, 674, 679, 697, 701, 711, 908, 909, 914, 918, 919, 1044, 1055, 1056, 1057, 1060, 1064], "nativ": [0, 5, 28, 30, 31, 32, 33, 34, 74, 75, 123, 129, 131, 136, 137, 177, 217, 218, 220, 248, 249, 250, 271, 317, 330, 331, 332, 333, 334, 353, 360, 363, 607, 663, 665, 668, 690, 1036, 1037], "native_arrai": [0, 5, 11, 33, 34, 41, 42, 79, 80, 87, 88, 123, 162, 164, 165, 166, 167, 168, 171, 173, 177, 212, 215, 243, 247, 248, 266, 269, 275, 278, 298, 301, 317, 336, 352, 364, 365, 368, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 462, 465, 474, 477, 494, 497, 535, 541, 544, 545, 548, 565, 568, 570, 573, 575, 578, 580, 583, 584, 587, 598, 602, 607, 608, 609, 610, 611, 612, 616, 624, 625, 641, 644, 646, 648, 651, 689, 691, 692, 694, 695, 696, 701, 702, 705, 716, 719, 739, 742, 745, 746, 749, 755, 756, 762, 764, 765, 767, 768, 770, 813, 815, 828, 829, 832, 839, 842, 844, 845, 848, 858, 861, 862, 865, 870, 873, 883, 892, 895, 932, 933, 944, 945, 946, 947, 948, 949, 950, 954, 955, 959, 981, 982, 985, 986, 989, 1014, 1015, 1018], "1": [0, 5, 11, 14, 15, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 67, 68, 71, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 121, 123, 124, 128, 131, 132, 133, 134, 136, 137, 138, 139, 151, 162, 164, 165, 166, 167, 173, 177, 178, 179, 180, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 243, 247, 248, 251, 254, 266, 267, 268, 269, 270, 275, 278, 280, 283, 298, 301, 317, 320, 323, 324, 328, 333, 334, 336, 338, 342, 346, 348, 351, 352, 359, 364, 365, 366, 367, 368, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 396, 399, 404, 407, 408, 411, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 457, 458, 461, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 534, 535, 541, 544, 545, 548, 553, 556, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 612, 615, 616, 624, 625, 641, 644, 645, 646, 647, 648, 649, 651, 666, 672, 675, 676, 682, 685, 689, 691, 692, 693, 694, 695, 696, 699, 701, 702, 703, 704, 705, 706, 716, 718, 719, 720, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 777, 779, 788, 790, 794, 796, 804, 806, 807, 809, 813, 815, 816, 818, 819, 820, 821, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 908, 911, 920, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 986, 989, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "type": [0, 5, 11, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 130, 131, 132, 134, 136, 137, 139, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 316, 317, 330, 331, 332, 333, 334, 336, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 615, 616, 618, 619, 620, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 654, 655, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 672, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 914, 918, 919, 920, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055], "ndarrai": [0, 5, 33, 34, 119, 127, 129, 130, 131, 136, 177, 181, 182, 184, 217, 220, 607, 691, 695], "Or": [0, 5, 137], "jaxlib": [0, 5, 17, 119, 129, 130, 136], "xla_extens": [0, 5, 119, 129, 130, 136], "devicearrai": [0, 5, 136], "try_import_ivy_jax": 0, "warn": [0, 6, 7, 8, 9, 10], "fals": [0, 6, 7, 8, 9, 10, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 49, 50, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 128, 131, 132, 137, 138, 139, 168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 251, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 301, 302, 304, 306, 308, 316, 317, 333, 334, 345, 349, 350, 353, 358, 361, 363, 364, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 525, 526, 528, 529, 530, 532, 536, 538, 540, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 607, 608, 609, 610, 611, 612, 615, 616, 620, 621, 625, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644, 645, 647, 648, 650, 652, 656, 663, 665, 666, 668, 669, 680, 682, 683, 691, 692, 694, 698, 699, 701, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 738, 756, 757, 758, 759, 760, 761, 780, 782, 784, 785, 786, 807, 809, 822, 823, 824, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 905, 906, 907, 908, 909, 910, 914, 918, 919, 920, 921, 927, 929, 931, 932, 933, 938, 939, 941, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 961, 963, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1036, 1037, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 125], "unset": [0, 11, 125, 134, 136], "adjust": [0, 11, 981, 1002, 1005, 1010, 1013], "dict": [0, 11, 28, 29, 30, 31, 32, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 128, 132, 137, 138, 168, 170, 172, 266, 268, 270, 317, 324, 325, 333, 336, 339, 340, 341, 342, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 613, 629, 631, 632, 633, 635, 636, 637, 639, 640, 644, 647, 648, 652, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 908, 910, 911, 914, 917, 920, 921, 927, 929, 934, 936, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024], "previous": [0, 11, 17, 20, 123, 124, 134, 607, 618], "otherwis": [0, 11, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 43, 44, 49, 50, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 127, 128, 129, 130, 134, 136, 168, 170, 172, 177, 178, 179, 248, 251, 254, 266, 267, 268, 269, 270, 272, 273, 274, 298, 301, 317, 333, 364, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 478, 481, 482, 485, 486, 489, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 617, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 697, 701, 716, 717, 718, 719, 720, 734, 756, 757, 758, 759, 760, 761, 765, 767, 819, 821, 822, 824, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 904, 905, 906, 908, 921, 927, 929, 931, 944, 945, 946, 948, 955, 956, 958, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "implement": [0, 11, 19, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 248, 251, 254, 304, 307, 317, 359, 364, 365, 368, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 536, 539, 553, 556, 557, 560, 570, 573, 575, 578, 593, 597, 598, 602, 756, 771, 773, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 1025], "wa": [0, 11, 14, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 121, 134, 136, 168, 170, 172, 266, 268, 270, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 697, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 908, 921, 927, 929, 931, 955, 956, 958, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "last": [0, 11, 15, 18, 51, 52, 67, 68, 74, 75, 97, 98, 113, 114, 121, 123, 125, 132, 151, 162, 167, 317, 333, 701, 738, 739, 753, 756, 762, 764, 768, 770, 784, 786, 816, 818, 819, 821, 828, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 862, 865, 878, 881, 883, 888, 891, 970, 971, 974, 976, 979, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1054], "henc": [0, 11, 123, 128, 949, 950, 954, 955, 959, 965, 969], "here": [0, 11, 17, 18, 19, 118, 119, 121, 123, 128, 134, 135, 136, 137, 138, 139, 150, 151], "tensor": [0, 11, 13, 74, 75, 118, 119, 124, 125, 127, 129, 130, 131, 134, 136, 137, 138, 139, 151, 177, 206, 207, 209, 210, 248, 275, 278, 364, 404, 407, 534, 535, 607, 672, 676, 739, 751, 753, 756, 813, 815, 844, 858, 861, 874, 877, 883, 932, 933, 944, 947, 1025, 1044, 1052, 1054], "howev": [0, 11, 14, 17, 19, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 136, 137, 138, 139, 151], "befor": [0, 11, 17, 18, 19, 74, 75, 120, 123, 127, 129, 130, 131, 134, 137, 151, 317, 358, 364, 603, 606, 739, 754, 755, 904, 905, 906, 908, 920, 949, 950, 954, 955, 959, 965, 969, 981, 998, 1001, 1006, 1009], "becom": [0, 11, 13, 15, 18, 121, 128, 134, 139, 151, 844, 845, 848], "swap": [0, 11, 844, 892, 895], "python": [0, 11, 12, 13, 14, 17, 18, 20, 123, 132, 134, 136, 137, 151, 177, 178, 179, 317, 353, 363, 364, 557, 560, 1025, 1031], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 42, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 122, 124, 125, 126, 127, 130, 133, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1070], "op": [0, 11, 118, 134, 151], "eagertensor": [0, 11], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 29, 30, 31, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 73, 74, 75, 77, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1034, 1035, 1037, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1070], "backend": [3, 4, 5, 11, 13, 18, 19, 28, 30, 32, 74, 75, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 136, 139, 248, 285, 286, 292, 316, 317, 349, 351, 361, 607, 660, 663, 664, 670, 690, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 737, 1025, 1031, 1036, 1037, 1060, 1061, 1062, 1063, 1064, 1065], "ml": [12, 14, 15, 16, 133, 134, 135, 137, 138, 139, 150, 1025, 1031], "explos": [12, 14, 1025], "A": [12, 13, 14, 15, 20, 33, 34, 67, 68, 71, 74, 75, 76, 77, 78, 99, 100, 113, 114, 117, 123, 124, 128, 129, 130, 134, 137, 151, 177, 192, 193, 217, 218, 220, 317, 324, 325, 358, 364, 549, 552, 607, 655, 689, 756, 794, 796, 803, 804, 806, 807, 809, 844, 845, 847, 849, 883, 888, 891, 908, 909, 911, 913, 915, 916, 917, 918, 919, 922, 923, 924, 925, 981, 982, 985, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1066, 1067], "huge": [12, 14, 137, 1025], "number": [12, 13, 17, 22, 25, 26, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 99, 100, 107, 108, 113, 114, 121, 123, 128, 130, 131, 134, 137, 139, 174, 175, 176, 177, 178, 179, 181, 184, 192, 193, 206, 207, 209, 210, 212, 215, 217, 220, 248, 256, 259, 279, 280, 283, 287, 290, 293, 296, 298, 301, 304, 307, 317, 350, 351, 352, 364, 378, 381, 396, 399, 428, 431, 462, 465, 466, 469, 534, 535, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 603, 606, 607, 608, 611, 643, 655, 656, 671, 696, 700, 739, 754, 756, 768, 770, 771, 773, 788, 790, 803, 807, 809, 819, 821, 844, 845, 846, 847, 848, 849, 854, 857, 866, 869, 870, 873, 878, 879, 880, 881, 882, 883, 888, 891, 896, 899, 900, 903, 904, 905, 906, 907, 932, 933, 942, 944, 947, 949, 950, 954, 955, 956, 957, 958, 959, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055], "tool": [12, 15, 18, 135, 139, 150, 151, 1025], "have": [12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 280, 283, 317, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 644, 647, 648, 649, 651, 659, 672, 675, 676, 701, 716, 717, 718, 719, 720, 734, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "explod": [12, 13, 1025], "onto": [12, 13, 317, 343, 344, 908, 914, 920, 1025], "scene": [12, 13, 117, 133, 135, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 1025], "b": [12, 15, 16, 22, 25, 26, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 121, 124, 125, 128, 133, 134, 135, 137, 138, 139, 149, 177, 243, 247, 248, 266, 268, 269, 270, 275, 278, 298, 301, 317, 336, 364, 365, 367, 368, 369, 378, 380, 381, 382, 383, 386, 387, 389, 390, 391, 404, 407, 424, 427, 428, 430, 431, 432, 434, 435, 436, 437, 440, 462, 464, 465, 474, 477, 494, 497, 534, 541, 544, 545, 548, 561, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 587, 593, 594, 596, 597, 598, 599, 601, 602, 607, 608, 610, 611, 612, 615, 616, 624, 625, 641, 644, 646, 648, 651, 691, 692, 694, 695, 696, 701, 702, 704, 705, 706, 716, 718, 719, 720, 739, 742, 745, 746, 748, 749, 750, 755, 756, 757, 759, 760, 761, 762, 764, 765, 767, 768, 770, 794, 796, 804, 806, 813, 815, 825, 827, 828, 829, 831, 832, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 848, 849, 858, 861, 862, 865, 870, 873, 878, 880, 881, 882, 888, 891, 892, 895, 908, 911, 926, 927, 929, 930, 931, 932, 934, 936, 937, 938, 940, 944, 946, 947, 948, 949, 955, 956, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1024, 1025, 1031], "why": [12, 14, 18, 119, 128, 131, 136, 1025], "unifi": [12, 14, 74, 75, 127, 134, 151, 317, 343, 344, 345, 346, 358, 1025], "should": [12, 14, 17, 18, 19, 20, 22, 25, 26, 33, 34, 39, 40, 49, 50, 71, 74, 75, 76, 77, 78, 85, 86, 95, 96, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 174, 175, 177, 212, 215, 230, 232, 234, 235, 237, 239, 248, 261, 264, 317, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 454, 457, 458, 461, 462, 463, 464, 465, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 618, 663, 672, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 777, 779, 780, 783, 788, 790, 794, 796, 797, 799, 800, 802, 804, 806, 807, 809, 813, 815, 816, 818, 819, 821, 822, 824, 844, 874, 877, 932, 943, 944, 945, 946, 949, 950, 954, 955, 959, 965, 969, 981, 982, 985, 986, 989, 990, 993, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1025], "them": [12, 13, 14, 15, 123, 125, 127, 128, 134, 136, 137, 138, 151, 1025], "c": [12, 14, 15, 16, 17, 43, 44, 85, 86, 89, 90, 103, 104, 117, 121, 124, 128, 133, 134, 135, 137, 151, 364, 545, 548, 565, 567, 568, 607, 615, 616, 624, 696, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 745, 844, 888, 891, 908, 911, 934, 936, 944, 947, 981, 982, 985, 1002, 1005, 1010, 1013, 1025, 1031], "standard": [12, 55, 56, 101, 102, 117, 118, 119, 120, 122, 123, 127, 131, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 280, 283, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 756, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 926, 927, 928, 929, 930, 931, 932, 937, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1002, 1005, 1010, 1013, 1014, 1015, 1018, 1025, 1031, 1058, 1059], "re": [12, 13, 14, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 139, 151, 317, 358, 607, 629, 631, 756, 813, 815, 844, 878, 881, 944, 948, 1025], "collabor": [12, 13, 14, 1025], "consortium": [12, 14, 1025, 1031], "data": [12, 14, 22, 25, 26, 27, 33, 34, 36, 39, 40, 43, 44, 49, 50, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 82, 85, 86, 89, 90, 95, 96, 99, 100, 107, 108, 113, 114, 117, 118, 119, 120, 124, 126, 128, 130, 131, 136, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 249, 250, 251, 254, 261, 264, 266, 267, 268, 269, 270, 271, 275, 278, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 312, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 536, 539, 545, 548, 553, 556, 557, 560, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 665, 666, 668, 686, 701, 716, 717, 718, 719, 720, 737, 739, 752, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 804, 806, 807, 809, 813, 815, 816, 818, 819, 821, 822, 824, 844, 858, 861, 862, 865, 866, 869, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 932, 943, 944, 945, 946, 947, 956, 957, 958, 970, 971, 974, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1031, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055], "api": [12, 13, 17, 18, 117, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 133, 135, 137, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 756, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018, 1025, 1031], "open": [13, 14, 15, 16, 17, 20, 103, 104, 120, 150, 177, 178, 179, 932, 934, 935, 936, 938, 940, 1025], "project": [13, 14, 15, 17, 18, 20, 118, 123, 125, 136, 138, 150, 151, 932, 933, 937], "grown": 13, "consider": [13, 119, 121], "recent": [13, 14, 17, 18, 123], "year": [13, 15, 151, 1025], "especi": [13, 17], "deep": [13, 16, 18, 19, 74, 75, 128, 133, 137, 1025], "learn": [13, 14, 17, 19, 117, 124, 133, 139, 150, 364, 470, 473, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 904, 905, 906, 907, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "can": [13, 14, 15, 16, 17, 18, 33, 34, 35, 36, 81, 82, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 177, 181, 182, 184, 217, 220, 248, 266, 267, 268, 269, 270, 317, 356, 357, 358, 756, 777, 779, 844, 874, 877, 932, 934, 935, 936, 1025, 1031], "seen": [13, 14, 121, 123, 136, 137], "rapidli": 13, "increas": [13, 317, 338, 342, 346, 844, 854, 857, 900, 903, 908, 920], "github": [13, 18, 19, 120, 123], "repo": [13, 14, 15, 17, 18, 122, 134, 136, 137, 138, 139, 150, 1025, 1031], "contain": [13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 39, 40, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 129, 131, 133, 134, 135, 138, 139, 151, 162, 165, 166, 168, 169, 171, 177, 178, 179, 181, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 217, 222, 223, 225, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 247, 248, 251, 256, 261, 266, 269, 275, 278, 280, 287, 293, 298, 301, 304, 317, 335, 336, 339, 348, 352, 364, 365, 366, 368, 370, 373, 374, 377, 378, 379, 381, 383, 386, 387, 388, 390, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 431, 432, 433, 435, 437, 440, 441, 444, 446, 449, 450, 454, 457, 458, 461, 462, 463, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 553, 556, 557, 560, 561, 564, 565, 566, 568, 570, 571, 573, 575, 576, 578, 580, 583, 584, 587, 588, 592, 593, 595, 597, 598, 600, 602, 603, 606, 607, 608, 611, 613, 616, 619, 620, 622, 624, 625, 629, 633, 637, 641, 644, 646, 648, 651, 658, 667, 689, 691, 695, 696, 701, 702, 705, 707, 712, 716, 719, 721, 725, 729, 739, 742, 745, 746, 749, 755, 756, 757, 758, 760, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 828, 829, 830, 832, 834, 835, 837, 839, 840, 842, 844, 845, 846, 848, 850, 854, 858, 861, 862, 865, 866, 869, 870, 873, 874, 878, 881, 883, 884, 888, 892, 895, 896, 900, 904, 905, 906, 907, 908, 921, 926, 927, 930, 932, 933, 934, 937, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 957, 959, 960, 965, 969, 970, 971, 974, 976, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1018, 1020, 1021, 1023, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1060, 1064, 1066, 1067], "term": [13, 18, 128, 739, 753, 1044, 1054], "time": [13, 14, 15, 17, 18, 19, 61, 62, 107, 108, 119, 123, 124, 128, 129, 134, 137, 139, 151, 701, 707, 709, 721, 723, 739, 753, 844, 896, 899, 904, 905, 906, 907, 944, 945, 946, 949, 950, 954, 955, 956, 957, 958, 959, 1044, 1055, 1056, 1057], "These": [13, 14, 15, 18, 119, 120, 121, 123, 124, 128, 129, 131, 134, 135, 137, 138, 139, 151, 756, 771, 773, 1025, 1031], "ar": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 39, 40, 41, 42, 53, 54, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 99, 100, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 152, 160, 177, 178, 179, 317, 324, 325, 348, 352, 354, 358, 364, 432, 433, 434, 435, 436, 522, 525, 526, 529, 561, 564, 570, 571, 572, 573, 574, 593, 594, 595, 596, 597, 607, 608, 609, 610, 611, 612, 615, 616, 617, 653, 659, 660, 664, 671, 673, 686, 701, 738, 739, 752, 756, 762, 764, 780, 783, 784, 786, 788, 790, 797, 799, 807, 809, 810, 812, 819, 821, 844, 845, 846, 847, 848, 849, 862, 865, 878, 879, 880, 881, 882, 908, 910, 914, 920, 932, 937, 938, 940, 944, 945, 946, 947, 949, 950, 954, 1025, 1066, 1067], "written": [13, 17, 118, 119, 120, 123, 127, 131, 134, 136, 139, 151], "mani": [13, 14, 15, 17, 18, 19, 74, 75, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 151, 844, 883], "differ": [13, 14, 15, 17, 18, 71, 74, 75, 76, 77, 78, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 151, 248, 280, 283, 317, 335, 336, 339, 340, 364, 378, 381, 536, 539, 588, 592, 739, 752, 844, 888, 891, 981, 998, 1001, 1006, 1009, 1025], "while": [13, 14, 17, 18, 71, 74, 75, 76, 77, 78, 121, 123, 125, 131, 132, 138, 139, 151, 364, 522, 525, 526, 529, 949, 950, 954, 981, 990, 993], "thi": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 168, 169, 170, 172, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 266, 267, 268, 269, 270, 298, 301, 317, 338, 342, 346, 353, 358, 363, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 404, 407, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 458, 461, 462, 463, 464, 465, 494, 497, 522, 525, 526, 529, 534, 545, 548, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 612, 643, 644, 646, 648, 649, 663, 674, 679, 691, 692, 693, 694, 701, 702, 703, 704, 706, 707, 709, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 737, 738, 739, 742, 746, 747, 748, 749, 750, 752, 755, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 784, 786, 803, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 847, 849, 858, 861, 862, 865, 874, 877, 878, 879, 880, 881, 882, 888, 891, 908, 914, 920, 921, 926, 927, 928, 929, 930, 931, 934, 936, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 981, 986, 989, 990, 993, 1002, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1031, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "wonder": [13, 15, 136], "thing": [13, 14, 15, 17, 18, 19, 123, 125, 136, 137], "research": [13, 150], "develop": [13, 14, 15, 16, 17, 18, 19, 150, 151, 1025], "also": [13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 168, 169, 170, 172, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 266, 267, 268, 269, 270, 298, 301, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 404, 407, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 462, 463, 464, 465, 534, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 646, 647, 648, 649, 650, 652, 663, 691, 692, 693, 694, 701, 702, 703, 704, 706, 707, 709, 716, 717, 718, 720, 739, 742, 746, 747, 748, 749, 750, 752, 755, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 847, 849, 858, 861, 862, 865, 878, 879, 880, 881, 882, 904, 905, 906, 907, 908, 909, 910, 918, 919, 920, 926, 927, 928, 929, 930, 931, 934, 936, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1044, 1054], "consid": [13, 14, 74, 75, 118, 124, 135, 136, 137, 364, 522, 525, 526, 529, 949, 950, 954, 955, 959, 965, 969], "speed": [13, 123], "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 17, 18, 19, 20, 71, 74, 75, 76, 77, 78, 89, 90, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 149, 151, 162, 164, 165, 166, 167, 168, 171, 173, 317, 336, 359, 364, 424, 427, 584, 587, 701, 702, 704, 705, 706, 738, 739, 745, 746, 749, 949, 950, 954, 955, 959, 970, 971, 974, 981, 982, 985, 1025, 1031], "significantli": 13, "hinder": [13, 119], "librari": [13, 14, 15, 22, 25, 26, 134, 139, 149, 151, 317, 359, 364, 458, 461, 522, 525, 526, 529, 756, 771, 773, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 1025], "outdat": 13, "month": 13, "rigor": [13, 123], "maintain": [13, 18, 970, 971, 974, 976, 979], "against": [13, 74, 75, 123, 151, 248, 256, 259, 756, 780, 783, 784, 786, 788, 790, 797, 799, 944, 945], "newest": 13, "version": [13, 14, 15, 17, 120, 129, 134, 136, 756, 771, 773, 1025], "For": [13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 43, 44, 89, 90, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 212, 215, 364, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 701, 716, 717, 718, 719, 720, 737, 756, 807, 809, 816, 818, 844, 845, 848, 888, 891, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 994, 997, 1006, 1009, 1036, 1037], "softwar": [13, 14, 17, 18], "pipelin": [13, 127, 139], "where": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 33, 34, 53, 54, 67, 68, 71, 74, 75, 76, 77, 99, 100, 113, 114, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 151, 177, 200, 201, 202, 204, 212, 215, 364, 396, 399, 454, 457, 506, 509, 536, 539, 553, 556, 607, 659, 663, 672, 701, 738, 756, 771, 773, 788, 790, 797, 799, 800, 802, 807, 809, 810, 812, 816, 818, 819, 821, 844, 845, 846, 847, 848, 849, 854, 857, 858, 861, 866, 869, 888, 891, 900, 903, 908, 909, 919, 932, 933, 944, 947, 981, 1002, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "rapid": [13, 14, 17], "prototyp": 13, "vital": [13, 139], "signific": [13, 14, 151], "bottleneck": 13, "As": [13, 18, 69, 70, 115, 116, 119, 123, 124, 127, 128, 129, 130, 131, 134, 136, 137, 138, 151, 949, 950, 954, 955, 959, 965, 969], "new": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 41, 42, 55, 56, 74, 75, 81, 82, 101, 102, 117, 118, 120, 121, 123, 126, 128, 129, 131, 133, 136, 139, 150, 177, 186, 195, 198, 200, 201, 204, 222, 223, 225, 228, 240, 242, 243, 247, 248, 312, 364, 400, 403, 506, 509, 549, 552, 607, 629, 631, 633, 635, 637, 639, 643, 644, 646, 648, 649, 651, 675, 676, 677, 678, 684, 685, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 844, 858, 861, 874, 877, 888, 891, 908, 913, 924, 925, 926, 927, 928, 929, 930, 931, 1025, 1036, 1037, 1044, 1054, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "futur": [13, 15, 17, 18, 136, 151, 756, 771, 773], "avail": [13, 17, 18, 87, 88, 120, 130, 151, 317, 333, 349, 350, 351, 361, 607, 633, 634, 635, 636], "specif": [13, 19, 87, 88, 119, 123, 124, 127, 128, 129, 130, 131, 134, 135, 136, 138, 139, 150, 151, 248, 304, 307, 317, 356, 359, 364, 522, 525, 526, 529, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647, 670, 756, 771, 773, 813, 815, 844, 888, 891, 904, 905, 906, 907, 932, 933, 981, 986, 989, 990, 993, 994, 997, 1025, 1028, 1030, 1031, 1056, 1057], "quickli": [13, 15, 17, 18, 137, 138], "obsolet": [13, 15], "user": [13, 14, 17, 18, 20, 117, 123, 125, 128, 131, 133, 151, 1044, 1055, 1056, 1057], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 69, 70, 115, 116, 121, 123, 128, 132, 133, 136, 137, 138, 139, 151, 1025], "desir": [13, 35, 36, 74, 75, 81, 82, 248, 251, 254, 266, 267, 268, 269, 270, 317, 359, 607, 659, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055], "provid": [13, 17, 18, 67, 68, 74, 75, 113, 114, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 134, 138, 150, 151, 174, 175, 177, 212, 215, 248, 272, 273, 274, 292, 304, 307, 316, 317, 333, 607, 628, 672, 676, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 756, 819, 821, 844, 862, 865, 888, 891, 944, 945, 981, 1002, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 34, 41, 42, 53, 54, 67, 68, 69, 70, 74, 75, 87, 88, 99, 100, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 150, 151, 152, 160, 174, 175, 177, 178, 179, 230, 232, 234, 235, 237, 239, 317, 324, 348, 354, 607, 608, 611, 615, 616, 644, 645, 648, 650, 652, 653, 673, 691, 692, 693, 694, 695, 739, 753, 756, 804, 806, 813, 815, 822, 824, 844, 862, 865, 878, 879, 880, 881, 882, 904, 905, 906, 907, 908, 909, 910, 919, 920, 921, 932, 933, 938, 940, 1014, 1019, 1025, 1028, 1030], "modern": [13, 14], "simpl": [13, 17, 18, 118, 120, 121, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 139, 151, 607, 641], "scalabl": [13, 134], "manner": [13, 28, 31, 32, 74, 75, 118, 120, 123, 130, 137, 150, 151, 908, 920], "must": [13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 124, 127, 128, 129, 130, 134, 138, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 317, 343, 344, 345, 346, 358, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 629, 631, 633, 635, 637, 639, 642, 648, 649, 651, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1060, 1064], "determin": [13, 22, 25, 26, 39, 40, 49, 50, 67, 68, 71, 74, 75, 76, 77, 85, 86, 95, 96, 113, 114, 120, 124, 128, 129, 130, 248, 266, 269, 271, 279, 292, 293, 296, 298, 301, 316, 317, 349, 350, 351, 361, 364, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 432, 433, 434, 435, 436, 437, 440, 441, 444, 454, 457, 458, 461, 478, 481, 482, 485, 486, 489, 498, 501, 502, 505, 510, 513, 514, 517, 530, 533, 536, 539, 553, 556, 557, 560, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 611, 615, 616, 658, 660, 664, 665, 666, 667, 668, 686, 700, 701, 716, 719, 739, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 777, 779, 780, 783, 788, 790, 794, 796, 797, 799, 803, 804, 806, 816, 818, 819, 821, 822, 824, 904, 905, 906, 907, 949, 950, 954, 955, 959, 965, 969, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "exactli": [13, 15, 121, 128, 130, 1025, 1031], "common": [13, 19, 74, 75, 121, 124, 126, 128, 130, 132, 151], "ground": [13, 123], "li": 13, "between": [13, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 119, 121, 123, 124, 127, 128, 133, 135, 136, 137, 139, 150, 177, 178, 179, 248, 280, 283, 364, 396, 399, 553, 556, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 858, 861, 888, 891, 908, 914, 932, 934, 935, 949, 950, 954, 955, 959, 965, 969, 1025, 1060, 1062], "find": [13, 17, 18, 74, 75, 123, 134, 137, 949, 950, 954, 955, 959, 965, 969, 1025], "exist": [13, 14, 17, 19, 20, 22, 25, 26, 71, 74, 75, 76, 77, 120, 121, 122, 123, 124, 125, 126, 131, 134, 151, 607, 628, 1060, 1064], "essenti": [13, 14, 19, 121, 124, 130], "order": [13, 17, 18, 20, 71, 74, 75, 76, 77, 78, 119, 120, 121, 125, 127, 128, 129, 130, 136, 137, 139, 151, 364, 396, 399, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 756, 771, 773, 784, 786, 807, 809, 810, 812, 822, 824, 844, 862, 865, 904, 905, 906, 944, 947, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979, 1066, 1067], "design": [13, 14, 117, 131, 134, 136, 151], "univers": 13, "abstract": [13, 128, 138, 151, 317, 329, 1060, 1064], "In": [13, 15, 17, 18, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 317, 353, 359, 360, 363, 364, 378, 381, 536, 539, 557, 560, 607, 613, 663, 844, 874, 877, 932, 938, 940, 1025], "search": [13, 17, 28, 31, 32, 60, 74, 75, 106, 118, 121, 123, 945, 946, 947, 948], "languag": [13, 15, 134], "first": [13, 14, 17, 18, 20, 22, 25, 26, 39, 40, 61, 62, 71, 76, 77, 85, 86, 107, 108, 119, 121, 123, 124, 127, 128, 134, 136, 137, 139, 174, 175, 177, 206, 207, 209, 210, 248, 303, 312, 317, 333, 345, 364, 378, 379, 380, 381, 382, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 588, 592, 607, 615, 701, 711, 756, 762, 764, 768, 770, 771, 773, 780, 783, 794, 796, 800, 802, 807, 809, 813, 815, 819, 821, 844, 850, 853, 878, 881, 888, 891, 892, 895, 904, 905, 906, 907, 908, 909, 918, 919, 932, 943, 944, 945, 946, 949, 950, 954, 955, 956, 957, 958, 959, 1044, 1055, 1056, 1057, 1060, 1064], "see": [13, 16, 17, 18, 19, 22, 25, 26, 39, 40, 67, 68, 71, 76, 77, 85, 86, 113, 114, 119, 122, 124, 128, 130, 136, 137, 150, 151, 177, 178, 179, 195, 198, 206, 207, 209, 210, 248, 261, 264, 304, 307, 364, 378, 379, 380, 381, 382, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 458, 461, 490, 493, 514, 517, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 588, 592, 756, 788, 790, 797, 799, 804, 806, 819, 821, 822, 824, 944, 946, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "clear": [13, 14, 15, 18, 19, 121, 129, 130, 134, 136, 317, 332], "front": [13, 133, 134, 137, 1025, 1031], "runner": 13, "look": [13, 17, 18, 20, 118, 119, 121, 123, 124, 125, 128, 129, 130, 134, 136, 138, 139, 1025], "littl": [13, 136], "deeper": [13, 18, 117, 133, 317, 338, 342, 346, 908, 919, 920], "follow": [13, 14, 17, 18, 19, 20, 74, 75, 118, 120, 121, 123, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 151, 248, 287, 290, 317, 358, 364, 557, 560, 607, 661, 662, 663, 684, 685, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 754, 755, 756, 800, 802, 822, 824, 908, 914, 920, 949, 950, 954, 955, 959, 965, 969, 1025, 1044, 1054, 1060, 1064], "same": [13, 15, 17, 18, 20, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 61, 62, 74, 75, 85, 86, 89, 90, 93, 94, 95, 96, 99, 100, 107, 108, 118, 119, 121, 123, 124, 127, 128, 130, 131, 132, 134, 136, 138, 139, 177, 178, 179, 187, 188, 190, 201, 202, 204, 212, 215, 225, 226, 228, 230, 232, 234, 235, 237, 239, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 317, 324, 325, 358, 364, 365, 366, 367, 368, 369, 378, 381, 408, 411, 428, 429, 430, 431, 462, 463, 464, 465, 536, 539, 557, 560, 561, 564, 565, 566, 567, 568, 569, 603, 606, 607, 642, 644, 646, 648, 649, 651, 672, 675, 676, 701, 716, 717, 718, 719, 720, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 816, 818, 819, 821, 844, 850, 853, 862, 865, 866, 869, 878, 879, 880, 881, 882, 884, 887, 888, 891, 904, 905, 906, 908, 921, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1006, 1009, 1010, 1013, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "core": [13, 17, 19, 130, 134, 139, 317, 350, 1025], "principl": 13, "oper": [13, 17, 19, 22, 25, 26, 47, 48, 71, 74, 75, 76, 77, 87, 88, 93, 94, 120, 121, 123, 124, 127, 128, 130, 131, 137, 138, 177, 206, 207, 209, 210, 248, 304, 307, 364, 378, 381, 420, 423, 424, 427, 474, 477, 541, 544, 545, 548, 557, 560, 584, 587, 607, 617, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647, 686, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752], "expos": [13, 134, 138, 607, 623], "almost": [13, 18, 128, 135, 137], "ident": [13, 15, 74, 75, 124, 126, 128, 136, 137, 151, 317, 348, 908, 921, 1025], "uniqu": [13, 61, 62, 107, 108, 123, 124, 128, 151, 317, 324, 325, 904, 905, 906, 907, 908, 914, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969], "syntax": [13, 14, 132], "There": [13, 17, 18, 121, 124, 127, 128, 129, 132, 134, 137, 151], "onli": [13, 16, 17, 18, 22, 25, 26, 74, 75, 118, 119, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 149, 151, 317, 354, 364, 522, 525, 526, 529, 756, 780, 783, 800, 802, 844, 862, 865, 908, 909, 910, 918, 919, 944, 945, 946, 981, 990, 993, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "so": [13, 14, 17, 18, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 151, 152, 160, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 757, 758, 759, 761, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 845, 846, 847, 849, 878, 879, 880, 882, 908, 909, 919, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025], "wai": [13, 14, 17, 123, 125, 131, 136, 137, 138, 139, 151], "manipul": [13, 54, 100, 118, 139, 150, 845, 848, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 881, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903], "unsurprisingli": [13, 121], "fundament": [13, 128, 134], "consist": [13, 74, 75, 127, 129, 131, 317, 346, 756, 771, 773, 981, 982, 985, 1056, 1057], "each": [13, 14, 15, 18, 19, 23, 24, 39, 40, 41, 42, 47, 48, 49, 50, 53, 54, 61, 62, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 93, 94, 95, 96, 99, 100, 107, 108, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 150, 151, 162, 165, 166, 168, 169, 170, 171, 172, 177, 212, 215, 248, 256, 259, 317, 324, 325, 335, 336, 337, 338, 339, 340, 341, 345, 358, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 381, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 647, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 771, 773, 780, 783, 788, 790, 791, 793, 797, 799, 804, 806, 807, 809, 844, 854, 857, 870, 873, 878, 879, 880, 881, 882, 883, 888, 891, 896, 899, 900, 903, 908, 914, 921, 932, 933, 944, 947, 949, 950, 954, 955, 956, 957, 958, 959, 981, 982, 985, 1025, 1031, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "veri": [13, 14, 17, 18, 118, 119, 121, 123, 124, 128, 130, 131, 135, 137, 138, 139, 151, 1025], "similar": [13, 118, 123, 128, 129, 130, 137, 151, 364, 557, 560, 739, 754, 1044, 1055], "convent": [13, 150, 756, 780, 783, 981, 982, 985], "those": [13, 17, 18, 19, 53, 54, 74, 75, 99, 100, 123, 128, 134, 139, 177, 178, 179, 701, 737, 756, 800, 802, 807, 809, 844, 845, 846, 847, 848, 849], "introduc": [13, 128, 137, 844, 878, 881, 949, 950, 954], "2006": 13, "layer": [13, 48, 55, 56, 94, 101, 102, 118, 120, 134, 135, 138, 740, 741, 742, 743, 744, 745, 746, 749, 751, 752, 753, 754, 755, 926, 927, 928, 929, 930, 931, 1025, 1038, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "therefor": [13, 18, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 428, 431, 462, 465, 534, 545, 548, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 768, 770, 844, 878, 881, 926, 927, 930, 949, 955, 959, 981, 986, 989, 1014, 1015, 1018], "present": [13, 18, 74, 75, 119, 122, 128, 129, 130, 131, 134], "itself": [13, 17, 18, 119, 128, 131, 138, 150, 151, 607, 613, 908, 920], "cut": 13, "cloth": 13, "adher": [13, 14, 120, 122, 134, 139], "semant": [13, 134, 139, 364, 557, 560], "round": [13, 14, 15, 17, 18, 19, 20, 39, 40, 85, 86, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 364, 378, 381, 428, 429, 430, 431, 462, 463, 464, 465, 466, 469, 536, 539, 580, 583, 603, 606, 1025], "up": [13, 14, 15, 16, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 151], "hopefulli": [13, 14, 15, 17, 18, 19, 20, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150], "paint": [13, 134], "pictur": [13, 134], "how": [13, 15, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 150, 151, 1025, 1031, 1044, 1055, 1056, 1057], "pleas": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 1025], "check": [13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 43, 44, 74, 75, 89, 90, 123, 128, 133, 134, 136, 137, 138, 139, 150, 248, 271, 285, 286, 292, 293, 296, 316, 317, 353, 363, 607, 617, 641, 658, 665, 666, 667, 668, 686, 700, 701, 716, 717, 718, 719, 720, 756, 771, 773, 908, 909, 918, 919, 920, 1025], "out": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 261, 262, 263, 264, 265, 275, 277, 317, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 619, 620, 621, 622, 624, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1052], "discuss": [13, 14, 15, 16, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 1025], "faq": [13, 14, 15, 134, 136, 137, 138, 139, 150], "reach": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 317, 338, 342, 346, 908, 920], "discord": [13, 14, 15, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 1025], "you": [13, 14, 15, 16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 150, 151, 1025, 1031], "question": [13, 14, 15, 17, 18, 121, 123, 134, 136, 137, 138, 139, 150, 151, 1025], "With": [14, 15, 17, 22, 25, 26, 39, 40, 41, 42, 43, 44, 71, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 134, 162, 164, 165, 166, 167, 168, 171, 173, 177, 212, 215, 243, 247, 248, 266, 269, 275, 278, 298, 301, 317, 336, 352, 364, 365, 368, 369, 378, 381, 382, 383, 386, 387, 390, 391, 404, 407, 424, 427, 428, 431, 432, 433, 434, 435, 436, 437, 440, 462, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 597, 598, 599, 602, 607, 608, 609, 610, 611, 612, 616, 624, 625, 641, 644, 646, 648, 651, 689, 691, 692, 693, 694, 695, 696, 701, 702, 703, 705, 716, 717, 718, 719, 720, 739, 742, 745, 746, 749, 755, 756, 757, 760, 761, 762, 764, 765, 767, 768, 770, 784, 786, 813, 815, 828, 829, 832, 833, 834, 838, 839, 842, 843, 844, 845, 848, 849, 858, 861, 862, 865, 870, 873, 878, 881, 882, 883, 892, 895, 908, 911, 926, 927, 929, 930, 931, 932, 933, 934, 936, 937, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1018], "central": 14, "goal": [14, 19], "being": [14, 15, 17, 18, 74, 75, 119, 121, 123, 126, 127, 128, 129, 130, 131, 132, 134, 137, 150, 151, 177, 178, 179, 607, 674, 679, 949, 960, 964, 1025], "would": [14, 17, 18, 20, 117, 119, 120, 121, 123, 125, 126, 127, 128, 131, 133, 134, 136, 138, 139, 151, 162, 167, 317, 359, 1025], "entir": [14, 15, 18, 67, 68, 74, 75, 113, 114, 121, 122, 123, 127, 128, 131, 136, 137, 138, 139, 151, 317, 358, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1053], "forgiven": 14, "rais": [14, 18, 67, 68, 74, 75, 113, 114, 131, 132, 134, 136, 248, 261, 264, 364, 454, 457, 553, 556, 607, 617, 654, 663, 677, 685, 697, 701, 738, 756, 780, 783, 787, 819, 821, 844, 884, 887, 888, 891, 944, 947, 981, 986, 989, 994, 997, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1056, 1057, 1060, 1064], "an": [14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 39, 40, 43, 44, 49, 50, 53, 54, 61, 62, 67, 68, 69, 70, 74, 75, 85, 86, 89, 90, 99, 100, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 150, 151, 162, 165, 166, 168, 169, 171, 176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 266, 269, 280, 283, 298, 301, 304, 307, 317, 336, 340, 359, 364, 365, 366, 368, 370, 373, 374, 377, 378, 379, 381, 383, 386, 387, 388, 390, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 431, 432, 433, 435, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 565, 566, 568, 570, 571, 573, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 618, 619, 620, 622, 624, 642, 643, 644, 646, 659, 663, 665, 666, 667, 668, 691, 695, 696, 697, 701, 716, 717, 718, 719, 720, 734, 736, 737, 738, 739, 742, 746, 749, 755, 756, 757, 758, 760, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 787, 788, 790, 791, 793, 797, 799, 800, 802, 803, 804, 806, 807, 809, 816, 818, 819, 821, 822, 824, 844, 845, 846, 848, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 908, 914, 926, 927, 930, 932, 934, 935, 936, 943, 944, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1036, 1037, 1056, 1057, 1060, 1061, 1062, 1064], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 19, 119, 124, 129, 130, 131, 134, 136, 139, 151, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "other": [14, 17, 18, 22, 25, 26, 41, 42, 71, 74, 75, 76, 77, 87, 88, 118, 120, 121, 123, 124, 127, 128, 131, 132, 134, 136, 138, 139, 149, 150, 151, 174, 175, 177, 178, 179, 364, 458, 461, 607, 608, 609, 610, 611, 612, 613, 701, 711, 932, 938, 940, 949, 960, 964, 981, 1002, 1005, 1010, 1013, 1025], "strong": [14, 151], "industri": 14, "back": [14, 127, 133, 134, 136, 151, 1025, 1031, 1056, 1057, 1060, 1064], "momentum": 14, "won": [14, 15, 18, 139], "ad": [14, 17, 18, 19, 115, 116, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 134, 138, 151, 607, 684, 685, 756, 771, 773, 844, 858, 861, 1066, 1067], "just": [14, 15, 17, 18, 120, 121, 123, 124, 131, 134, 136, 137, 151, 981, 982, 985, 1044, 1053], "make": [14, 15, 17, 18, 19, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 317], "problem": [14, 18, 127, 136], "even": [14, 15, 17, 18, 119, 120, 124, 129, 130, 136, 137, 138, 139, 151, 364, 553, 556, 561, 564], "wors": 14, "rather": [14, 43, 44, 74, 75, 89, 90, 118, 120, 123, 128, 139, 151, 177, 178, 179, 317, 358, 607, 665, 666, 668, 701, 716, 717, 718, 719, 720], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 17, 18, 124, 128], "feasibl": 14, "space": [14, 177, 178, 179, 206, 207, 209, 210, 607, 643, 701, 738], "case": [14, 17, 18, 19, 28, 31, 32, 71, 74, 75, 76, 77, 78, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 136, 138, 139, 151, 177, 212, 215, 317, 353, 360, 363, 364, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 424, 427, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 607, 663, 676, 756, 784, 786, 844, 874, 877, 908, 911, 917, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013, 1044, 1055, 1056, 1057, 1060, 1064], "unlik": [14, 121, 128, 317], "charger": 14, "charact": [14, 132], "encod": [14, 137, 607, 643], "instant": [14, 1025], "messag": [14, 18, 132, 134, 136, 1069, 1070], "much": [14, 18, 118, 127, 128, 131, 134, 136, 137], "doe": [14, 18, 20, 74, 75, 117, 118, 119, 120, 121, 123, 124, 125, 129, 131, 134, 136, 137, 151, 364, 424, 427, 607, 663, 844, 883], "mandat": [14, 123, 131], "adopt": [14, 18, 127], "continu": [14, 15, 122, 123, 132, 151], "own": [14, 15, 17, 120, 123, 132, 134, 151], "signatur": [14, 118, 119, 120, 121, 123, 128, 129, 130, 131, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "replac": [14, 18, 20, 53, 54, 74, 75, 99, 100, 121, 123, 126, 128, 129, 130, 134, 136, 139, 151, 607, 675, 676, 844, 845, 846, 847, 848, 849, 932, 933], "your": [14, 15, 16, 17, 19, 20, 118, 120, 137, 138, 151, 1025], "10": [14, 17, 20, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 128, 134, 136, 137, 177, 200, 209, 210, 211, 317, 364, 404, 407, 408, 411, 437, 440, 474, 477, 494, 497, 502, 505, 575, 576, 577, 578, 579, 580, 583, 607, 625, 644, 646, 674, 679, 701, 721, 722, 723, 724, 739, 745, 756, 765, 767, 768, 770, 794, 796, 813, 815, 844, 862, 865, 870, 873, 883, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 944, 947, 949, 950, 954, 981, 982, 985, 986, 989, 1060, 1062], "100": [14, 15, 103, 104, 123, 137, 138, 139, 151, 364, 580, 583, 934, 936, 1025], "despit": [14, 128, 130], "distinct": [14, 120, 128, 131, 133, 949, 950, 954, 955, 959, 965, 969, 1025], "still": [14, 74, 75, 120, 123, 129, 136, 138, 151, 1025], "believ": [14, 18], "share": [14, 74, 75, 121, 123, 124, 125, 128, 134, 248, 312], "bring": [14, 123, 134, 135], "benefit": [14, 15, 17, 18, 127, 128, 131, 136, 137, 151], "unrel": [14, 18], "what": [14, 15, 18, 117, 119, 120, 121, 123, 126, 128, 132, 133, 134, 136, 137, 138, 139, 150, 151, 1025], "again": [14, 15, 18, 118, 121, 123, 128, 131, 137, 139, 151], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 137], "most": [14, 17, 18, 74, 75, 118, 119, 123, 124, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 151, 756, 771, 773], "technologi": 14, "sector": [14, 39, 40, 85, 86, 364, 374, 377, 387, 388, 389, 390, 391, 400, 403], "full": [14, 15, 18, 22, 25, 26, 71, 76, 77, 119, 120, 123, 129, 134, 151, 177, 248, 280, 283, 364, 474, 477, 494, 497, 739, 745, 756, 800, 802, 804, 806, 807, 809], "success": 14, "reason": [14, 18, 118, 121, 124, 127, 128, 129, 131, 134, 136, 364, 557, 560], "build": [14, 16, 17, 124, 133, 135, 138, 139, 151, 949, 950, 954, 955, 959, 965, 969, 1025, 1044, 1055, 1056, 1057], "custom": [14, 123, 138], "comput": [14, 15, 17, 22, 25, 26, 51, 52, 74, 75, 97, 98, 123, 124, 128, 134, 137, 151, 317, 358, 364, 378, 381, 404, 407, 416, 419, 424, 427, 446, 449, 450, 453, 470, 473, 474, 477, 490, 493, 494, 497, 518, 521, 522, 525, 526, 529, 530, 533, 536, 539, 541, 544, 545, 548, 607, 619, 620, 622, 625, 626, 701, 702, 705, 707, 709, 711, 712, 714, 721, 723, 725, 727, 729, 731, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 752, 754, 756, 757, 760, 762, 764, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 800, 802, 803, 804, 806, 807, 809, 819, 821, 822, 824, 828, 829, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 908, 914, 949, 950, 954, 955, 959, 965, 969, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "thank": [14, 137], "interoper": 14, "compon": [14, 134, 701, 738], "bio": [14, 17], "hardwar": [14, 17], "initi": [14, 18, 71, 74, 75, 76, 77, 78, 123, 125, 129, 130, 317, 739, 753, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1060, 1064], "pcie": 14, "interfac": [14, 139, 151], "motherboard": 14, "raid": 14, "storag": [14, 137], "virtual": [14, 18, 20], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 28, 29, 30, 31, 32, 33, 34, 49, 50, 74, 75, 95, 96, 123, 124, 138, 139, 177, 181, 182, 184, 217, 220, 230, 232, 234, 235, 237, 239, 607, 613, 688, 690, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 788, 790, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 908, 910, 920], "factor": [14, 43, 44, 47, 48, 49, 50, 89, 90, 93, 94, 95, 96, 317, 324, 356, 357, 358, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 725, 727, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 756, 757, 758, 759, 760, 761, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1060, 1061, 1062, 1063], "sata": 14, "connect": [14, 17, 138, 139, 1044, 1054, 1055], "host": [14, 151], "bu": 14, "adapt": [14, 701, 725, 727, 1060, 1063], "devic": [14, 18, 22, 25, 26, 33, 34, 38, 41, 42, 74, 75, 79, 80, 84, 103, 104, 117, 118, 124, 126, 129, 136, 137, 151, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 607, 644, 646, 648, 649, 651, 672, 675, 676, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "html": [14, 20, 120, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "enabl": [14, 17, 18, 71, 74, 75, 76, 77, 78, 123, 124, 127, 128, 131, 133, 134, 135, 137, 139, 151, 701, 738], "anyon": [14, 16, 151], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 74, 75, 128, 908, 909, 918, 919], "commun": [14, 16, 18, 19, 151, 1025, 1031], "network": [14, 124, 128, 134, 138, 150, 739, 752, 1025, 1033, 1044, 1056, 1057], "smtp": 14, "possibl": [14, 16, 17, 18, 19, 120, 121, 123, 128, 129, 131, 134, 137, 150, 151, 607, 669, 981, 986, 989, 994, 997], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 16, 17, 18, 49, 50, 95, 96, 123, 128, 131, 138, 151, 756, 757, 758, 759, 760, 761, 807, 809, 1025], "email": 14, "ieee": [14, 176, 248, 280, 283, 364, 378, 381, 458, 461, 536, 539, 557, 560, 580, 583], "754": [14, 176, 248, 280, 283, 364, 378, 381, 458, 461, 536, 539, 557, 560, 580, 583], "allow": [14, 123, 134, 151, 177, 206, 207, 209, 210, 607, 669, 1056, 1057], "calcul": [14, 51, 52, 71, 74, 75, 76, 77, 78, 97, 98, 120, 364, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 441, 444, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 536, 539, 553, 556, 570, 573, 575, 578, 580, 583, 588, 592, 593, 597, 598, 602, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "live": [14, 15], "depend": [14, 17, 18, 22, 25, 26, 120, 123, 126, 128, 129, 134, 151, 248, 251, 254, 364, 365, 368, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 570, 573, 575, 578, 593, 597, 598, 602, 756, 771, 773, 800, 802, 804, 806, 807, 809, 944, 948, 970, 971, 974, 976, 979], "did": [14, 19, 139], "aris": [14, 151], "until": [14, 18, 132, 151, 1025], "substanti": [14, 18, 123, 127], "innov": 14, "growth": 14, "usag": [14, 134, 317, 358], "relev": [14, 17, 19, 121, 128, 129, 137, 1060, 1061, 1062, 1063, 1064, 1065], "area": [14, 39, 40, 85, 86, 131, 149, 364, 374, 377, 387, 388, 389, 390, 391, 400, 403, 1025], "necess": 14, "parti": [14, 151], "could": [14, 15, 17, 18, 121, 123, 128, 129, 131, 134, 136, 137, 138, 949, 950, 954, 955, 959, 965, 969], "easili": [14, 18, 137, 138, 139, 151, 1025], "engag": [14, 16, 17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "regard": [14, 128, 317], "effect": [14, 119, 120, 127, 128, 151, 177, 212, 215, 701, 729, 731, 981, 1002, 1005, 1010, 1013], "2015": 14, "sinc": [14, 17, 18, 123, 151], "alongsid": 14, "machin": [14, 17, 124, 150, 248, 280, 283, 287, 290, 364, 470, 473, 756, 788, 790, 797, 799], "given": [14, 15, 17, 18, 19, 20, 41, 42, 51, 52, 53, 54, 74, 75, 97, 98, 99, 100, 103, 104, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 150, 177, 178, 179, 186, 206, 207, 209, 210, 317, 347, 353, 355, 356, 357, 358, 360, 363, 607, 625, 626, 648, 649, 651, 675, 676, 680, 699, 701, 702, 705, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 740, 741, 742, 743, 744, 745, 746, 749, 756, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 858, 861, 862, 865, 870, 873, 878, 879, 880, 881, 882, 883, 896, 899, 908, 915, 916, 932, 934, 935, 936, 937, 938, 940, 943, 970, 976, 979, 1036, 1037], "frame": [14, 150], "less": [14, 18, 22, 25, 26, 39, 40, 74, 75, 85, 86, 119, 121, 128, 133, 134, 364, 370, 373, 374, 377, 383, 386, 396, 399, 428, 431, 498, 501, 502, 505, 510, 513, 553, 556, 557, 560, 565, 568, 580, 583, 756, 788, 790, 797, 799, 822, 824, 932, 938, 940, 981, 1010, 1013], "matur": [14, 151], "state": [14, 119, 120, 123, 133, 134, 135, 137, 150, 364, 536, 539, 607, 683, 698, 739, 753, 1025, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "than": [14, 18, 22, 25, 26, 43, 44, 61, 62, 74, 75, 89, 90, 107, 108, 118, 121, 123, 128, 131, 134, 137, 138, 139, 151, 177, 178, 179, 248, 280, 283, 317, 358, 364, 370, 373, 374, 377, 383, 386, 396, 399, 412, 415, 420, 423, 428, 431, 462, 465, 466, 469, 498, 501, 502, 505, 510, 513, 534, 553, 556, 557, 560, 565, 568, 580, 583, 603, 606, 607, 665, 666, 668, 701, 716, 717, 718, 719, 720, 756, 762, 764, 780, 783, 788, 790, 797, 799, 822, 824, 844, 845, 848, 862, 865, 884, 887, 932, 938, 940, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 981, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "preced": [14, 138], "mention": [14, 17, 18, 119, 121, 124, 131], "aros": 14, "70": [14, 756, 794, 796, 981, 982, 985], "80": [14, 756, 794, 796, 981, 982, 985], "90": [14, 103, 104, 364, 424, 427, 561, 564, 756, 794, 796, 934, 936, 981, 982, 985], "effort": [14, 16, 151], "stage": [14, 16, 18, 20, 117, 132, 1025], "complet": [14, 18, 19, 74, 75, 127, 128, 136, 137, 756, 800, 802], "natur": [14, 121, 127, 128, 150, 364, 454, 457, 498, 501, 506, 509, 756, 803], "like": [14, 17, 18, 20, 43, 44, 89, 90, 117, 118, 119, 120, 121, 123, 130, 131, 133, 134, 136, 137, 138, 139, 150, 151, 701, 716, 717, 718, 719, 720, 932, 938, 940, 1025], "certainli": 14, "mission": [14, 1025], "creat": [14, 16, 17, 18, 20, 33, 34, 41, 42, 74, 75, 103, 104, 123, 129, 130, 131, 134, 135, 138, 149, 150, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 217, 218, 220, 222, 223, 225, 226, 228, 240, 242, 243, 245, 247, 317, 324, 325, 607, 644, 646, 648, 649, 651, 672, 675, 676, 689, 701, 736, 932, 933, 934, 935, 936, 938, 940, 1025, 1031, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "At": [14, 19], "process": [14, 15, 16, 17, 18, 20, 123, 124, 128, 134, 139, 317, 324, 325, 353, 363], "ourselv": 14, "lead": [14, 15, 71, 74, 75, 76, 77, 78, 151, 756, 800, 802, 807, 809], "quansight": 14, "compani": 14, "made": [14, 18, 19, 128, 131, 134, 136], "organ": [14, 118, 124, 127, 128], "panda": 14, "scipi": 14, "conda": [14, 17, 20], "dask": [14, 949, 950, 954, 955, 959, 965, 969], "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 134, 139], "sympi": 14, "rai": [14, 364, 396, 399], "modin": 14, "spyder": 14, "includ": [14, 18, 19, 33, 34, 67, 68, 74, 75, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 150, 151, 177, 178, 179, 181, 182, 184, 217, 220, 607, 658, 700, 756, 822, 824, 908, 909, 932, 938, 940, 944, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1030, 1044, 1054, 1055, 1058, 1059], "member": [14, 18], "googl": [14, 1025], "octoml": 14, "einop": [14, 87, 88, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647], "further": [14, 15, 18, 20, 121, 127, 133, 137, 138, 1025], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 47, 48, 93, 94, 103, 104, 117, 128, 137, 607, 616, 624, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 756, 768, 770, 794, 796, 908, 911, 934, 936, 1025, 1031], "shaw": 14, "co": [14, 39, 40, 85, 86, 134, 150, 364, 436, 607, 643, 1025], "intel": 14, "togeth": [14, 74, 75, 127, 128, 132, 138, 139, 151, 1066, 1067], "major": [14, 123, 129, 130, 151, 944, 947], "involv": [14, 16, 20, 117, 129, 139, 248, 304, 307, 364, 378, 381, 536, 539, 1025, 1031], "anoth": [14, 17, 18, 74, 75, 123, 124, 128, 129, 136, 139, 177, 195, 198, 248, 256, 259, 266, 269], "promis": 14, "sign": [14, 17, 39, 40, 85, 86, 135, 139, 177, 178, 179, 364, 365, 368, 378, 381, 396, 399, 420, 423, 536, 539, 557, 560, 569, 756, 803, 949, 950, 954, 955, 959, 965, 969, 981, 998, 1001, 1006, 1009], "pursuit": 14, "unif": [14, 16, 136, 1025, 1031], "clearli": [14, 19, 121, 123], "lot": [14, 15, 126, 136, 151], "thought": [14, 17, 18, 119], "care": [14, 18, 139], "attent": [14, 18, 127, 128, 739, 754, 755, 1044, 1055], "gone": [14, 133], "simplifi": [14, 134, 135, 136, 138], "compat": [14, 22, 25, 26, 39, 40, 67, 68, 71, 76, 77, 85, 86, 113, 114, 119, 151, 248, 261, 264, 364, 378, 379, 380, 381, 382, 396, 399, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 588, 592, 756, 788, 790, 797, 799, 804, 806, 813, 815, 819, 821, 822, 824, 844, 874, 877, 944, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "excit": [14, 16, 117, 1025], "complianc": 14, "hope": [14, 151], "due": [14, 17, 22, 25, 26, 128, 131, 364, 536, 539], "suit": [14, 17, 117, 122, 123, 137, 150], "some": [14, 15, 17, 18, 19, 74, 75, 118, 119, 120, 121, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 150, 151, 364, 458, 461, 701, 702, 705, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 737, 739, 751, 1025, 1044, 1052], "motiv": [14, 136], "great": [14, 15, 123, 134, 136], "convinc": 14, "celebr": 14, "encourag": [14, 150, 151, 1025, 1031], "foundat": 14, "point": [15, 18, 39, 40, 49, 50, 85, 86, 95, 96, 119, 120, 121, 123, 127, 131, 134, 136, 137, 150, 176, 177, 178, 179, 186, 192, 193, 200, 222, 223, 240, 242, 248, 251, 254, 280, 283, 293, 296, 304, 307, 364, 370, 373, 374, 377, 378, 381, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 424, 427, 428, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 756, 757, 758, 759, 760, 761, 765, 767, 771, 773, 774, 776, 777, 779, 788, 790, 797, 799, 800, 802, 804, 806, 807, 809, 822, 824, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "mai": [15, 17, 18, 22, 25, 26, 123, 128, 136, 138, 177, 178, 179, 195, 198, 317, 359, 364, 446, 449, 474, 477, 494, 497, 522, 525, 526, 529, 607, 628, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997], "ask": [15, 134, 136, 151, 1025], "perfectli": 15, "happi": [15, 17, 151], "abund": 15, "better": [15, 117, 132, 133, 136, 137, 138], "ll": [15, 16, 18, 121, 128, 131, 137], "give": [15, 17, 18, 117, 119, 120, 121, 125, 136, 844, 874, 877], "two": [15, 33, 34, 49, 50, 71, 76, 77, 95, 96, 120, 121, 123, 127, 128, 133, 137, 139, 177, 178, 179, 192, 193, 212, 215, 230, 232, 234, 235, 237, 239, 248, 303, 312, 364, 420, 423, 561, 564, 607, 615, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 816, 818, 819, 821, 844, 892, 895, 949, 950, 954, 955, 959, 960, 964, 965, 969, 1025], "streamlin": 15, "workflow": [15, 18, 137, 149, 1025], "save": [15, 74, 75, 123, 132, 151, 607, 681, 1056, 1057], "week": [15, 18, 19, 1025], "let": [15, 120, 121, 123, 128, 129, 130, 134, 136, 137, 138, 139, 981, 990, 993, 1002, 1005, 1006, 1009, 1010, 1013, 1025], "sai": [15, 17, 126, 136], "deepmind": 15, "releas": [15, 17, 19, 1025], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 131, 137, 981, 1002, 1005, 1010, 1013], "perceiverio": 15, "happen": [15, 17, 18, 123, 137], "slew": 15, "rush": 15, "f": [15, 20, 117, 123, 128, 132, 134, 137, 139, 364, 470, 473, 607, 660, 664, 908, 911], "g": [15, 117, 128, 151, 248, 250, 304, 307, 317, 330, 908, 911, 932, 937, 938, 940, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 994, 997, 998, 1001, 1006, 1009], "inevit": 15, "deviat": [15, 55, 56, 101, 102, 123, 926, 927, 928, 929, 930, 931, 932, 937, 981, 1002, 1005, 1058, 1059], "origin": [15, 53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 125, 126, 129, 134, 136, 364, 396, 399, 756, 784, 786, 844, 874, 877, 878, 879, 880, 881, 882], "often": [15, 123, 124, 132, 151], "erron": 15, "train": [15, 43, 44, 89, 90, 124, 128, 130, 137, 138, 139, 149, 150, 151, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 1025], "poor": 15, "converg": 15, "perform": [15, 67, 68, 87, 88, 113, 114, 118, 119, 121, 123, 124, 125, 127, 128, 130, 131, 134, 137, 151, 162, 167, 177, 206, 207, 209, 210, 317, 607, 625, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647, 661, 662, 663, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 751, 753, 756, 807, 809, 904, 905, 906, 907, 908, 915, 916, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "issu": [15, 16, 19, 123, 134, 136, 138, 151], "etc": [15, 17, 18, 19, 41, 42, 69, 70, 74, 75, 103, 104, 115, 116, 118, 119, 121, 123, 127, 128, 129, 134, 136, 137, 151, 177, 206, 207, 209, 210, 607, 644, 646, 648, 649, 651, 672, 675, 676, 932, 933, 934, 935, 936, 938, 940, 949, 950, 954, 955, 959, 965, 969, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "publish": [15, 151], "manag": [15, 16, 131, 151, 317], "get": [15, 16, 17, 19, 74, 75, 117, 123, 124, 129, 130, 131, 134, 135, 136, 137, 138, 248, 275, 278, 279, 280, 283, 287, 290, 317, 324, 325, 333, 334, 347, 348, 353, 357, 360, 363, 607, 614, 653, 654, 655, 674, 683, 1025, 1031, 1044, 1053], "work": [15, 17, 18, 19, 117, 123, 128, 129, 130, 133, 134, 135, 136, 138, 139, 1025, 1031], "repositori": [15, 17, 18, 20, 122, 132], "pull": [15, 16, 17, 20, 118, 151], "request": [15, 16, 118, 317, 350], "confus": [15, 131], "do": [15, 17, 18, 19, 43, 44, 74, 75, 89, 90, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 364, 557, 560, 607, 663, 701, 716, 717, 718, 719, 720, 737, 908, 909, 918, 919, 920], "don": [15, 17, 18, 19, 69, 70, 115, 116, 123, 129, 138, 151], "expect": [15, 123, 151, 607, 614, 1025], "codebas": [15, 16, 117, 118, 131, 133, 317, 356, 357, 1025], "total": [15, 16, 18, 71, 74, 75, 76, 77, 78, 121, 123, 130, 137, 138, 151, 317, 360, 944, 947, 981, 1002, 1005, 1010, 1013], "hour": 15, "spent": 15, "spin": 15, "off": [15, 133, 756, 768, 770, 816, 818], "test": [15, 17, 19, 67, 68, 113, 114, 117, 121, 132, 151, 248, 298, 301, 364, 478, 481, 482, 485, 486, 489, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "error": [15, 17, 74, 75, 119, 121, 123, 127, 130, 132, 136, 151, 162, 163, 317, 364, 450, 453, 981, 986, 989, 994, 997, 1056, 1057, 1060, 1064], "iter": [15, 28, 29, 30, 31, 32, 41, 42, 69, 70, 71, 74, 75, 76, 77, 78, 87, 88, 115, 116, 128, 134, 137, 174, 175, 317, 336, 337, 339, 340, 341, 342, 345, 358, 607, 608, 609, 610, 611, 612, 844, 854, 857, 870, 873, 883, 896, 899, 900, 903, 908, 909, 910, 911, 914, 918, 919, 920], "address": [15, 18, 19, 127, 134], "sake": 15, "singl": [15, 18, 74, 75, 118, 119, 121, 123, 124, 126, 128, 131, 134, 137, 138, 139, 151, 317, 324, 325, 343, 344, 345, 346, 607, 696, 700, 932, 937, 938, 940, 949, 950, 954], "multipl": [15, 18, 55, 56, 67, 68, 74, 75, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 104, 113, 114, 121, 124, 128, 151, 364, 378, 382, 534, 536, 539, 607, 608, 610, 611, 612, 669, 701, 716, 718, 719, 720, 756, 757, 760, 761, 777, 779, 844, 845, 848, 849, 878, 881, 882, 883, 926, 927, 928, 929, 930, 931, 934, 936, 944, 945, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1054], "line": [15, 17, 121, 123, 127, 132, 135, 136, 137, 138, 149, 1025, 1031], "convert": [15, 28, 29, 30, 31, 32, 33, 34, 74, 75, 123, 127, 134, 151, 152, 160, 177, 181, 182, 184, 217, 220, 248, 249, 250, 317, 330, 331, 332, 333, 353, 360, 363, 607, 688, 690, 691, 695, 696, 756, 825, 827, 908, 910, 920, 921, 1037], "directli": [15, 18, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 134, 136, 138, 139, 150, 151, 908, 920], "graph": [15, 22, 25, 26, 124, 128, 135, 151, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 949, 950, 954, 955, 959, 965, 969, 1056, 1057], "guarante": [15, 127, 151, 949, 950, 954], "turn": [15, 121, 123, 128], "4": [15, 20, 22, 25, 26, 39, 40, 43, 44, 49, 50, 53, 54, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 123, 125, 128, 134, 136, 137, 138, 139, 162, 164, 165, 167, 177, 201, 204, 212, 215, 225, 228, 243, 247, 248, 266, 268, 269, 270, 275, 278, 298, 301, 317, 336, 352, 364, 365, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 396, 399, 404, 407, 424, 427, 428, 430, 431, 432, 435, 437, 440, 462, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 567, 568, 570, 572, 573, 574, 575, 578, 580, 583, 584, 587, 593, 594, 596, 597, 598, 599, 601, 602, 607, 616, 625, 643, 644, 646, 648, 651, 689, 701, 702, 704, 705, 706, 716, 717, 718, 719, 720, 739, 742, 743, 744, 746, 749, 753, 755, 756, 757, 758, 760, 762, 764, 765, 767, 768, 770, 777, 779, 788, 790, 794, 796, 813, 815, 816, 818, 828, 839, 842, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 880, 881, 882, 883, 892, 895, 908, 911, 926, 927, 929, 930, 931, 932, 933, 934, 936, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1018, 1025, 1060, 1061, 1062, 1063, 1065], "step": [15, 17, 18, 20, 43, 44, 74, 75, 79, 80, 89, 90, 121, 125, 127, 128, 129, 130, 134, 137, 138, 139, 150, 177, 178, 179, 180, 206, 207, 209, 210, 317, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 721, 722, 723, 724, 725, 727, 729, 731, 904, 905, 906, 907, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "take": [15, 16, 17, 18, 120, 121, 123, 128, 129, 130, 134, 136, 138, 139, 151, 364, 424, 427, 1025, 1031], "few": [15, 18, 19, 123, 124, 128, 129, 130, 131, 132, 135, 136, 137, 138, 149, 1025, 1031], "second": [15, 17, 22, 25, 26, 39, 40, 43, 44, 61, 62, 71, 76, 77, 85, 86, 89, 90, 107, 108, 121, 123, 131, 136, 248, 303, 312, 317, 345, 364, 378, 379, 380, 381, 382, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 446, 449, 466, 469, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 588, 592, 607, 615, 674, 679, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 756, 762, 764, 768, 770, 771, 773, 780, 783, 794, 796, 800, 802, 807, 809, 813, 815, 819, 821, 844, 888, 891, 892, 895, 904, 906, 949, 950, 954, 955, 956, 957, 958, 959, 1060, 1061, 1062], "automat": [15, 17, 18, 117, 119, 124, 128, 133, 134, 135, 138, 139, 1025], "convers": [15, 29, 30, 31, 32, 74, 75, 133, 135, 139, 150, 151, 1025, 1031], "everyon": [15, 16, 18, 151], "regardless": [15, 16, 74, 75, 136, 139, 174, 175], "wouldn": 15, "nice": [15, 123], "write": [15, 18, 19, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 74, 75, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 124, 125, 131, 134, 136, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 317, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 626, 629, 631, 633, 635, 637, 639, 642, 644, 646, 648, 649, 651, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 948, 949, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "onc": [15, 17, 18, 123, 128, 129, 130, 134, 137, 151, 317, 358, 756, 777, 779, 807, 809, 932, 933], "know": [15, 18, 123, 949, 950, 954, 955, 959, 965, 969], "among": [15, 74, 75, 123], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 124, 134], "understand": [15, 17, 18, 19, 20, 117, 119, 120, 121, 122, 132, 133], "pattern": [15, 87, 88, 120, 129, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647], "hasn": 15, "chang": [15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 122, 123, 128, 134, 138, 151, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 317, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 756, 757, 758, 759, 761, 762, 764, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 847, 849, 874, 877, 878, 879, 880, 882, 908, 910, 920, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1031], "now": [15, 17, 20, 74, 75, 118, 119, 123, 126, 128, 129, 132, 136, 137, 139, 150, 151, 177, 243, 247, 1044, 1055, 1056, 1057], "spend": 15, "torchvis": 15, "probabl": [15, 123, 739, 751, 932, 933, 1044, 1052], "sonnet": 15, "about": [15, 17, 18, 122, 123, 133, 134, 138, 139, 151, 248, 280, 283, 287, 290], "next": [15, 17, 18, 19, 20, 120, 121, 125, 126, 132, 136, 137, 248, 280, 283, 1025, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "everyth": [15, 18, 19, 123, 135, 151], "zero": [15, 22, 25, 26, 33, 34, 39, 40, 43, 44, 67, 68, 71, 74, 75, 76, 77, 85, 86, 89, 90, 113, 114, 119, 121, 127, 128, 129, 130, 134, 137, 138, 162, 164, 165, 177, 186, 192, 193, 212, 215, 230, 232, 234, 235, 237, 239, 243, 245, 247, 248, 251, 254, 364, 378, 381, 383, 386, 387, 390, 412, 415, 432, 433, 435, 437, 440, 458, 461, 462, 465, 522, 525, 526, 529, 534, 535, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 561, 564, 570, 573, 575, 576, 577, 579, 580, 583, 584, 587, 593, 597, 598, 602, 607, 625, 672, 676, 701, 702, 703, 704, 705, 706, 707, 709, 716, 719, 721, 723, 725, 727, 739, 751, 756, 757, 760, 765, 767, 780, 783, 788, 790, 797, 799, 819, 821, 822, 824, 844, 858, 861, 862, 865, 870, 873, 878, 881, 900, 903, 926, 927, 930, 932, 934, 935, 944, 945, 946, 947, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1060, 1061, 1062, 1063], "need": [15, 17, 18, 19, 20, 118, 120, 121, 122, 124, 127, 128, 131, 134, 136, 137, 150, 151, 607, 619, 620, 622, 844, 845, 848, 858, 861], "said": 15, "high": [15, 19, 74, 75, 103, 104, 137, 932, 934, 935, 936, 938, 939, 940, 941], "level": [15, 16, 19, 124, 133, 134, 137, 138, 139, 151], "optim": [15, 131, 135, 137, 139, 150, 317, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 904, 905, 906, 907, 1025, 1061, 1062, 1063, 1065], "trainer": [15, 149, 151, 1025], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 139], "flax": [15, 139, 151], "trax": [15, 139], "objax": [15, 139], "idea": [15, 132, 150], "fulli": [15, 119, 127, 128, 134, 135, 136, 137, 138, 139, 151, 1044, 1054, 1055], "offer": [15, 138], "strongli": [16, 17, 1025, 1031], "welcom": [16, 17, 18, 1025, 1031], "absolut": [16, 39, 40, 74, 75, 85, 86, 364, 365, 366, 367, 368, 369, 756, 803], "skill": 16, "whether": [16, 17, 22, 25, 26, 28, 29, 30, 31, 32, 41, 42, 43, 44, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 128, 129, 131, 162, 163, 168, 170, 172, 174, 175, 248, 251, 254, 266, 268, 270, 275, 278, 292, 293, 296, 298, 301, 316, 317, 333, 334, 345, 349, 350, 353, 354, 358, 361, 363, 364, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 486, 489, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 609, 610, 611, 612, 615, 616, 625, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644, 645, 647, 648, 650, 652, 656, 658, 660, 663, 664, 665, 666, 667, 668, 669, 680, 682, 686, 691, 692, 694, 699, 700, 701, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 738, 739, 751, 756, 757, 759, 761, 771, 773, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 904, 905, 906, 907, 908, 909, 910, 914, 918, 919, 920, 921, 927, 929, 931, 932, 933, 955, 956, 958, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1036, 1037, 1044, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 20, 74, 75, 79, 80, 117, 120, 121, 129, 133, 134, 136, 137, 138, 150, 151, 177, 178, 179, 180, 206, 207, 208, 209, 210, 211, 317, 329], "aspect": [16, 137, 1025], "guid": [16, 17, 18, 132, 1025], "through": [16, 18, 19, 117, 121, 123, 124, 125, 128, 132, 133, 134, 136, 137, 138, 139, 150, 364, 396, 399, 908, 911], "journei": [16, 1025, 1031], "inclusvi": 16, "big": [16, 151], "team": [16, 17, 18], "board": 16, "contributor": [16, 17, 18, 133, 1025], "split": [16, 18, 22, 25, 26, 74, 75, 133, 134, 151, 317, 324, 339, 340, 341, 342, 356, 357, 358, 607, 669, 844, 1025], "section": [16, 18, 19, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 949, 950, 954, 955, 959, 965, 969], "below": [16, 17, 19, 20, 33, 34, 117, 118, 121, 123, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 150, 177, 230, 232, 234, 235, 237, 239, 364, 404, 407, 424, 427, 437, 440, 561, 564, 598, 602, 756, 765, 767, 768, 770, 816, 818, 844, 858, 861, 862, 865, 949, 950, 954, 970, 971, 974, 1025], "best": [16, 17, 18, 19, 20, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 607, 669], "go": [16, 17, 18, 19, 117, 118, 121, 128, 133, 137, 151, 908, 919], "finish": [16, 17, 117, 1025], "dive": [16, 18, 19, 128, 133, 136, 137, 151, 1025], "right": [16, 17, 18, 74, 75, 117, 121, 137, 364, 412, 415, 420, 423, 756, 807, 809], "environ": [16, 18, 20, 150], "basic": [16, 19, 20], "fork": [16, 17, 607, 670], "doc": [16, 19, 119, 120, 134, 137, 138, 1025], "document": [16, 18, 123, 135, 137, 139], "local": [16, 17, 20, 124], "task": [16, 18, 150, 904, 905, 906, 907, 1025], "help": [16, 17, 121, 123, 125, 127, 128, 136, 137, 138, 149, 607, 613, 981, 1006, 1009, 1025], "video": [16, 18, 119, 120, 121, 123], "realli": [17, 128, 151], "contribut": [17, 18, 19, 134, 1031], "toward": [17, 53, 54, 99, 100, 134, 844, 878, 879, 880, 881, 882, 1025, 1031], "page": [17, 18, 135, 139, 149, 1025, 1031], "explain": [17, 18, 19, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 1025, 1031], "main": [17, 20, 33, 34, 126, 128, 177, 192, 193, 230, 232, 234, 235, 237, 239, 756, 768, 770, 816, 818], "prefer": [17, 128], "mode": [17, 49, 50, 74, 75, 121, 128, 151, 174, 175, 317, 343, 344, 345, 346, 358, 364, 378, 381, 536, 539, 607, 680, 698, 756, 800, 801, 802], "git": [17, 18, 123], "recurs": [17, 20, 28, 29, 30, 31, 32, 74, 75, 124, 128, 138, 151, 908, 909, 910, 918, 919, 920], "submodul": [17, 18, 19, 20, 122, 123, 124, 130, 133, 134, 138, 1025, 1058, 1059, 1066, 1067], "com": 17, "unifyai": [17, 20], "http": [17, 120, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 701, 702, 705, 707, 709, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "gh": 17, "your_fold": 17, "id": [17, 127, 128, 132, 317, 333, 1056, 1057], "cours": [17, 18, 121, 137, 151], "whatev": [17, 151], "integr": [17, 248, 251, 254], "familiar": [17, 19], "decid": [17, 74, 75, 908, 919], "sure": [17, 19, 122, 123], "elig": 17, "free": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 150, 1025], "student": 17, "licenc": 17, "peopl": [17, 18, 117], "seem": [17, 138, 151], "miss": [17, 121, 123, 127, 128, 132, 1060, 1064], "add": [17, 18, 19, 22, 25, 26, 39, 40, 55, 56, 69, 70, 71, 74, 75, 76, 77, 85, 86, 87, 88, 101, 102, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 134, 136, 151, 364, 365, 368, 382, 534, 608, 612, 701, 738, 926, 927, 928, 929, 930, 931, 1025, 1031, 1058, 1059], "explicit": [17, 20, 128, 129, 131, 134, 151], "remind": 17, "channel": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 607, 643, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054], "pace": 17, "updat": [17, 18, 19, 20, 43, 44, 74, 75, 89, 90, 117, 119, 121, 122, 126, 127, 128, 129, 134, 136, 137, 139, 151, 317, 324, 607, 663, 675, 676, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 753, 904, 905, 906, 908, 915, 916, 924, 925, 1036, 1037, 1060, 1061, 1062, 1063, 1064, 1065], "suggest": [17, 18, 118, 123], "latest": [17, 19, 20, 120, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1044, 1053], "packag": [17, 20, 132, 151], "ensur": [17, 18, 119, 123, 127, 129, 132, 607, 663], "align": [17, 74, 75, 134, 136, 1025, 1031], "accord": [17, 20, 35, 36, 81, 82, 87, 88, 124, 129, 248, 266, 267, 268, 269, 270, 280, 283, 364, 378, 381, 420, 423, 536, 539, 607, 644, 645, 646, 675, 676, 756, 819, 821, 844, 854, 857, 900, 903, 981, 1002, 1005, 1010, 1013], "stabl": [17, 63, 64, 109, 110, 134, 151, 607, 654, 655, 677, 678, 684, 685, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980], "pypi": [17, 19, 151], "mayb": [17, 28, 31, 32, 134, 136], "person": [17, 18], "experi": [17, 135, 137, 151], "avoid": [17, 18, 123, 125, 126, 128, 132, 136, 317, 364, 458, 461], "pip": [17, 150, 1025], "instal": [17, 20, 132, 150, 1025], "abil": [17, 135, 151], "certain": [17, 74, 75, 123, 129, 151, 177, 178, 179, 206, 207, 209, 210], "perhap": [17, 136, 137, 138, 151], "keep": [17, 18, 74, 75, 122, 123, 128, 135, 137, 139, 607, 699], "track": [17, 18, 317, 908, 920, 1056, 1057], "termin": [17, 18, 20, 71, 74, 75, 76, 77, 78, 128, 134, 137], "run": [17, 20, 43, 44, 89, 90, 119, 121, 122, 123, 125, 132, 134, 135, 136, 137, 138, 139, 150, 151, 317, 324, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 904, 905, 906, 907, 1044, 1055, 1056, 1057], "command": [17, 20, 1025], "ivy_dev": [17, 18, 20], "name": [17, 18, 20, 22, 25, 26, 61, 62, 107, 108, 120, 123, 129, 132, 134, 136, 137, 139, 174, 175, 607, 613, 756, 771, 773, 800, 802, 807, 809, 949, 950, 954, 955, 956, 957, 958, 959], "3": [17, 20, 22, 25, 26, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 71, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 121, 123, 125, 128, 134, 136, 137, 138, 139, 162, 164, 165, 166, 167, 176, 177, 201, 204, 212, 215, 225, 228, 240, 242, 243, 247, 248, 266, 267, 268, 269, 270, 275, 278, 298, 301, 317, 333, 336, 352, 359, 364, 365, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 404, 407, 420, 423, 424, 427, 428, 430, 431, 432, 433, 435, 437, 440, 454, 457, 462, 463, 464, 465, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 596, 597, 598, 599, 601, 602, 607, 608, 609, 610, 615, 616, 625, 641, 644, 646, 648, 649, 651, 682, 689, 696, 701, 702, 703, 704, 705, 706, 716, 719, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 777, 779, 788, 790, 794, 796, 807, 809, 813, 815, 816, 818, 825, 827, 828, 829, 831, 832, 833, 834, 836, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 880, 881, 882, 883, 884, 887, 892, 895, 908, 911, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1006, 1009, 1014, 1015, 1018, 1025], "8": [17, 20, 22, 25, 26, 39, 40, 51, 52, 53, 54, 71, 76, 77, 85, 86, 89, 90, 97, 98, 103, 104, 121, 123, 128, 133, 137, 162, 166, 177, 243, 247, 317, 336, 364, 378, 381, 382, 387, 390, 391, 404, 407, 428, 431, 437, 440, 474, 477, 494, 497, 534, 535, 561, 564, 565, 566, 567, 568, 569, 580, 583, 584, 587, 598, 602, 607, 616, 644, 646, 701, 702, 705, 716, 718, 719, 720, 739, 746, 749, 756, 762, 764, 765, 767, 768, 770, 794, 796, 813, 815, 828, 829, 830, 831, 832, 833, 834, 836, 838, 839, 840, 841, 843, 844, 845, 846, 848, 862, 865, 870, 873, 883, 932, 933, 934, 935, 936, 944, 948, 949, 950, 954, 981, 982, 985, 1025, 1044, 1055], "activ": [17, 18, 20, 24, 69, 70, 73, 115, 116, 118, 138, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 1025, 1034, 1035], "setup": 17, "click": [17, 18, 120, 1025], "icon": [17, 18], "side": [17, 18], "choos": [17, 18, 139, 317, 359, 364, 522, 525, 526, 529, 944, 948, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997], "left": [17, 18, 74, 75, 121, 129, 364, 412, 415, 756, 771, 773, 784, 786, 807, 809, 944, 945, 1025], "panel": 17, "select": [17, 18, 123, 134, 136, 139, 151], "drop": [17, 151], "down": [17, 123, 136], "path": [17, 20], "manual": [17, 18, 123, 138, 908, 909, 918, 919], "builtin": [17, 20, 136, 138], "requir": [17, 20, 118, 119, 120, 121, 123, 126, 127, 129, 130, 136, 151, 174, 175, 364, 580, 583, 756, 771, 773, 844, 888, 891, 1036, 1037], "cmd": [17, 20], "directori": [17, 18, 20, 123, 607, 681], "folder": [17, 18, 20, 118, 122, 123, 124], "file": [17, 18, 20, 74, 75, 118, 120, 123, 124, 125, 127, 128, 132, 134, 137, 607, 681, 1056, 1057], "abov": [17, 18, 20, 33, 34, 103, 104, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 136, 137, 138, 139, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 534, 536, 539, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 771, 773, 816, 818, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 932, 934, 935, 936, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 998, 1001, 1002, 1005, 1006, 1009, 1014, 1015, 1018], "m": [17, 18, 20, 33, 34, 49, 50, 95, 96, 117, 134, 177, 212, 215, 230, 232, 234, 235, 237, 239, 607, 616, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 932, 937, 938, 940], "python3": [17, 20], "script": [17, 18, 20, 121, 134, 151], "bat": [17, 18, 20], "OR": [17, 18, 20, 67, 68, 113, 114, 364, 416, 419, 526, 529, 1014, 1020, 1021, 1022, 1023, 1024], "bin": [17, 18, 20], "mac": [17, 18, 20], "linux": [17, 18, 20], "virtualenv": 17, "found": [17, 18, 71, 74, 75, 76, 77, 78, 120, 127, 128, 132, 317, 348], "o": [17, 117, 134, 607, 616], "note": [17, 18, 118, 120, 121, 123, 128, 129, 364, 557, 560, 756, 771, 773, 807, 809, 844, 888, 891, 949, 955, 959, 981, 990, 993], "tick": [17, 18], "abl": [17, 18, 74, 75, 124, 129, 131, 132, 136, 139], "To": [17, 121, 123, 124, 128, 132, 137, 138, 139, 1025], "ivy_test": [17, 18], "test_array_api": [17, 18, 122, 123], "cd": [17, 18, 20], "r": [17, 74, 75, 607, 616, 699, 756, 800, 802, 825, 827], "txt": 17, "visual": [17, 132, 151], "jetbrain": 17, "remot": 17, "mitig": 17, "potenti": [17, 133, 364, 458, 461], "conflict": [17, 18, 137], "addit": [17, 18, 55, 56, 87, 88, 101, 102, 118, 120, 123, 128, 129, 136, 137, 139, 317, 359, 364, 378, 381, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647, 926, 927, 928, 929, 930, 931, 1044, 1054], "yet": [17, 19, 128], "particular": [17, 18, 118, 121, 123, 129, 131, 364, 365, 368], "system": [17, 151, 756, 804, 806], "instruct": [17, 19], "desktop": 17, "wsl": 17, "powershel": 17, "admin": 17, "visit": 17, "link": 17, "imag": [17, 20, 46, 47, 48, 92, 93, 94, 118, 134, 135, 137, 139, 150, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 1025], "profession": 17, "execut": [17, 20, 128, 131, 134, 136, 139, 151, 607, 697], "deploy": 17, "top": [17, 18, 123, 137, 138, 1025], "press": [17, 137, 1025], "ok": 17, "correctli": [17, 74, 75, 119, 123, 128, 129, 132, 138, 151, 756, 784, 786, 944, 945], "caus": [17, 18, 121, 123, 128, 131, 132, 151], "earlier": [17, 18], "might": [17, 18, 118, 123, 126, 129, 134, 136, 137, 607, 628], "necessari": [17, 121, 125, 128, 131], "virtualis": 17, "detail": [17, 18, 19, 118, 119, 122, 123, 124, 125, 126, 128, 137, 138, 177, 195, 198, 949, 950, 954, 955, 959, 965, 969], "sudo": 17, "apt": 17, "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 74, 75, 87, 88, 177, 212, 215, 607, 619, 620, 621, 622, 739, 751, 756, 784, 786, 822, 824, 1044, 1052], "keyr": 17, "fssl": 17, "download": [17, 123], "gpg": 17, "dearmor": 17, "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 139, 151], "lsb_releas": 17, "tee": 17, "list": [17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 48, 55, 56, 69, 70, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 121, 123, 128, 129, 130, 132, 134, 137, 138, 139, 151, 168, 170, 172, 177, 178, 179, 181, 182, 184, 212, 213, 215, 217, 220, 248, 256, 257, 259, 266, 268, 270, 317, 324, 325, 333, 335, 336, 339, 340, 343, 344, 358, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 616, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 689, 691, 692, 694, 699, 701, 702, 704, 706, 716, 718, 720, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 756, 757, 759, 761, 813, 815, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 849, 850, 853, 862, 865, 878, 880, 882, 883, 888, 891, 908, 909, 910, 911, 914, 919, 920, 926, 927, 928, 929, 930, 931, 934, 936, 944, 947, 949, 955, 956, 958, 959, 1015, 1017, 1019, 1020, 1022, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "dev": [17, 22, 25, 26, 71, 74, 75, 76, 78, 124, 130, 134, 136, 138, 317, 324, 348], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 123, 128, 151], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 123, 132, 150, 317], "post": [17, 55, 56, 101, 102, 139, 926, 927, 928, 929, 930, 931, 1025, 1031], "It": [17, 18, 20, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 120, 121, 123, 125, 127, 128, 129, 131, 134, 136, 137, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 317, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 629, 631, 633, 635, 637, 639, 642, 648, 649, 651, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 948, 949, 965, 969, 970, 971, 974, 976, 979, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "headach": 17, "arm": [17, 18], "m1": 17, "instead": [17, 18, 19, 119, 120, 121, 123, 124, 128, 131, 134, 136, 137, 151], "featur": [17, 118, 119, 137, 1025], "vm": 17, "azur": 17, "cloud": [17, 150], "mean": [17, 18, 65, 66, 74, 75, 87, 88, 111, 112, 115, 116, 117, 121, 123, 124, 128, 129, 130, 131, 134, 136, 137, 138, 139, 150, 151, 317, 343, 344, 345, 346, 358, 607, 633, 634, 635, 636, 904, 905, 906, 907, 908, 914, 932, 937, 949, 950, 954, 981, 1025, 1038], "configur": [17, 18, 20, 74, 75, 129, 317, 357, 908, 921], "defin": [17, 19, 103, 104, 118, 119, 120, 123, 129, 136, 138, 151, 364, 536, 539, 557, 560, 607, 672, 756, 762, 764, 771, 773, 804, 806, 932, 934, 935, 936, 981, 986, 989, 990, 993, 994, 997], "dockerfil": [17, 20], "longer": [17, 123, 129, 131], "worri": 17, "platform": 17, "agnost": [17, 119, 127, 134, 136, 139, 151, 1025], "usual": [17, 123], "studio": 17, "favourit": 17, "extens": [17, 18, 120, 123, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 756, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018], "theme": 17, "too": [17, 18, 132, 151, 364, 378, 381, 536, 539], "done": [17, 18, 121, 123, 132, 137], "unsupport": [17, 132, 248, 286], "old": [17, 74, 75, 131], "slow": 17, "ipad": 17, "long": [17, 18, 121, 739, 753], "browser": 17, "cool": [17, 118], "requisit": 17, "head": [17, 128, 739, 754, 1025, 1044, 1055], "pane": [17, 18], "readi": [17, 19], "begin": [17, 908, 909, 919], "outlin": [17, 18, 19, 117, 120, 123, 124, 128, 131, 136], "green": [17, 18, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1069, 1070], "dropdown": 17, "tab": [17, 137, 1025], "master": [17, 18, 128], "v": [17, 18, 123, 134, 137, 138, 139, 739, 755, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1064, 1066, 1067], "view": [17, 18, 177, 195, 198, 739, 742, 746, 749], "log": [17, 18, 39, 40, 85, 86, 124, 128, 131, 134, 137, 177, 209, 210, 364, 506, 509, 514, 517, 756, 803, 1025], "built": [17, 123, 135, 177, 178, 179, 317, 1044, 1055, 1056, 1057], "bottom": 17, "box": 17, "patient": 17, "upto": 17, "15": [17, 39, 40, 103, 104, 121, 123, 364, 404, 407, 561, 564, 565, 566, 739, 742, 756, 768, 770, 794, 796, 813, 815, 844, 878, 881, 932, 934, 935, 936, 944, 947, 949, 950, 954, 981, 982, 985], "minut": 17, "launch": 17, "12": [17, 85, 86, 101, 102, 103, 104, 121, 123, 128, 364, 404, 407, 424, 427, 437, 440, 561, 564, 575, 577, 579, 607, 625, 655, 701, 702, 705, 756, 768, 770, 794, 796, 813, 815, 844, 862, 865, 870, 873, 878, 881, 926, 927, 929, 930, 931, 932, 934, 935, 936, 944, 948, 949, 950, 954, 981, 982, 985], "output": [17, 23, 24, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 72, 73, 74, 75, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 120, 121, 123, 124, 127, 128, 130, 131, 134, 136, 138, 139, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 317, 324, 325, 358, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 618, 619, 620, 622, 625, 626, 629, 631, 633, 635, 637, 639, 642, 644, 646, 648, 649, 651, 659, 672, 675, 676, 701, 711, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 908, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 948, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055], "That": [17, 18, 123, 136, 137, 138, 364, 557, 560], "alreadi": [17, 18, 74, 75, 119, 125, 128, 129, 136, 151, 317, 364, 428, 431, 462, 465, 536, 539, 561, 564, 603, 606, 756, 794, 796, 1025], "refer": [17, 18, 67, 68, 113, 114, 119, 123, 124, 129, 151, 177, 192, 193, 364, 458, 461, 506, 509, 701, 702, 705, 707, 709, 756, 819, 821, 825, 827, 981, 1002, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1054], "approach": [17, 18, 123, 124, 128, 136, 137, 151], "colour": 17, "applic": [17, 129, 130, 138, 739, 754, 755, 908, 914, 920], "good": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 138], "chanc": 17, "vscode": 17, "show": [17, 18, 74, 75, 121, 123, 131, 150, 151, 1025], "explor": [17, 135, 139, 150], "troubleshoot": 17, "sometim": [17, 18, 123], "ever": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "64": [17, 47, 48, 93, 94, 123, 137, 138, 364, 580, 583, 584, 587, 739, 745, 746, 747, 748, 749, 750, 756, 794, 796, 981, 982, 985, 1025, 1044, 1055], "bit": [17, 121, 123, 124, 128, 136, 248, 279, 280, 283, 287, 290, 364, 408, 411, 412, 415, 420, 423, 981, 998, 1001, 1006, 1009], "usr": 17, "more": [17, 18, 19, 22, 25, 26, 61, 62, 107, 108, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 177, 178, 179, 248, 256, 259, 364, 458, 461, 756, 780, 783, 844, 862, 865, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 1025], "nutshel": [17, 119], "hook": 17, "lint": 17, "accept": [17, 18, 28, 119, 120, 121, 123, 124, 127, 128, 130, 131, 136, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 522, 525, 526, 529, 534, 545, 548, 557, 560, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 990, 993, 1014, 1015, 1018, 1025], "fix": [17, 18], "fail": [17, 19, 122, 123, 132, 134, 136], "attempt": [17, 132, 151], "succe": 17, "problemat": 17, "appli": [17, 18, 19, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 134, 136, 137, 138, 139, 149, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 248, 266, 267, 268, 270, 304, 307, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 607, 608, 609, 610, 612, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 645, 647, 648, 649, 650, 652, 691, 692, 693, 694, 701, 702, 703, 704, 706, 716, 717, 718, 720, 721, 723, 725, 727, 739, 746, 747, 748, 750, 752, 754, 755, 756, 757, 758, 759, 761, 788, 790, 797, 799, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 878, 879, 880, 882, 888, 891, 904, 905, 906, 908, 914, 917, 920, 921, 926, 927, 928, 929, 930, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1033, 1034, 1035, 1058, 1059], "proce": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "modifi": [17, 18, 120, 124, 129, 130, 132, 134], "properli": [17, 117], "enter": [17, 18, 119, 127, 129, 130, 317, 701, 738], "unsur": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "feel": [17, 18, 19, 20, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 1025], "server": [18, 1025], "appropri": [18, 69, 70, 115, 116, 123, 126, 364, 378, 381, 536, 539, 944, 945], "context": [18, 121, 123, 128, 129, 130, 317, 607, 670, 739, 754, 1044, 1055], "suitabl": [18, 118, 128], "quick": [18, 117, 138], "alwai": [18, 19, 43, 44, 74, 75, 89, 90, 118, 119, 120, 123, 124, 125, 127, 128, 131, 132, 134, 136, 151, 248, 251, 254, 364, 378, 381, 536, 539, 607, 663, 701, 716, 717, 718, 719, 720, 734], "correct": [18, 19, 65, 66, 111, 112, 117, 119, 124, 128, 129, 130, 132, 248, 312, 844, 845, 848, 981, 1002, 1003, 1004, 1005, 1010, 1011, 1012, 1013, 1025], "tendenc": 18, "gener": [18, 19, 20, 42, 43, 44, 69, 70, 74, 75, 88, 89, 90, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 150, 151, 174, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 557, 560, 570, 573, 580, 583, 584, 587, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 631, 633, 635, 637, 639, 641, 642, 643, 644, 646, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 701, 716, 717, 718, 719, 720, 756, 768, 770, 844, 858, 861, 878, 881, 932, 933, 934, 935, 938, 940, 942, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1025, 1060, 1064], "land": 18, "end": [18, 128, 131, 133, 150, 151, 177, 178, 179, 364, 396, 399, 1025, 1031], "world": 18, "come": [18, 19, 123, 138, 149, 1025, 1031], "fly": 18, "hard": [18, 136], "receiv": [18, 123, 129, 130, 317, 324, 325, 607, 614, 669, 1044, 1054], "respons": [18, 20], "internship": 18, "comment": [18, 132], "trigger": 18, "unansw": 18, "label": [18, 51, 52, 97, 98, 134, 135, 139, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "respond": 18, "remov": [18, 19, 20, 74, 75, 120, 123, 124, 129, 131, 139, 756, 768, 770, 780, 783, 816, 818, 844, 884, 887, 904, 905, 906], "someon": [18, 151], "els": [18, 19, 118, 124, 125, 131, 134, 136, 138, 139, 151, 607, 617, 628, 641, 908, 918], "strive": [18, 123, 151], "repli": 18, "newli": [18, 123, 131, 174, 175, 248, 251, 254, 607, 618], "place": [18, 33, 34, 53, 54, 74, 75, 99, 100, 117, 118, 119, 120, 121, 123, 124, 128, 130, 132, 139, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 234, 235, 239, 240, 242, 243, 245, 247, 248, 266, 269, 298, 301, 317, 359, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 661, 662, 663, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 879, 880, 881, 882, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018, 1060, 1061, 1062, 1063, 1064, 1065], "bug": [18, 123], "serv": [18, 119, 123, 124, 127, 128, 133, 1025], "suspect": 18, "behaviour": [18, 119, 120, 123, 127, 128, 131, 136], "observ": 18, "confid": 18, "noth": [18, 74, 75], "wrong": 18, "someth": [18, 118, 137, 138, 151], "bet": 18, "act": [18, 121, 151], "placehold": [18, 119, 127, 132, 908, 920], "sub": [18, 19, 74, 75, 87, 88, 117, 123, 128, 136, 137, 138, 317, 339, 340, 343, 344, 345, 346, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 756, 768, 770, 844, 883, 904, 905, 906, 907, 1025], "mark": [18, 123], "ii": [18, 981, 982, 985], "iii": 18, "titl": [18, 1025], "issue_numb": 18, "delet": [18, 20], "No": [18, 134], "wait": [18, 71, 74, 75, 76, 77, 78], "progress": [18, 128, 135, 139], "pr": 18, "soon": [18, 128, 149, 151, 1025, 1031], "partial": [18, 74, 75, 1056, 1057], "solut": [18, 123, 128, 756, 804, 806], "review": [18, 118], "merg": 18, "everi": [18, 19, 20, 33, 34, 41, 42, 87, 88, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 136, 138, 177, 200, 201, 202, 204, 607, 608, 609, 610, 611, 612], "shape": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 129, 130, 131, 134, 136, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 222, 223, 224, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 262, 263, 264, 265, 317, 326, 354, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 629, 631, 633, 635, 637, 639, 642, 648, 649, 650, 651, 652, 656, 659, 672, 675, 676, 680, 688, 690, 698, 701, 702, 704, 706, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 943, 944, 945, 947, 948, 956, 957, 958, 970, 971, 974, 976, 979, 981, 982, 985, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1058, 1059], "move": [18, 74, 75, 118, 317, 359], "within": [18, 28, 31, 32, 123, 138, 151, 177, 178, 179, 932, 938, 940], "7": [18, 20, 22, 25, 26, 39, 40, 43, 44, 51, 52, 53, 54, 71, 76, 77, 85, 86, 89, 90, 97, 98, 101, 102, 103, 104, 121, 123, 124, 128, 131, 162, 164, 165, 317, 336, 364, 365, 368, 378, 379, 380, 381, 382, 387, 389, 404, 407, 408, 411, 424, 427, 428, 431, 437, 440, 454, 457, 462, 465, 474, 477, 494, 497, 534, 535, 561, 564, 565, 566, 567, 568, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 607, 616, 625, 644, 646, 701, 702, 703, 704, 705, 706, 707, 709, 716, 717, 719, 721, 723, 739, 745, 746, 749, 755, 756, 762, 764, 765, 767, 768, 770, 794, 796, 813, 815, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 858, 861, 862, 865, 870, 873, 883, 892, 895, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 944, 948, 949, 950, 954, 981, 982, 985], "dai": 18, "close": [18, 120, 364, 458, 461, 561, 564, 756, 807, 809], "likewis": [18, 119, 120, 124, 128, 129, 137], "freed": 18, "flag": [18, 43, 44, 74, 75, 89, 90, 129, 131, 136, 317, 333, 701, 716, 717, 718, 719, 720], "purpos": [18, 20, 119, 121, 123, 124, 126, 127, 128, 133, 136, 364, 458, 461, 1025], "remain": [18, 121, 151, 364, 378, 381, 536, 539, 557, 560, 844, 874, 877, 908, 914], "access": [18, 20, 74, 75, 129], "short": [18, 138, 739, 753], "basi": [18, 122, 137], "situat": [18, 139], "alloc": [18, 33, 34, 151, 177, 230, 232, 234, 235, 237, 239, 248, 251, 254, 317], "upon": [18, 121, 123, 131, 151], "period": 18, "prevent": [18, 43, 44, 89, 90, 131, 132, 136, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 981, 1006, 1009, 1060, 1061, 1062], "unabl": 18, "obvious": 18, "never": [18, 123, 128], "reflect": [18, 127], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "fine": [18, 136, 139], "becaus": [18, 119, 120, 123, 124, 125, 127, 129, 130, 131, 134, 138, 139, 151], "inact": 18, "limit": [18, 71, 74, 75, 76, 77, 78, 121, 123, 132, 134, 137, 139, 151, 248, 280, 283, 287, 290, 607, 619, 620, 622, 844, 845, 848], "me": 18, "unfairli": 18, "definit": [18, 49, 50, 95, 96, 124, 129, 136, 756, 757, 758, 759, 760, 761, 762, 764], "investig": 18, "Then": [18, 20, 136, 151], "practic": 18, "separ": [18, 123, 127, 128, 132, 134, 136, 137], "branch": [18, 128, 151, 174, 175, 364, 396, 399], "simpli": [18, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 120, 121, 123, 124, 127, 128, 130, 131, 134, 138, 139, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 364, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 458, 461, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 757, 758, 759, 761, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 845, 846, 847, 849, 878, 879, 880, 882, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024], "role": [18, 135], "kept": [18, 71, 74, 75, 76, 77, 78, 131, 904, 905, 906], "date": 18, "upstream": [18, 122], "complic": [18, 134], "root": [18, 20, 137, 364, 580, 583, 932, 933, 937], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": [18, 981, 998, 1001, 1006, 1009], "clone": [18, 20, 74, 75, 317, 335, 336, 337, 338], "push": [18, 122, 132], "both": [18, 119, 120, 121, 123, 124, 128, 130, 131, 134, 136, 137, 138, 139, 150, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 303, 364, 365, 368, 378, 381, 383, 386, 387, 390, 428, 431, 462, 465, 534, 545, 548, 553, 556, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 607, 644, 646, 701, 702, 705, 739, 742, 746, 749, 755, 756, 757, 760, 762, 764, 768, 770, 780, 783, 819, 821, 844, 878, 881, 926, 927, 930, 949, 955, 959, 981, 986, 989, 1014, 1015, 1018], "abort": 18, "tediou": 18, "resolut": 18, "stash": 18, "reinstat": 18, "correspond": [18, 53, 54, 71, 74, 75, 76, 77, 99, 100, 119, 120, 121, 122, 123, 124, 127, 128, 129, 248, 256, 259, 364, 396, 399, 553, 556, 756, 762, 764, 771, 773, 804, 806, 844, 850, 853, 878, 879, 880, 881, 882, 932, 933, 944, 945, 946, 949, 950, 954, 955, 959, 965, 969, 981, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "fetch": 18, "uncommit": 18, "unstag": 18, "untrack": 18, "comprehens": 18, "explan": [18, 119, 120, 128, 136], "atlassian": 18, "tutori": 18, "wrote": 18, "piec": [18, 124, 126, 127, 134], "inform": [18, 123, 128, 132, 248, 280, 283, 287, 290, 607, 613, 701, 734], "tag": 18, "usu": 18, "describ": [18, 123, 135, 139, 981, 982, 985, 998, 1001, 1002, 1005, 1006, 1009], "navig": [18, 117], "blame": 18, "revis": 18, "author": [18, 1025], "eg": [18, 123], "16": [18, 49, 50, 85, 86, 103, 104, 121, 123, 137, 364, 593, 594, 596, 597, 739, 745, 746, 749, 756, 757, 758, 760, 768, 770, 794, 796, 934, 936, 944, 948, 981, 982, 985], "5": [18, 20, 22, 25, 26, 39, 40, 41, 42, 49, 50, 53, 54, 55, 56, 71, 76, 77, 81, 82, 85, 86, 89, 90, 99, 100, 101, 102, 103, 104, 119, 121, 123, 125, 136, 137, 138, 162, 164, 165, 167, 177, 201, 204, 212, 215, 225, 228, 240, 242, 243, 247, 248, 266, 268, 269, 270, 275, 278, 298, 301, 317, 336, 352, 364, 365, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 400, 403, 404, 407, 420, 423, 424, 427, 428, 429, 430, 431, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 570, 572, 573, 574, 580, 583, 584, 587, 593, 594, 596, 597, 598, 599, 601, 602, 607, 608, 609, 616, 625, 644, 646, 648, 651, 689, 701, 702, 704, 705, 706, 716, 719, 739, 742, 744, 745, 746, 749, 755, 756, 757, 758, 760, 762, 764, 765, 767, 768, 770, 777, 779, 794, 796, 813, 815, 816, 818, 828, 839, 842, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 880, 881, 882, 883, 892, 895, 908, 911, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 943, 944, 946, 947, 948, 949, 950, 954, 955, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1018, 1044, 1055], "past": 18, "l": [18, 49, 50, 95, 96, 117, 756, 757, 758, 759, 760, 761, 771, 773, 780, 783, 816, 818], "filepath": [18, 74, 75], "grep": 18, "commit_id": 18, "handi": [18, 123], "histori": 18, "toggl": 18, "vertic": 18, "highlight": [18, 121], "previou": [18, 119, 123, 139, 151, 607, 698, 701, 707, 709, 721, 723], "shown": [18, 69, 70, 74, 75, 115, 116, 119, 121, 123, 132, 134, 136, 151, 364, 404, 407, 424, 427, 437, 440, 561, 564, 598, 602, 756, 765, 767, 844, 858, 861, 862, 865, 949, 950, 954, 970, 971, 974], "whenev": [18, 123, 136, 137], "think": [18, 121], "interact": [18, 123, 1025], "gain": [18, 133, 138, 1038], "quit": [18, 19, 120, 123, 124, 126, 127], "repeat": [18, 53, 54, 87, 88, 99, 100, 120, 121, 123, 125, 127, 128, 129, 132, 607, 637, 638, 639, 640, 844, 896, 899], "yourself": [18, 19, 123, 150], "simpler": [18, 136], "cannot": [18, 125, 129, 139], "least": [18, 121, 123, 124, 127, 756, 780, 783], "final": [18, 120, 121, 124, 127, 129, 131, 132, 134, 136, 137, 177, 206, 207, 209, 210, 607, 643, 1044, 1055], "tickbox": 18, "lower": [18, 33, 34, 49, 50, 74, 75, 95, 96, 121, 123, 134, 151, 177, 192, 193, 230, 232, 234, 364, 534, 756, 757, 758, 759, 760, 761, 932, 938, 940], "corner": 18, "without": [18, 74, 75, 118, 119, 121, 124, 127, 128, 130, 132, 134, 136, 137, 138, 150, 151, 607, 674, 679, 844, 874, 877, 908, 910, 949, 950, 954, 955, 959, 965, 969], "span": 18, "intent": [18, 131], "larg": [18, 137, 364, 378, 381, 536, 539], "discourag": 18, "philosophi": 18, "increment": [18, 607, 662], "frequent": [18, 19], "valuabl": 18, "infrequ": 18, "earli": [18, 1025], "wast": 18, "spot": [18, 124], "mistak": [18, 132], "propos": 18, "mountain": 18, "around": [18, 71, 74, 75, 76, 77, 78, 119, 124, 127, 136, 151], "advoc": [18, 151], "individu": [18, 19, 124], "per": [18, 47, 48, 93, 94, 123, 137, 317, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "style": [18, 944, 947], "ve": [18, 133, 136, 932, 933, 1025], "were": [18, 74, 75, 118, 123, 128, 132], "actual": [18, 117, 124, 131, 133, 136, 138, 151], "aim": [18, 133], "part": [18, 33, 34, 118, 122, 123, 124, 134, 135, 139, 150, 151, 177, 230, 232, 234, 235, 237, 239, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 1056, 1057], "subsect": 18, "session": [18, 1025], "block": [18, 123, 124, 132, 133, 135, 139, 151, 317, 701, 738, 1025], "smaller": [18, 53, 54, 99, 100, 134, 139, 844, 845, 848, 878, 879, 880, 881, 882, 981, 998, 1001, 1006, 1009], "edit": 18, "exact": [18, 74, 75, 134, 949, 950, 954], "beauti": 18, "particularli": [18, 137, 151], "concern": [18, 117, 121, 128, 131, 133], "effici": [18, 119, 123, 124, 128, 131, 132, 134, 137, 151], "difficult": [18, 123, 151, 949, 950, 954, 955, 959, 965, 969], "undo": 18, "stress": 18, "frequenc": [18, 607, 643], "pycharm": 18, "pytest": [18, 123], "button": 18, "declar": 18, "insid": [18, 20, 118, 123, 128, 129], "exec": 18, "rm": 18, "rf": 18, "cp": 18, "ivy_contain": 18, "bash": [18, 20], "test_ivi": [18, 123], "test_funct": [18, 123], "test_cor": 18, "test_imag": 18, "test_random_crop": 18, "header": 18, "summari": [18, 74, 75, 81, 82, 123, 248, 272, 273, 274, 309, 310, 311, 317, 327, 328, 607, 623, 627, 657, 701, 733], "q": [18, 151, 739, 755, 756, 771, 773, 800, 802], "array_api_test": 18, "test_creation_funct": 18, "test_arang": 18, "window": [18, 20, 47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "variou": [18, 119, 120, 126, 150], "valu": [18, 22, 25, 26, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 53, 54, 55, 56, 61, 62, 71, 74, 75, 76, 77, 78, 85, 86, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 107, 108, 119, 120, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 139, 151, 177, 178, 179, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 248, 251, 254, 272, 273, 274, 317, 326, 357, 358, 364, 365, 366, 367, 368, 369, 370, 373, 378, 381, 383, 386, 392, 395, 428, 431, 446, 449, 450, 453, 462, 465, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 534, 535, 536, 539, 545, 548, 549, 552, 553, 556, 561, 564, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 623, 628, 643, 644, 646, 648, 649, 651, 657, 660, 664, 674, 675, 676, 677, 678, 679, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 721, 723, 734, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 755, 756, 788, 790, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 822, 824, 844, 845, 846, 847, 848, 849, 854, 855, 856, 857, 870, 873, 874, 877, 900, 902, 903, 904, 905, 906, 908, 912, 913, 914, 915, 916, 921, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 942, 944, 945, 946, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064], "cpu": [18, 41, 42, 74, 75, 103, 104, 130, 151, 177, 206, 207, 209, 210, 243, 247, 317, 333, 334, 336, 350, 353, 355, 359, 360, 362, 363, 607, 644, 646, 648, 649, 651, 672, 675, 676, 932, 933, 934, 935, 936, 937, 938, 940, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "gpu": [18, 103, 104, 130, 136, 151, 317, 333, 336, 349, 351, 355, 357, 362, 934, 936], "combin": [18, 71, 74, 75, 76, 77, 78, 121, 123, 124, 127, 128, 139, 756, 762, 764], "wherebi": [19, 128, 908, 920], "broad": 19, "distribut": [19, 51, 52, 74, 75, 97, 98, 103, 104, 123, 130, 151, 317, 335, 339, 340, 341, 342, 739, 751, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 932, 933, 934, 935, 936, 937, 938, 940, 1044, 1052, 1056, 1057], "across": [19, 74, 75, 119, 121, 123, 124, 128, 129, 317, 324, 325, 335, 336, 338, 339, 340, 341, 342, 346, 356, 357, 607, 615, 616, 908, 914, 944, 946], "todo": 19, "commit": [19, 123], "NOT": [19, 364, 522, 525], "static": [19, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 120, 121, 124, 151, 168, 172, 174, 175, 266, 270, 365, 369, 378, 382, 387, 391, 432, 436, 565, 569, 570, 574, 593, 594, 598, 599, 608, 612, 691, 692, 716, 720, 746, 750, 757, 761, 829, 833, 834, 838, 839, 843, 845, 849, 878, 882, 927, 931, 934, 936, 955, 956, 1015, 1019, 1020, 1024], "method": [19, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 132, 134, 135, 138, 139, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 181, 182, 187, 188, 195, 196, 198, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 247, 248, 266, 267, 268, 270, 275, 278, 364, 365, 366, 367, 369, 378, 379, 380, 382, 383, 386, 387, 388, 389, 391, 404, 407, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 587, 593, 594, 595, 596, 598, 599, 600, 601, 602, 607, 608, 609, 610, 612, 623, 624, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 646, 647, 648, 649, 650, 652, 675, 676, 689, 691, 692, 693, 694, 695, 696, 701, 702, 703, 704, 706, 716, 717, 718, 720, 721, 723, 725, 727, 738, 739, 745, 746, 747, 748, 750, 755, 756, 757, 758, 759, 761, 762, 764, 765, 767, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 847, 849, 858, 861, 862, 865, 870, 873, 878, 879, 880, 882, 883, 892, 895, 908, 909, 919, 920, 921, 927, 928, 929, 931, 932, 934, 936, 937, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1044, 1055, 1056, 1057], "instanc": [19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 119, 120, 121, 123, 124, 127, 129, 131, 137, 138, 139, 152, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 266, 267, 268, 269, 275, 278, 298, 301, 317, 324, 355, 364, 365, 366, 367, 368, 378, 379, 380, 381, 383, 386, 387, 388, 389, 390, 404, 407, 424, 427, 428, 429, 430, 431, 432, 433, 434, 437, 440, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 579, 580, 583, 584, 587, 593, 595, 596, 597, 598, 600, 601, 602, 607, 608, 609, 610, 624, 644, 646, 648, 649, 663, 680, 689, 691, 693, 694, 695, 696, 702, 703, 704, 706, 716, 717, 718, 739, 742, 745, 746, 747, 748, 749, 755, 756, 757, 758, 759, 760, 762, 764, 765, 767, 768, 770, 828, 829, 830, 831, 832, 834, 835, 836, 839, 840, 841, 844, 845, 846, 847, 858, 861, 862, 865, 870, 873, 878, 879, 880, 881, 883, 892, 895, 926, 927, 928, 929, 930, 932, 937, 938, 940, 944, 945, 946, 947, 948, 949, 950, 954, 955, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1036, 1037], "revers": [19, 22, 25, 26, 71, 76, 77, 120, 121, 139, 151, 607, 628, 844, 862, 865], "resourc": 19, "content": [19, 20, 74, 75, 131, 134, 137], "thei": [19, 74, 75, 117, 118, 121, 123, 124, 126, 128, 129, 130, 131, 132, 136, 137, 138, 139, 151, 248, 303, 904, 905, 906, 932, 933, 1025, 1066, 1067], "hypothesi": 19, "cover": [19, 120, 121, 123, 124, 126, 133], "lambda": [19, 134, 137, 1060, 1063, 1065], "direct": [19, 138, 139, 150, 970, 976, 979], "bind": [19, 128], "def": [19, 118, 119, 121, 123, 124, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 1025], "special": [19, 22, 25, 26, 71, 76, 77, 118, 119, 120, 121, 127, 364, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 424, 427, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013], "aforement": 19, "categori": [19, 118, 127, 128, 129, 133, 1025], "parent": [19, 136, 701, 738], "arraywithelementwis": [19, 22, 25, 26, 39, 127], "containerwithmanipul": [19, 71, 76, 77, 99], "hint": [19, 118, 119, 120, 124, 127, 131, 132, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018], "its": [19, 20, 53, 54, 99, 100, 120, 123, 132, 248, 256, 259, 317, 358, 607, 690, 756, 780, 783, 844, 858, 861, 874, 877, 878, 879, 880, 881, 882, 892, 895], "docstr": [19, 20, 22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 124, 128, 132, 168, 169, 170, 172, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 212, 215, 217, 218, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 266, 267, 268, 269, 270, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 404, 407, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 440, 462, 463, 464, 465, 494, 497, 534, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 756, 757, 758, 759, 761, 765, 767, 768, 770, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 846, 847, 849, 858, 861, 862, 865, 878, 879, 880, 881, 882, 927, 928, 929, 931, 934, 936, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024], "thorough": [19, 119, 120, 123], "transpil": [19, 133, 135, 1025, 1031], "builder": [20, 149, 151, 1025], "maco": 20, "ubuntu": 20, "uid": 20, "make_docs_without_dock": 20, "rel": [20, 53, 54, 99, 100, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 756, 768, 770, 788, 790, 797, 799, 816, 818, 844, 862, 865, 878, 879, 880, 881, 882, 970, 971, 974, 976, 979, 1025], "synchron": 20, "rest": [20, 135, 139], "remove_doc": 20, "_": [20, 120, 123, 128, 131, 136, 137, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 701, 702, 705, 707, 709, 756, 768, 770, 825, 827, 844, 858, 861, 878, 881, 949, 950, 954, 970, 971, 974, 981, 986, 989], "indic": [20, 41, 42, 47, 48, 53, 54, 55, 56, 74, 75, 87, 88, 93, 94, 99, 100, 101, 102, 132, 135, 139, 162, 167, 364, 565, 568, 607, 644, 645, 646, 647, 648, 649, 650, 651, 652, 659, 672, 675, 676, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 756, 822, 824, 844, 878, 879, 880, 881, 882, 908, 909, 911, 913, 915, 916, 917, 919, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 944, 945, 946, 947, 949, 950, 954, 960, 964, 970, 971, 974, 976, 979, 1025, 1028, 1030, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1056, 1057], "privat": [20, 123, 1060, 1064], "fulfil": [20, 133, 1025], "autogenerated_sourc": 20, "format": [20, 74, 75, 117, 120, 129, 130, 134, 136, 137, 248, 275, 278, 317, 334, 981, 982, 985, 1025], "png": [20, 137], "_imag": 20, "lastli": 20, "structur": [20, 71, 74, 75, 76, 77, 78, 118, 124, 127, 128, 137, 138, 607, 623, 908, 921], "rst": 20, "skip": [20, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 123, 168, 170, 172, 266, 268, 270, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 908, 921, 927, 929, 931, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024], "read": [20, 74, 75, 1025], "partial_sourc": 20, "conf": 20, "copi": [20, 33, 34, 35, 36, 41, 42, 74, 75, 79, 80, 81, 82, 87, 88, 120, 125, 129, 134, 136, 137, 150, 151, 177, 181, 182, 183, 184, 185, 195, 198, 248, 251, 252, 253, 254, 255, 317, 359, 607, 624, 691, 692, 693, 694, 695, 696, 844, 874, 877, 908, 910, 970, 976, 979], "create_rst_fil": 20, "filter": [20, 47, 48, 93, 94, 123, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "repres": [20, 39, 40, 85, 86, 123, 136, 177, 212, 215, 248, 279, 364, 374, 377, 378, 381, 387, 388, 389, 390, 391, 400, 403, 437, 440, 536, 539, 575, 576, 577, 578, 579, 598, 599, 600, 601, 602, 701, 738, 739, 752, 756, 803, 804, 806], "overal": [20, 120, 128, 129, 130, 139], "markup": 20, "6": [20, 22, 25, 26, 39, 40, 43, 44, 53, 54, 71, 76, 77, 85, 86, 97, 98, 101, 102, 103, 104, 121, 123, 125, 128, 136, 137, 138, 162, 164, 165, 167, 177, 201, 204, 243, 247, 248, 275, 278, 317, 336, 352, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 390, 404, 407, 408, 411, 424, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 462, 465, 474, 477, 494, 497, 534, 535, 541, 544, 561, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 580, 583, 584, 587, 593, 597, 598, 602, 607, 616, 625, 644, 646, 648, 651, 689, 701, 702, 703, 705, 739, 742, 745, 746, 749, 755, 756, 762, 764, 765, 767, 768, 770, 794, 796, 807, 809, 813, 815, 828, 829, 831, 832, 833, 834, 836, 838, 839, 841, 842, 843, 844, 845, 846, 848, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 881, 883, 892, 895, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 944, 945, 948, 949, 950, 954, 955, 959, 981, 982, 985, 986, 989], "extract": [20, 118], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 151], "module_nam": 20, "copy_readme_to_rst": 20, "tabl": 20, "toc": 20, "tree": 20, "append": [20, 74, 75, 123, 134, 137, 364, 412, 415, 756, 768, 770, 780, 783], "append_toctree_to_rst": 20, "9": [20, 22, 25, 26, 39, 40, 43, 44, 53, 54, 71, 76, 77, 85, 86, 89, 90, 103, 104, 121, 123, 137, 138, 364, 378, 379, 380, 381, 382, 387, 390, 404, 407, 408, 411, 534, 535, 561, 564, 565, 568, 580, 583, 584, 587, 607, 644, 646, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 716, 719, 721, 722, 723, 724, 739, 742, 745, 746, 749, 756, 762, 764, 765, 767, 768, 770, 794, 796, 807, 809, 813, 815, 844, 845, 846, 848, 862, 865, 870, 873, 878, 881, 883, 932, 933, 934, 935, 936, 944, 948, 949, 950, 954, 981, 982, 985, 1060, 1061, 1062], "index": [20, 33, 34, 41, 42, 61, 62, 74, 75, 79, 80, 87, 88, 107, 108, 124, 128, 136, 176, 177, 192, 193, 212, 213, 214, 215, 216, 317, 355, 607, 613, 644, 645, 646, 648, 649, 650, 651, 652, 844, 888, 891, 908, 911, 912, 915, 916, 917, 922, 924, 944, 945, 946, 947, 949, 950, 954, 955, 956, 957, 958, 959, 970, 971, 974, 1028, 1030], "create_index_rst": 20, "14": [20, 85, 86, 101, 102, 103, 104, 121, 123, 128, 364, 387, 390, 424, 427, 565, 569, 575, 577, 579, 701, 702, 705, 739, 755, 756, 768, 770, 794, 796, 927, 929, 931, 934, 936, 949, 950, 954, 981, 982, 985], "\u03c0": [20, 364, 370, 373, 383, 386, 392, 395, 396, 399], "namespac": [20, 118, 129, 134, 139], "arraywithactiv": [22, 23, 25, 26], "arraywithcr": [22, 25, 26, 33], "arraywithdatatyp": [22, 25, 26, 35], "arraywithdevic": [22, 25, 26, 37, 136], "arraywithgener": [22, 25, 26, 41, 136], "arraywithgradi": [22, 25, 26, 43, 136], "arraywithimag": [22, 25, 26, 45, 136], "arraywithlay": [22, 25, 26, 47], "arraywithlinearalgebra": [22, 25, 26, 49], "arraywithloss": [22, 25, 26, 51], "arraywithmanipul": [22, 25, 26, 53], "arraywithnorm": [22, 25, 26, 55], "arraywithrandom": [22, 25, 26, 57, 136], "arraywithsearch": [22, 25, 26, 59], "arraywithset": [22, 25, 26, 61], "arraywithsort": [22, 25, 26, 63], "arraywithstatist": [22, 25, 26, 65], "arraywithutil": [22, 25, 26, 67], "properti": [22, 25, 26, 74, 75, 121, 123, 124, 128, 136, 137, 138, 317, 326, 1056, 1057, 1060, 1061, 1062, 1063, 1065], "__add__": [22, 25, 26, 71, 76, 77, 119, 120, 121, 127, 128, 136], "variant": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 121, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 757, 758, 759, 761, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 845, 846, 847, 849, 878, 879, 880, 882, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024], "wrap": [22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 116, 117, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 139, 151, 152, 160, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 607, 608, 609, 610, 612, 618, 648, 649, 691, 692, 693, 694, 701, 702, 703, 704, 706, 716, 717, 718, 720, 737, 746, 747, 748, 750, 757, 758, 759, 761, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 845, 846, 847, 849, 878, 879, 880, 882, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024], "minim": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 72, 73, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 131, 134, 168, 169, 170, 172, 181, 182, 187, 188, 195, 196, 201, 202, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 266, 267, 268, 270, 365, 366, 367, 369, 378, 379, 380, 382, 387, 388, 389, 391, 428, 429, 430, 432, 433, 434, 436, 462, 463, 464, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 593, 594, 595, 596, 598, 599, 600, 601, 608, 609, 610, 612, 648, 649, 691, 692, 693, 694, 702, 703, 704, 706, 716, 717, 718, 720, 746, 747, 748, 750, 757, 758, 759, 761, 829, 830, 831, 833, 834, 835, 836, 838, 839, 840, 841, 843, 845, 846, 847, 849, 878, 879, 880, 882, 927, 928, 929, 931, 934, 936, 955, 956, 957, 958, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024], "self": [22, 23, 24, 25, 26, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 127, 128, 134, 136, 137, 138, 139, 168, 169, 170, 172, 181, 182, 183, 187, 188, 189, 195, 196, 197, 201, 202, 203, 212, 213, 214, 217, 218, 219, 225, 226, 227, 230, 232, 233, 235, 237, 238, 243, 245, 246, 251, 252, 253, 256, 257, 258, 261, 262, 263, 266, 267, 268, 275, 276, 277, 280, 281, 282, 287, 288, 289, 293, 294, 295, 298, 299, 300, 304, 305, 306, 317, 365, 366, 367, 370, 371, 372, 374, 375, 376, 378, 379, 380, 383, 384, 385, 387, 388, 389, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 437, 438, 439, 441, 442, 443, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 482, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 498, 499, 500, 502, 503, 504, 506, 507, 508, 510, 511, 512, 514, 515, 516, 518, 519, 520, 522, 523, 524, 526, 527, 528, 530, 531, 532, 536, 537, 538, 541, 542, 543, 545, 546, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 565, 566, 567, 570, 571, 572, 575, 576, 577, 580, 581, 582, 584, 585, 586, 588, 590, 591, 593, 595, 596, 598, 600, 601, 603, 604, 605, 608, 609, 610, 620, 621, 629, 630, 633, 634, 637, 638, 644, 645, 648, 649, 650, 691, 692, 693, 694, 702, 703, 704, 707, 708, 712, 713, 716, 717, 718, 721, 722, 725, 726, 729, 730, 746, 747, 748, 757, 758, 759, 761, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 782, 784, 785, 788, 789, 791, 792, 794, 795, 797, 798, 800, 801, 804, 805, 807, 808, 810, 811, 813, 814, 816, 817, 819, 820, 822, 823, 825, 826, 829, 830, 831, 834, 835, 836, 839, 840, 841, 845, 846, 847, 850, 851, 852, 854, 855, 856, 858, 859, 860, 862, 863, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 884, 885, 886, 888, 889, 890, 892, 893, 894, 896, 897, 898, 900, 901, 902, 927, 928, 929, 938, 939, 950, 952, 953, 955, 957, 958, 960, 962, 963, 965, 967, 968, 971, 972, 973, 976, 977, 978, 982, 983, 984, 986, 987, 988, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1002, 1003, 1004, 1006, 1007, 1008, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1060, 1064], "input": [22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 151, 152, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 293, 296, 298, 301, 303, 304, 307, 312, 316, 317, 324, 325, 333, 334, 335, 336, 338, 339, 342, 346, 352, 358, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 619, 620, 622, 624, 625, 626, 628, 629, 631, 633, 635, 637, 639, 641, 642, 643, 644, 646, 648, 649, 651, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 672, 675, 676, 682, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 711, 716, 717, 718, 719, 720, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 911, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1059], "numer": [22, 25, 26, 39, 40, 71, 76, 77, 85, 86, 118, 138, 177, 212, 215, 248, 251, 254, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 428, 429, 430, 431, 441, 444, 458, 461, 462, 463, 464, 465, 466, 469, 478, 481, 482, 485, 486, 489, 490, 493, 522, 525, 526, 529, 536, 539, 541, 544, 545, 548, 553, 556, 557, 560, 565, 566, 567, 568, 569, 584, 587, 588, 592, 603, 606, 607, 654, 655, 677, 678, 684, 685, 756, 762, 764, 780, 783, 794, 796, 807, 809, 813, 815, 816, 818, 819, 821, 932, 943, 944, 945, 946, 981, 986, 989, 998, 1001, 1006, 1009, 1038], "broadcast": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 120, 121, 123, 128, 129, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 256, 259, 261, 264, 317, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 629, 631, 633, 635, 637, 639, 642, 648, 649, 651, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 948, 949, 965, 969, 970, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "element": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 53, 54, 61, 62, 71, 72, 73, 74, 75, 76, 77, 85, 86, 87, 88, 99, 100, 107, 108, 120, 123, 134, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 200, 201, 202, 204, 230, 232, 234, 235, 237, 239, 317, 337, 341, 345, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 615, 616, 619, 620, 622, 625, 626, 642, 659, 691, 692, 693, 694, 695, 696, 701, 738, 739, 751, 756, 762, 764, 771, 773, 780, 783, 800, 802, 807, 809, 844, 845, 846, 847, 848, 849, 862, 865, 870, 873, 878, 879, 880, 881, 882, 883, 884, 887, 908, 911, 932, 933, 944, 947, 948, 949, 950, 954, 955, 956, 957, 958, 959, 960, 964, 965, 969, 970, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1018, 1020, 1023, 1044, 1052], "wise": [22, 25, 26, 39, 40, 71, 74, 75, 76, 77, 85, 86, 134, 139, 162, 163, 164, 165, 166, 167, 168, 171, 173, 364, 365, 368, 370, 373, 378, 379, 380, 381, 382, 383, 386, 392, 395, 396, 399, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 446, 449, 450, 453, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 545, 548, 553, 556, 557, 560, 588, 592, 607, 642, 844, 845, 848], "sum": [22, 25, 26, 39, 40, 65, 66, 71, 74, 75, 76, 77, 85, 86, 87, 88, 111, 112, 124, 128, 129, 131, 134, 317, 343, 344, 345, 346, 358, 364, 378, 379, 380, 381, 382, 514, 517, 607, 626, 633, 634, 635, 636, 675, 676, 739, 755, 756, 807, 809, 816, 818, 822, 824, 981, 982, 985, 1002, 1005], "promot": [22, 25, 26, 35, 36, 39, 40, 49, 50, 71, 76, 77, 81, 82, 85, 86, 95, 96, 120, 124, 129, 248, 251, 254, 266, 267, 268, 269, 270, 303, 304, 307, 312, 364, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 400, 403, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 432, 433, 434, 435, 436, 437, 440, 441, 444, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 514, 517, 530, 533, 536, 539, 553, 556, 557, 560, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 756, 757, 758, 759, 760, 761, 762, 764, 777, 779, 780, 783, 788, 790, 794, 796, 797, 799, 804, 806, 819, 821, 822, 824, 844, 888, 891, 981, 990, 993], "y": [22, 25, 26, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 71, 76, 77, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 113, 114, 118, 121, 125, 128, 134, 136, 162, 164, 165, 166, 167, 168, 171, 173, 177, 200, 201, 204, 212, 215, 222, 223, 225, 228, 243, 247, 248, 251, 254, 275, 278, 317, 334, 348, 352, 357, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 396, 399, 404, 407, 408, 411, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 457, 462, 463, 464, 465, 474, 477, 494, 497, 534, 535, 541, 544, 545, 548, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 608, 609, 610, 611, 612, 615, 616, 624, 625, 641, 642, 644, 646, 648, 649, 651, 682, 689, 691, 692, 693, 694, 695, 696, 701, 711, 739, 745, 746, 747, 748, 749, 750, 752, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 777, 779, 794, 796, 813, 815, 816, 818, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 858, 861, 862, 865, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 892, 895, 908, 911, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 955, 956, 957, 958, 959, 970, 971, 974, 981, 982, 985, 986, 989, 1002, 1005, 1006, 1009, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024], "z": [22, 25, 26, 39, 40, 41, 42, 51, 52, 71, 76, 77, 85, 86, 97, 98, 121, 125, 128, 134, 136, 317, 348, 364, 378, 379, 380, 381, 382, 404, 407, 424, 427, 474, 477, 494, 497, 534, 535, 607, 615, 616, 644, 646, 648, 649, 682, 756, 762, 764, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 848, 908, 911, 944, 945, 981, 982, 985, 986, 989], "mix": [22, 25, 26, 41, 42, 71, 76, 77, 97, 98, 117, 121, 123, 134, 248, 304, 307, 317, 352, 364, 378, 381, 404, 407, 424, 427, 474, 477, 494, 497, 535, 545, 548, 607, 608, 609, 624, 641, 644, 646, 648, 651, 689, 691, 695, 696, 739, 742, 745, 746, 749, 755, 756, 757, 760, 813, 815, 828, 829, 832, 833, 834, 838, 839, 842, 843, 844, 845, 848, 926, 927, 930, 944, 948, 981, 982, 985, 990, 993], "__le__": [22, 25, 26], "equal": [22, 25, 26, 33, 34, 39, 40, 41, 42, 74, 75, 85, 86, 87, 88, 121, 128, 129, 177, 192, 193, 200, 201, 202, 204, 248, 251, 254, 364, 412, 415, 420, 423, 478, 481, 482, 485, 553, 556, 561, 564, 607, 608, 609, 610, 611, 612, 615, 616, 756, 768, 770, 788, 790, 797, 799, 844, 845, 848, 854, 857, 883, 900, 903, 932, 938, 940, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979, 981, 990, 993, 1002, 1005, 1006, 1009, 1010, 1013], "result": [22, 23, 24, 25, 26, 33, 34, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 120, 121, 123, 127, 128, 129, 131, 137, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 201, 202, 204, 206, 207, 209, 210, 222, 223, 225, 226, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 245, 247, 248, 251, 254, 261, 264, 304, 307, 317, 324, 359, 364, 365, 366, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 463, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 625, 626, 629, 631, 633, 635, 637, 639, 642, 644, 646, 648, 649, 651, 659, 672, 675, 676, 701, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 908, 911, 921, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 948, 949, 950, 954, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "bool": [22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 49, 50, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 115, 116, 121, 128, 129, 131, 132, 139, 168, 170, 172, 174, 175, 177, 200, 248, 251, 254, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 292, 293, 294, 296, 298, 299, 301, 316, 317, 333, 334, 349, 358, 361, 364, 365, 367, 369, 378, 380, 382, 387, 389, 391, 404, 407, 408, 411, 416, 419, 424, 427, 428, 430, 432, 434, 436, 446, 449, 462, 464, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 518, 521, 522, 525, 526, 529, 545, 548, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 609, 610, 611, 612, 615, 616, 625, 628, 629, 632, 633, 636, 637, 640, 641, 643, 644, 647, 648, 652, 656, 658, 663, 665, 666, 667, 668, 682, 683, 691, 692, 694, 699, 700, 701, 716, 717, 718, 719, 720, 734, 738, 756, 757, 758, 759, 760, 761, 784, 786, 807, 809, 822, 824, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 849, 878, 880, 882, 883, 904, 905, 906, 907, 908, 909, 910, 914, 918, 919, 920, 927, 929, 932, 933, 944, 945, 946, 955, 956, 958, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "true": [22, 25, 26, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 128, 129, 131, 132, 134, 136, 137, 138, 139, 162, 163, 168, 170, 172, 174, 175, 177, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 248, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 301, 302, 304, 306, 308, 316, 317, 333, 350, 354, 355, 364, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 427, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 525, 526, 528, 529, 530, 532, 536, 538, 540, 541, 543, 545, 547, 548, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 607, 608, 609, 610, 611, 612, 615, 616, 617, 618, 620, 621, 625, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644, 645, 647, 648, 650, 652, 658, 659, 666, 680, 682, 683, 689, 691, 692, 694, 696, 698, 700, 701, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 738, 739, 751, 756, 757, 758, 759, 760, 761, 780, 782, 784, 786, 807, 808, 809, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 883, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 905, 906, 907, 908, 909, 918, 919, 921, 927, 929, 931, 932, 933, 938, 939, 941, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 961, 963, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 984, 986, 988, 989, 990, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "__radd__": [22, 25, 26, 71, 76, 77, 120, 121], "adam_upd": [22, 25, 26, 89, 90, 138, 701], "invok": [22, 25, 26], "function_nam": [22, 25, 26], "variabl": [22, 25, 26, 27, 28, 29, 30, 31, 32, 43, 44, 55, 56, 71, 74, 75, 76, 77, 89, 90, 101, 102, 119, 120, 123, 125, 128, 129, 131, 132, 137, 138, 139, 151, 607, 617, 661, 662, 663, 664, 665, 666, 668, 686, 701, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 737, 739, 754, 756, 804, 806, 904, 905, 906, 907, 926, 927, 928, 929, 930, 931, 1025, 1036, 1037, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "arang": [22, 25, 26, 71, 76, 77, 129, 177, 206, 207, 209, 210, 981, 982, 985, 1025], "arg_info": [22, 25, 26, 71, 76, 77, 607], "arg_nam": [22, 25, 26, 71, 76, 77, 607], "argmax": [22, 25, 26, 71, 76, 77, 944, 1025], "argmin": [22, 25, 26, 71, 76, 77, 944, 1025], "array_equ": [22, 25, 26, 71, 76, 77, 607], "arrays_equ": [22, 25, 26, 71, 74, 75, 76, 77, 607], "as_ivy_dev": [22, 25, 26, 71, 76, 77, 136, 317], "as_ivy_dtyp": [22, 25, 26, 71, 76, 77, 248], "as_native_dev": [22, 25, 26, 71, 76, 77, 317], "as_native_dtyp": [22, 25, 26, 71, 76, 77, 248], "assert_supports_inplac": [22, 25, 26, 71, 76, 77, 607], "cache_fn": [22, 25, 26, 71, 76, 77, 124, 607], "clear_mem_on_dev": [22, 25, 26, 71, 76, 77, 317], "clip_matrix_norm": [22, 25, 26, 71, 76, 77, 607], "clip_vector_norm": [22, 25, 26, 87, 88, 607], "closest_valid_dtyp": [22, 25, 26, 71, 76, 77, 248], "container_typ": [22, 25, 26, 71, 76, 77, 607], "conv1d": [22, 25, 26, 71, 76, 77, 739, 1044], "conv1d_transpos": [22, 25, 26, 71, 76, 77, 739], "conv2d": [22, 25, 26, 71, 76, 77, 739, 1025, 1044], "conv2d_transpos": [22, 25, 26, 71, 76, 77, 739], "conv3d": [22, 25, 26, 71, 76, 77, 739, 1044], "conv3d_transpos": [22, 25, 26, 71, 76, 77, 739], "copy_arrai": [22, 25, 26, 71, 76, 77, 607], "cumprod": [22, 25, 26, 71, 76, 77, 139, 607], "cumsum": [22, 25, 26, 71, 76, 77, 607, 1025], "current_backend_str": [22, 25, 26, 71, 76, 77, 607], "default_devic": [22, 25, 26, 71, 76, 77, 130, 134, 317, 352, 355, 362], "default_dtyp": [22, 25, 26, 71, 76, 77, 124, 129, 248], "default_float_dtyp": [22, 25, 26, 71, 76, 77, 129, 248], "default_int_dtyp": [22, 25, 26, 71, 76, 77, 129, 248], "dev_clon": [22, 25, 26, 74, 75, 317], "dev_clone_arrai": [22, 25, 26, 71, 76, 77, 317], "dev_clone_it": [22, 25, 26, 71, 76, 77, 317], "dev_clone_nest": [22, 25, 26, 71, 76, 77, 317], "dev_dist": [22, 25, 26, 74, 75, 317], "dev_dist_arrai": [22, 25, 26, 71, 76, 77, 317], "dev_dist_it": [22, 25, 26, 71, 76, 77, 317], "dev_dist_nest": [22, 25, 26, 71, 76, 77, 317], "dev_unifi": [22, 25, 26, 71, 76, 77, 317], "dev_unify_arrai": [22, 25, 26, 71, 76, 77, 317], "dev_unify_it": [22, 25, 26, 71, 76, 77, 317], "dev_unify_nest": [22, 25, 26, 71, 76, 77, 317], "dev_util": [22, 25, 26, 71, 76, 77, 130, 317], "dropout": [22, 25, 26, 71, 76, 77, 137, 739, 1044, 1055], "dtype": [22, 25, 26, 33, 34, 35, 36, 65, 66, 74, 75, 79, 80, 81, 82, 87, 88, 111, 112, 118, 121, 123, 124, 129, 130, 132, 136, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 304, 305, 307, 309, 310, 311, 316, 317, 354, 364, 420, 423, 607, 615, 616, 672, 691, 692, 694, 695, 739, 751, 844, 858, 861, 932, 938, 940, 944, 945, 946, 970, 976, 979, 981, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1008, 1009, 1014, 1015, 1018, 1025, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1066, 1067], "dtype_bit": [22, 25, 26, 71, 76, 77, 248], "einops_rearrang": [22, 25, 26, 87, 88, 607], "einops_reduc": [22, 25, 26, 87, 88, 607], "einops_repeat": [22, 25, 26, 87, 88, 607], "empti": [22, 25, 26, 71, 74, 75, 76, 77, 127, 129, 130, 177, 178, 179, 701, 738, 981, 1002, 1005, 1006, 1009, 1014, 1015, 1018, 1020, 1023], "execute_with_gradi": [22, 25, 26, 71, 76, 77, 128, 137, 138, 139, 151, 701, 1025], "ey": [22, 25, 26, 71, 76, 77, 139, 177, 739, 742, 746, 749], "floormod": [22, 25, 26, 71, 76, 77, 607, 1025], "fourier_encod": [22, 25, 26, 71, 76, 77, 607], "function_supported_dtyp": [22, 25, 26, 71, 76, 77, 248], "function_unsupported_dtyp": [22, 25, 26, 71, 76, 77, 248], "gather": [22, 25, 26, 41, 42, 87, 88, 607, 648, 649, 650, 651, 652], "gelu": [22, 25, 26, 71, 76, 77, 162, 1033], "get_all_arrays_in_memori": [22, 25, 26, 71, 76, 77, 607], "get_all_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 130, 317], "get_min_bas": [22, 25, 26, 71, 76, 77, 607], "get_min_denomin": [22, 25, 26, 71, 76, 77, 607], "get_num_dim": [22, 25, 26, 71, 76, 77, 607, 1025], "get_referrers_recurs": [22, 25, 26, 71, 76, 77, 607], "gpu_is_avail": [22, 25, 26, 71, 76, 77, 317], "gradient_descent_upd": [22, 25, 26, 89, 90, 701, 904, 905, 906, 907, 1025], "handle_nest": [22, 25, 26, 71, 76, 77, 124, 128, 152], "handle_out_argu": [22, 25, 26, 71, 76, 77, 119, 126, 129, 130, 131, 152], "has_nan": [22, 25, 26, 74, 75, 607], "indices_wher": [22, 25, 26, 71, 76, 77, 132, 607, 1025], "infer_devic": [22, 25, 26, 71, 76, 77, 119, 129, 130, 152], "infer_dtyp": [22, 25, 26, 71, 76, 77, 119, 129, 130, 152], "inplace_arrays_support": [22, 25, 26, 71, 76, 77, 607], "inplace_decr": [22, 25, 26, 71, 76, 77, 607], "inplace_incr": [22, 25, 26, 71, 76, 77, 607], "inplace_upd": [22, 25, 26, 74, 75, 131, 607, 1036, 1037], "inplace_variables_support": [22, 25, 26, 71, 76, 77, 607], "inputs_to_native_arrai": [22, 25, 26, 71, 76, 77, 127, 152], "invalid_dtyp": [22, 25, 26, 71, 76, 77, 129, 248], "is_arrai": [22, 25, 26, 607], "is_ivy_arrai": [22, 25, 26, 131, 136, 607], "is_ivy_contain": [22, 25, 26, 71, 76, 77, 607], "is_native_arrai": [22, 25, 26, 136, 607], "is_vari": [22, 25, 26, 43, 44, 89, 90, 131, 701, 720], "boolean": [22, 25, 26, 41, 42, 43, 44, 74, 75, 87, 88, 89, 90, 123, 128, 177, 200, 248, 251, 254, 292, 316, 317, 349, 361, 364, 404, 407, 408, 411, 416, 419, 424, 427, 518, 521, 522, 525, 526, 529, 530, 533, 607, 608, 609, 610, 611, 612, 615, 616, 658, 659, 660, 664, 665, 666, 667, 668, 680, 686, 700, 701, 716, 717, 718, 719, 720, 738, 904, 905, 906, 908, 918, 981, 994, 997], "trainabl": [22, 25, 26, 43, 44, 89, 90, 120, 135, 137, 138, 701, 716, 717, 718, 719, 720, 1036, 1037, 1056, 1057, 1066], "lamb_upd": [22, 25, 26, 89, 90, 701], "lars_upd": [22, 25, 26, 89, 90, 701], "leaky_relu": [22, 25, 26, 71, 76, 77, 123, 162, 1025], "linear": [22, 25, 26, 71, 76, 77, 120, 134, 137, 138, 139, 162, 163, 164, 165, 607, 643, 739, 751, 804, 806, 1025, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "linspac": [22, 25, 26, 71, 76, 77, 134, 177, 178, 179, 1025], "logspac": [22, 25, 26, 71, 76, 77, 134, 177], "lstm_updat": [22, 25, 26, 71, 76, 77, 134, 739], "mt": [22, 25, 26, 136], "match_kwarg": [22, 25, 26, 71, 76, 77, 607], "matrix_pow": [22, 25, 26, 71, 76, 77, 756], "maximum": [22, 25, 26, 53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 121, 134, 137, 139, 317, 338, 342, 346, 358, 364, 607, 619, 620, 622, 643, 701, 721, 723, 844, 845, 846, 847, 848, 849, 908, 920, 944, 945, 981, 986, 989, 994, 997, 1025], "minimum": [22, 25, 26, 53, 54, 74, 75, 99, 100, 134, 139, 317, 364, 365, 368, 607, 654, 655, 677, 678, 684, 685, 844, 845, 846, 847, 848, 849, 944, 946, 981, 986, 989, 994, 997, 1025], "multi_head_attent": [22, 25, 26, 71, 76, 77, 128, 131, 739], "multinomi": [22, 25, 26, 71, 76, 77, 932], "multiprocess": [22, 25, 26, 71, 74, 75, 76, 77, 78, 137, 151, 317, 324, 607], "ndim": [22, 25, 26, 123, 136, 756, 800, 802, 807, 809], "dimens": [22, 25, 26, 33, 34, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 67, 68, 71, 74, 75, 76, 77, 78, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 113, 114, 121, 123, 134, 137, 162, 167, 177, 230, 232, 234, 235, 237, 239, 317, 345, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 645, 647, 648, 650, 652, 656, 672, 699, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 753, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 819, 821, 822, 824, 828, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 853, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 904, 905, 906, 907, 932, 943, 944, 945, 946, 947, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055], "ax": [22, 25, 26, 49, 50, 53, 54, 67, 68, 74, 75, 99, 100, 113, 114, 118, 121, 123, 129, 136, 317, 358, 607, 625, 756, 784, 786, 804, 806, 813, 814, 815, 822, 824, 844, 854, 857, 862, 865, 866, 867, 868, 869, 878, 879, 880, 881, 882, 884, 887, 892, 895, 900, 903, 944, 945, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "nonzero": [22, 25, 26, 71, 76, 77, 364, 378, 381, 536, 539, 944], "num_arrays_in_memori": [22, 25, 26, 71, 76, 77, 607], "num_cpu_cor": [22, 25, 26, 71, 76, 77, 130, 317], "num_gpu": [22, 25, 26, 71, 76, 77, 123, 130, 317], "num_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 317], "one_hot": [22, 25, 26, 71, 76, 77, 139, 607, 1025], "ones": [22, 25, 26, 33, 34, 71, 74, 75, 76, 77, 123, 134, 136, 137, 177, 192, 193, 225, 226, 228, 243, 247, 364, 428, 431, 607, 672, 1025], "optimizer_upd": [22, 25, 26, 89, 90, 701], "outputs_to_ivy_arrai": [22, 25, 26, 71, 76, 77, 119, 127, 129, 130, 152], "percent_used_mem_on_dev": [22, 25, 26, 71, 76, 77, 317], "print_all_arrays_in_memori": [22, 25, 26, 71, 76, 77, 607], "print_all_ivy_arrays_on_dev": [22, 25, 26, 71, 76, 77, 317], "promote_typ": [22, 25, 26, 71, 76, 77, 248], "queue_timeout": [22, 25, 26, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 607], "randint": [22, 25, 26, 47, 48, 71, 76, 77, 93, 94, 103, 104, 746, 747, 748, 750, 932, 936, 1025], "random_norm": [22, 25, 26, 47, 48, 71, 76, 77, 93, 94, 123, 739, 742, 745, 746, 747, 748, 749, 750, 756, 807, 809, 932, 949, 950, 954], "random_uniform": [22, 25, 26, 103, 104, 123, 130, 138, 932, 1025], "relu": [22, 25, 26, 69, 70, 71, 76, 77, 137, 138, 162, 163, 164, 1025], "scaled_dot_product_attent": [22, 25, 26, 71, 76, 77, 739], "scatter_flat": [22, 25, 26, 71, 76, 77, 607], "scatter_nd": [22, 25, 26, 71, 76, 77, 136, 607, 1025], "seed": [22, 25, 26, 71, 74, 75, 76, 77, 932, 1025], "set_default_devic": [22, 25, 26, 71, 76, 77, 130, 317, 362], "set_default_dtyp": [22, 25, 26, 71, 76, 77, 124, 129, 248], "set_default_float_dtyp": [22, 25, 26, 71, 76, 77, 129, 248], "set_default_int_dtyp": [22, 25, 26, 71, 76, 77, 129, 248], "set_min_bas": [22, 25, 26, 71, 76, 77, 607], "set_min_denomin": [22, 25, 26, 71, 76, 77, 607], "set_queue_timeout": [22, 25, 26, 71, 76, 77, 607], "set_shape_array_mod": [22, 25, 26, 71, 76, 77, 607, 683, 698], "set_split_factor": [22, 25, 26, 71, 76, 77, 317], "set_tmp_dir": [22, 25, 26, 71, 76, 77, 607], "set_with_grad": [22, 25, 26, 71, 76, 77, 701, 738], "shape_array_mod": [22, 25, 26, 71, 76, 77, 607, 680, 698], "shuffl": [22, 25, 26, 74, 75, 932, 1025], "sigmoid": [22, 25, 26, 71, 76, 77, 134, 137, 138, 162, 1025], "size": [22, 25, 26, 53, 54, 71, 74, 75, 76, 77, 78, 99, 100, 123, 136, 137, 177, 206, 207, 209, 210, 317, 356, 357, 358, 607, 675, 682, 739, 755, 756, 768, 770, 784, 786, 794, 796, 800, 802, 807, 809, 819, 821, 844, 858, 861, 878, 879, 880, 881, 882, 883, 884, 887, 932, 933, 937, 938, 940, 944, 945, 947, 1014, 1015, 1018, 1020, 1023, 1044, 1045, 1046], "product": [22, 25, 26, 128, 364, 536, 539, 607, 625, 739, 754, 755, 756, 762, 764, 780, 783, 794, 796, 813, 815, 819, 821, 981, 982, 985, 998, 1001, 1044, 1055], "unknown": [22, 25, 26], "model": [22, 25, 26, 137, 138, 1025], "slogdet": [22, 25, 26, 71, 76, 77, 756], "softmax": [22, 25, 26, 69, 70, 71, 76, 77, 162, 739, 754, 755, 1025], "split_factor": [22, 25, 26, 71, 76, 77, 317, 324], "split_func_cal": [22, 25, 26, 71, 76, 77, 317], "stable_divid": [22, 25, 26, 71, 76, 77, 124, 607], "stable_pow": [22, 25, 26, 71, 76, 77, 607], "stop_gradi": [22, 25, 26, 71, 74, 75, 76, 77, 89, 90, 138, 317, 358, 701, 707, 708, 709, 710, 712, 713, 714, 715, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 904, 905, 906, 907, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "supports_inplac": [22, 25, 26, 71, 76, 77, 607], "tmp_dir": [22, 25, 26, 71, 76, 77, 607], "to_devic": [22, 25, 26, 74, 75, 317, 333], "to_ivy_shap": [22, 25, 26, 71, 76, 77, 607], "to_list": [22, 25, 26, 74, 75, 607, 1025], "to_native_arrays_and_back": [22, 25, 26, 71, 76, 77, 119, 126, 152], "to_native_shap": [22, 25, 26, 71, 76, 77, 607], "to_scalar": [22, 25, 26, 71, 76, 77, 607], "total_mem_on_dev": [22, 25, 26, 71, 76, 77, 130, 317], "tpu_is_avail": [22, 25, 26, 71, 76, 77, 317], "try_else_non": [22, 25, 26, 71, 76, 77, 607], "type_promote_arrai": [22, 25, 26, 71, 76, 77, 248], "unset_default_devic": [22, 25, 26, 71, 76, 77, 317], "unset_default_dtyp": [22, 25, 26, 71, 76, 77, 248], "unset_default_float_dtyp": [22, 25, 26, 71, 76, 77, 248], "unset_default_int_dtyp": [22, 25, 26, 71, 76, 77, 248], "unset_shape_array_mod": [22, 25, 26, 71, 76, 77, 607], "unset_with_grad": [22, 25, 26, 71, 76, 77, 701], "unstack": [22, 25, 26, 74, 75, 128, 134, 137, 607, 1025], "used_mem_on_dev": [22, 25, 26, 71, 76, 77, 317], "valid_dtyp": [22, 25, 26, 71, 76, 77, 248], "value_is_nan": [22, 25, 26, 71, 76, 77, 607], "variable_data": [22, 25, 26, 71, 76, 77, 701], "with_grad": [22, 25, 26, 71, 76, 77, 701, 733], "abc": [23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 136, 317, 324, 329, 607, 641, 1056, 1057, 1060, 1064], "softplu": [23, 24, 72, 73, 162, 172, 1025], "collect": [28, 74, 75, 123, 150, 162, 174, 317, 607, 701, 739, 828, 908, 921, 926, 932, 1033, 1044, 1058, 1060], "args_to_ivi": 28, "include_deriv": [28, 29, 30, 31, 32, 908, 910, 920], "keyword": [28, 29, 30, 71, 74, 75, 76, 77, 78, 118, 119, 123, 129, 130, 131, 137, 177, 212, 215, 317, 324, 325, 338, 342, 346, 607, 614, 669, 908, 914, 981, 1006, 1009, 1056, 1057], "nest": [28, 29, 30, 31, 32, 71, 74, 75, 76, 77, 78, 118, 123, 124, 127, 128, 136, 137, 138, 151, 317, 338, 342, 346, 607, 689, 701, 738, 904, 905, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "unchang": [28, 29, 30, 31, 32], "posit": [28, 29, 30, 39, 40, 49, 50, 53, 54, 85, 86, 95, 96, 99, 100, 119, 123, 137, 150, 176, 177, 192, 193, 248, 280, 283, 317, 338, 342, 346, 364, 365, 368, 478, 481, 482, 485, 536, 539, 557, 560, 607, 643, 756, 757, 758, 759, 760, 761, 844, 858, 861, 878, 879, 880, 881, 882, 932, 942, 944, 947, 1014, 1015, 1018, 1020, 1023, 1036, 1037], "deriv": [28, 29, 30, 31, 32, 33, 34, 43, 44, 89, 90, 129, 130, 136, 138, 177, 187, 188, 190, 201, 202, 204, 225, 226, 228, 243, 245, 247, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 908, 910, 920, 1056, 1060, 1064, 1066], "tupl": [28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 53, 54, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 118, 119, 123, 128, 129, 130, 132, 136, 137, 138, 151, 168, 170, 172, 177, 181, 182, 184, 217, 220, 248, 261, 264, 266, 268, 270, 285, 286, 312, 317, 333, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 643, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 739, 742, 745, 746, 747, 748, 749, 750, 753, 756, 757, 759, 761, 788, 790, 797, 799, 807, 808, 809, 813, 815, 822, 824, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 849, 850, 853, 854, 857, 862, 865, 866, 869, 878, 879, 880, 881, 882, 884, 887, 888, 891, 900, 903, 904, 905, 906, 907, 908, 910, 911, 913, 915, 916, 917, 919, 920, 922, 923, 924, 925, 927, 929, 931, 944, 947, 949, 955, 956, 958, 959, 960, 964, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "kei": [28, 29, 30, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 123, 128, 132, 137, 168, 170, 172, 266, 268, 270, 317, 326, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 613, 623, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 739, 754, 755, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 904, 905, 906, 908, 911, 917, 921, 927, 929, 931, 934, 936, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024, 1036, 1037, 1044, 1055, 1060, 1064], "word": [28, 29, 30, 128, 177, 178, 179, 932, 938, 940, 1036, 1037], "args_to_n": [28, 131, 136], "to_ivi": [28, 74, 75, 136, 908, 921], "leaf": [28, 31, 32, 74, 75, 124, 128, 137, 908, 909, 918, 919], "union": [28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 124, 127, 128, 129, 130, 131, 132, 134, 139, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 230, 234, 235, 239, 240, 242, 243, 245, 247, 248, 249, 250, 251, 254, 256, 259, 261, 264, 266, 268, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 287, 290, 292, 293, 296, 298, 301, 303, 304, 307, 309, 310, 311, 312, 316, 317, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 347, 353, 355, 357, 358, 359, 360, 363, 364, 365, 367, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 389, 390, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 430, 431, 432, 434, 435, 436, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 464, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 587, 588, 592, 593, 594, 596, 597, 598, 599, 601, 602, 603, 606, 607, 608, 610, 611, 612, 615, 616, 619, 620, 622, 625, 626, 629, 631, 632, 633, 635, 636, 637, 639, 640, 642, 643, 644, 646, 647, 648, 649, 651, 652, 656, 658, 659, 661, 662, 663, 672, 675, 676, 682, 688, 689, 690, 691, 692, 694, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 716, 718, 719, 720, 721, 723, 725, 727, 729, 731, 734, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 755, 756, 757, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 808, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 909, 910, 911, 919, 920, 926, 927, 929, 930, 932, 933, 934, 935, 936, 937, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 956, 958, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "nativearrai": [28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 53, 54, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 113, 114, 118, 119, 121, 124, 127, 128, 131, 132, 134, 136, 139, 152, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 177, 178, 179, 181, 184, 187, 190, 201, 204, 206, 207, 209, 210, 212, 215, 217, 218, 220, 225, 228, 230, 234, 235, 239, 243, 247, 248, 251, 254, 256, 259, 261, 264, 266, 269, 275, 278, 280, 283, 287, 290, 293, 296, 298, 301, 304, 307, 312, 317, 333, 334, 336, 352, 358, 359, 364, 365, 368, 369, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 386, 387, 390, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 569, 570, 573, 575, 578, 580, 583, 584, 587, 588, 592, 593, 597, 598, 602, 603, 606, 607, 608, 609, 611, 615, 616, 619, 620, 622, 624, 625, 626, 629, 631, 633, 635, 637, 639, 642, 643, 644, 646, 648, 649, 651, 656, 658, 659, 661, 662, 663, 672, 675, 676, 682, 689, 691, 692, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 716, 719, 720, 721, 723, 725, 727, 729, 731, 734, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 755, 756, 757, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 874, 877, 878, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 908, 910, 911, 920, 926, 927, 930, 932, 933, 938, 940, 943, 944, 945, 946, 947, 948, 949, 950, 954, 955, 959, 960, 964, 965, 969, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1018, 1019, 1020, 1023, 1024], "travers": [28, 31, 32, 74, 75, 128, 134, 136, 908, 920], "lowest": [28, 31, 32, 74, 75, 103, 104, 124, 151, 908, 920, 932, 934, 935, 936], "leav": [28, 31, 32, 71, 74, 75, 76, 77, 119, 120, 121, 123, 124, 128, 129, 131, 137, 138, 844, 888, 891, 908, 909, 910, 918, 919, 920], "to_n": [28, 74, 75], "item": [28, 32, 69, 70, 74, 75, 129, 134, 136, 137, 139, 248, 272, 317, 324, 325, 326, 333, 335, 337, 339, 341, 345, 607, 623, 657, 684, 685, 908, 913, 914, 915, 916, 920, 924, 925, 1025, 1056, 1057], "asarrai": [33, 34, 79, 80, 123, 131, 177, 739, 740, 949, 955, 959], "nativedtyp": [33, 34, 118, 119, 129, 130, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 217, 218, 220, 222, 223, 225, 226, 228, 240, 242, 243, 245, 247, 248, 250, 251, 254, 273, 274, 275, 278, 303, 316, 981, 1006, 1009], "datatyp": [33, 34, 74, 75, 81, 82, 177, 181, 182, 184, 217, 218, 220, 248, 271, 303], "nativedevic": [33, 34, 103, 104, 118, 119, 129, 130, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 217, 218, 220, 222, 223, 225, 226, 228, 240, 242, 243, 245, 247, 317, 331, 332, 333, 347, 353, 355, 357, 359, 360, 363, 607, 672, 932, 933, 934, 935, 936, 937, 938, 940], "interpret": [33, 34, 177, 181, 182, 184, 217, 218, 220], "empty_lik": [33, 34, 79, 80, 177], "uniniti": [33, 34, 177, 186, 187, 188, 190], "from_dlpack": [33, 34, 79, 80, 177], "full_lik": [33, 34, 79, 80, 177], "fill_valu": [33, 34, 79, 80, 129, 177, 200, 201, 202, 203, 204, 205, 364, 474, 477, 494, 497], "float": [33, 34, 39, 40, 43, 44, 49, 50, 51, 52, 55, 56, 85, 86, 89, 90, 95, 96, 97, 98, 101, 102, 119, 120, 123, 124, 128, 129, 131, 136, 138, 162, 164, 176, 177, 178, 179, 186, 192, 193, 200, 201, 202, 204, 206, 207, 209, 210, 222, 223, 240, 242, 248, 251, 254, 273, 280, 283, 293, 296, 304, 307, 317, 347, 353, 357, 360, 363, 364, 365, 368, 369, 370, 373, 374, 377, 378, 381, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 424, 427, 428, 431, 432, 433, 434, 435, 436, 437, 440, 441, 444, 446, 449, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 490, 493, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 619, 620, 622, 643, 654, 655, 677, 678, 684, 685, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 742, 746, 749, 755, 756, 757, 758, 759, 760, 761, 765, 767, 771, 773, 774, 776, 777, 779, 788, 790, 797, 799, 800, 802, 804, 806, 807, 809, 822, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 904, 905, 906, 907, 926, 927, 928, 929, 930, 932, 937, 938, 940, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "scalar": [33, 34, 129, 134, 139, 151, 177, 201, 202, 204, 607, 672, 696, 700, 756, 822, 824], "fill": [33, 34, 74, 75, 103, 104, 177, 186, 200, 201, 202, 204, 222, 223, 225, 226, 228, 240, 242, 243, 245, 247, 932, 934, 935, 936], "meshgrid": [33, 34, 79, 80, 177], "xy": [33, 34, 79, 80, 177, 212, 213, 214, 215, 216], "ones_lik": [33, 34, 79, 80, 139, 177, 1025], "tril": [33, 34, 79, 80, 177], "k": [33, 34, 79, 80, 117, 134, 177, 192, 193, 194, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 607, 615, 739, 755, 756, 780, 783, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 932, 937, 938, 940, 944, 947], "n": [33, 34, 67, 68, 113, 114, 117, 123, 177, 212, 215, 230, 232, 234, 235, 237, 239, 607, 616, 739, 751, 756, 768, 770, 780, 783, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 807, 809, 810, 812, 816, 818, 819, 821, 822, 824, 825, 827, 844, 854, 857, 858, 861, 866, 869, 888, 891, 900, 903, 932, 937, 938, 940, 944, 947, 981, 990, 993, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "whose": [33, 34, 39, 40, 49, 50, 53, 54, 61, 62, 85, 86, 95, 96, 99, 100, 107, 108, 120, 123, 177, 230, 232, 234, 235, 237, 239, 364, 374, 377, 387, 388, 389, 390, 391, 400, 403, 432, 433, 434, 435, 436, 437, 440, 553, 556, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 607, 618, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 844, 862, 865, 878, 879, 880, 881, 882, 949, 950, 954, 955, 956, 957, 958, 959, 981, 982, 985], "innermost": [33, 34, 49, 50, 95, 96, 177, 230, 232, 234, 235, 237, 239, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 788, 790, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818], "mxn": [33, 34, 177, 230, 232, 234, 235, 237, 239, 756, 768, 770, 788, 790, 791, 793, 797, 799, 800, 802, 810, 812, 816, 818], "matric": [33, 34, 49, 50, 95, 96, 150, 177, 212, 215, 230, 232, 234, 235, 237, 239, 739, 752, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 787, 788, 790, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818], "int": [33, 34, 43, 44, 47, 48, 51, 52, 53, 54, 55, 56, 67, 68, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 121, 124, 128, 129, 130, 131, 132, 139, 162, 167, 174, 175, 177, 192, 193, 200, 201, 204, 206, 207, 209, 210, 230, 232, 234, 235, 237, 239, 248, 261, 264, 274, 279, 280, 283, 287, 290, 298, 301, 317, 336, 339, 340, 341, 342, 350, 351, 352, 358, 359, 364, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 607, 613, 625, 626, 629, 631, 633, 635, 637, 639, 643, 644, 646, 656, 672, 675, 699, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 756, 757, 759, 761, 762, 764, 768, 770, 813, 815, 816, 818, 819, 821, 822, 824, 828, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 853, 854, 857, 858, 861, 862, 865, 866, 869, 870, 873, 878, 879, 880, 881, 882, 883, 884, 887, 888, 891, 892, 895, 896, 899, 900, 903, 904, 905, 906, 907, 908, 911, 920, 926, 927, 928, 929, 930, 932, 933, 934, 935, 936, 942, 944, 945, 946, 970, 971, 974, 976, 979, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "diagon": [33, 34, 49, 50, 71, 76, 77, 177, 192, 193, 230, 232, 234, 235, 237, 239, 756, 816, 818], "triangular": [33, 34, 49, 50, 95, 96, 177, 230, 232, 234, 235, 237, 239, 756, 757, 758, 759, 760, 761, 800, 802], "triu": [33, 34, 79, 80, 177], "upper": [33, 34, 49, 50, 74, 75, 95, 96, 123, 177, 192, 193, 235, 237, 239, 756, 757, 758, 759, 760, 761, 800, 802, 932, 938, 940], "zeros_lik": [33, 34, 79, 80, 177, 739, 746, 749, 844, 845, 848, 1025], "creation": [34, 71, 74, 75, 76, 77, 78, 80, 118, 123, 129, 130, 134, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 217, 220, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247], "data_typ": [35, 36, 81, 82, 118, 123, 129, 248, 249, 250, 251, 254, 256, 259, 261, 264, 266, 269, 271, 272, 273, 274, 275, 278, 279, 280, 283, 285, 286, 287, 290, 292, 293, 296, 298, 301, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 316], "astyp": [35, 36, 47, 48, 81, 82, 93, 94, 129, 131, 248, 746, 747, 748, 750], "broadcast_arrai": [35, 36, 81, 82, 248], "broadcast_to": [35, 36, 81, 82, 129, 248], "can_cast": [35, 36, 81, 82, 124, 129, 248, 270], "cast": [35, 36, 81, 82, 124, 129, 248, 251, 254, 266, 267, 268, 269, 270, 844, 850, 853, 981, 998, 1001, 1006, 1009, 1025], "occur": [35, 36, 61, 62, 81, 82, 107, 108, 248, 266, 267, 268, 269, 270, 944, 945, 946, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969], "rule": [35, 36, 49, 50, 81, 82, 95, 96, 121, 123, 124, 127, 128, 129, 132, 248, 251, 254, 266, 267, 268, 269, 270, 304, 307, 364, 400, 403, 420, 423, 441, 444, 536, 539, 557, 560, 756, 757, 758, 759, 760, 761, 762, 764, 794, 796, 804, 806], "float32": [35, 36, 47, 48, 81, 82, 87, 88, 93, 94, 121, 123, 129, 177, 243, 247, 248, 249, 250, 266, 267, 268, 270, 275, 278, 298, 301, 316, 607, 691, 692, 695, 746, 747, 748, 750], "float64": [35, 36, 123, 129, 248, 251, 254, 266, 267, 269, 298, 301, 316], "as_n": [35, 36, 81, 82, 129, 248, 272, 273, 274, 275, 276, 277, 278, 317, 333, 334, 355], "finfo": [35, 36, 81, 82, 248], "iinfo": [35, 36, 81, 82, 132, 248], "is_float_dtyp": [35, 36, 81, 82, 248], "is_int_dtyp": [35, 36, 81, 82, 248, 607, 696], "result_typ": [35, 36, 81, 82, 129, 248], "arrays_and_dtyp": [35, 36, 81, 82, 248, 304, 305, 306, 307, 308], "ab": [39, 40, 85, 86, 123, 126, 364, 369, 553, 556, 756, 822, 824, 1025], "aco": [39, 40, 85, 86, 364, 1025], "acosh": [39, 40, 85, 86, 248, 285, 286, 364, 1025], "x2": [39, 40, 41, 42, 49, 50, 74, 75, 85, 86, 87, 88, 95, 96, 119, 121, 177, 243, 247, 248, 312, 317, 352, 364, 378, 379, 380, 381, 382, 396, 397, 398, 399, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 441, 442, 443, 444, 445, 446, 447, 448, 449, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 490, 491, 492, 493, 494, 495, 496, 497, 514, 515, 516, 517, 518, 519, 520, 521, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 545, 546, 547, 548, 553, 554, 555, 556, 557, 558, 559, 560, 588, 589, 590, 591, 592, 607, 608, 609, 610, 611, 612, 739, 744, 756, 762, 763, 764, 780, 781, 782, 783, 794, 795, 796, 804, 805, 806, 813, 814, 815, 819, 820, 821, 944, 948], "asin": [39, 40, 85, 86, 364, 1025], "asinh": [39, 40, 85, 86, 364, 391, 1025], "hyperbol": [39, 40, 85, 86, 162, 173, 364, 374, 377, 387, 388, 389, 390, 391, 400, 403, 437, 440, 575, 576, 577, 578, 579, 598, 599, 600, 601, 602], "invers": [39, 40, 85, 86, 136, 150, 364, 370, 373, 374, 377, 383, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 403, 756, 777, 779, 797, 799], "sine": [39, 40, 85, 86, 364, 383, 386, 387, 388, 389, 390, 391, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "881": [39, 40, 85, 86, 162, 166, 364, 387, 388, 389, 390], "82": [39, 40, 387, 388], "atan": [39, 40, 85, 86, 364, 1025], "atan2": [39, 40, 85, 86, 364, 1025], "atanh": [39, 40, 85, 86, 364, 1025], "bitwise_and": [39, 40, 85, 86, 364], "bitwise_invert": [39, 40, 85, 86, 364], "bitwise_left_shift": [39, 40, 85, 86, 364], "bitwise_or": [39, 40, 85, 86, 364], "bitwise_right_shift": [39, 40, 85, 86, 364], "bitwise_xor": [39, 40, 85, 86, 364], "ceil": [39, 40, 85, 86, 177, 178, 179, 364, 1025], "express": [39, 40, 85, 86, 120, 132, 134, 139, 364, 370, 373, 383, 386, 392, 395, 396, 399, 432, 433, 434, 435, 436, 570, 571, 572, 573, 574, 593, 594, 595, 596, 597], "radian": [39, 40, 85, 86, 120, 364, 370, 373, 383, 386, 392, 395, 396, 399, 432, 433, 434, 435, 436, 570, 571, 572, 573, 574, 593, 594, 595, 596, 597], "cosin": [39, 40, 85, 86, 364, 370, 373, 374, 377, 432, 433, 434, 435, 436, 437, 440], "54": [39, 40, 85, 86, 101, 102, 121, 364, 432, 433, 434, 435, 436, 437, 440, 580, 583, 739, 755, 756, 794, 796, 927, 929, 931, 932, 937, 981, 982, 985], "416": [39, 40, 364, 432, 433, 435], "99": [39, 40, 364, 387, 390, 432, 433, 981, 982, 985], "cosh": [39, 40, 85, 86, 364, 1025], "divid": [39, 40, 74, 75, 85, 86, 121, 127, 364, 466, 469, 607, 684, 844, 883], "erf": [39, 40, 85, 86, 364], "exp": [39, 40, 85, 86, 364, 458, 461, 514, 517, 1025], "expm1": [39, 40, 85, 86, 364], "floor": [39, 40, 85, 86, 364, 420, 423, 607, 642, 1025], "floor_divid": [39, 40, 85, 86, 364], "greater": [39, 40, 74, 75, 85, 86, 364, 370, 373, 383, 386, 396, 399, 412, 415, 420, 423, 462, 465, 466, 469, 553, 556, 557, 560, 565, 568, 603, 606, 756, 762, 764, 844, 884, 887, 932, 938, 940], "greater_equ": [39, 40, 85, 86, 364], "isfinit": [39, 40, 85, 86, 123, 364], "isinf": [39, 40, 85, 86, 364], "isnan": [39, 40, 85, 86, 364], "less_equ": [39, 40, 85, 86, 364], "log10": [39, 40, 85, 86, 364], "log1p": [39, 40, 85, 86, 364], "log2": [39, 40, 85, 86, 364], "logaddexp": [39, 40, 85, 86, 364], "logical_and": [39, 40, 85, 86, 364, 1025], "logical_not": [39, 40, 85, 86, 364, 1025], "logical_or": [39, 40, 85, 86, 364, 1025], "logical_xor": [39, 40, 85, 86, 364], "multipli": [39, 40, 85, 86, 121, 125, 127, 364, 607, 625], "neg": [39, 40, 53, 54, 67, 68, 85, 86, 99, 100, 113, 114, 124, 128, 131, 162, 164, 177, 178, 179, 192, 193, 364, 478, 481, 482, 485, 536, 539, 553, 556, 557, 560, 756, 807, 809, 819, 821, 822, 824, 844, 862, 865, 878, 879, 880, 881, 882, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "not_equ": [39, 40, 85, 86, 364], "pow": [39, 40, 85, 86, 364], "remaind": [39, 40, 74, 75, 85, 86, 364, 607, 642, 844, 883], "evalu": [39, 40, 74, 75, 85, 86, 128, 364, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 541, 544, 565, 566, 567, 568, 569, 584, 587, 908, 909, 918, 919, 1014, 1015, 1018, 1020, 1023], "94": [39, 40, 85, 86, 387, 391, 565, 566], "256": [39, 40, 565, 566, 739, 745], "0001": [39, 40, 565, 566, 1060, 1061, 1062], "36": [39, 40, 565, 566, 756, 794, 796, 981, 982, 985], "67": [39, 40, 85, 86, 128, 364, 424, 427, 437, 440, 565, 566, 575, 577, 579], "45": [39, 40, 123, 565, 566, 701, 702, 705, 756, 794, 796, 844, 883, 926, 927, 930, 981, 982, 985], "24": [39, 40, 101, 102, 364, 424, 427, 565, 566, 580, 583, 607, 625, 701, 702, 705, 756, 768, 770, 794, 796, 926, 927, 929, 930, 931, 981, 982, 985], "678": [39, 40, 565, 566], "32": [39, 40, 43, 44, 123, 137, 162, 164, 364, 424, 427, 565, 566, 702, 703, 739, 742, 745, 746, 749, 756, 794, 796, 944, 948, 981, 982, 985], "sin": [39, 40, 85, 86, 127, 134, 364, 574, 607, 643, 1025], "841": [39, 40, 85, 86, 364, 570, 571, 572, 573, 574], "909": [39, 40, 85, 86, 364, 570, 571, 572, 573, 574], "141": [39, 40, 85, 86, 364, 570, 571, 572, 573, 574], "sinh": [39, 40, 85, 86, 364, 579, 1025], "angl": [39, 40, 85, 86, 150, 364, 396, 399, 437, 440, 575, 576, 577, 578, 579, 598, 599, 600, 601, 602], "18": [39, 40, 85, 86, 121, 128, 364, 424, 427, 575, 576, 577, 578, 579, 756, 768, 770, 794, 796, 981, 982, 985], "63": [39, 40, 43, 44, 85, 86, 95, 96, 364, 575, 576, 577, 578, 579, 580, 583, 702, 703, 756, 757, 759, 760, 761, 794, 796, 981, 982, 985], "23": [39, 40, 85, 86, 364, 424, 427, 565, 568, 575, 576, 577, 578, 579, 739, 745, 756, 768, 770, 944, 948], "232": [39, 40, 85, 86, 364, 575, 576, 577, 578, 579], "51": [39, 40, 364, 424, 427, 575, 576, 578], "sqrt": [39, 40, 85, 86, 364, 756, 822, 824], "squar": [39, 40, 49, 50, 85, 86, 95, 96, 123, 364, 580, 583, 739, 742, 756, 757, 758, 759, 760, 761, 765, 767, 771, 773, 774, 776, 777, 779, 787, 803, 804, 806, 807, 809], "subtract": [39, 40, 85, 86, 121, 127, 364], "tan": [39, 40, 85, 86, 119, 120, 124, 128, 131, 134, 364, 383, 386, 387, 390, 594, 756, 768, 770, 949, 950, 954, 970, 971, 974, 1025], "tangent": [39, 40, 85, 86, 120, 162, 173, 364, 392, 395, 396, 399, 400, 403, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602], "56": [39, 40, 85, 86, 121, 364, 580, 583, 593, 594, 595, 596, 597, 701, 702, 705, 756, 794, 796, 981, 982, 985], "19": [39, 40, 85, 86, 121, 364, 387, 389, 391, 424, 427, 593, 594, 595, 596, 597, 756, 768, 770], "tanh": [39, 40, 85, 86, 134, 162, 364, 599, 1025], "real": [39, 40, 85, 86, 364, 598, 599, 600, 601, 602], "762": [39, 40, 85, 86, 162, 173, 364, 598, 600, 601, 602], "964": [39, 40, 85, 86, 162, 173, 364, 598, 600, 601, 602], "trunc": [39, 40, 85, 86, 364], "elementwis": [40, 74, 75, 86, 118, 124, 134, 139, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 437, 440, 441, 444, 446, 449, 450, 453, 454, 457, 458, 461, 462, 465, 466, 469, 470, 473, 474, 477, 478, 481, 482, 485, 486, 489, 490, 493, 494, 497, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 518, 521, 522, 525, 526, 529, 530, 533, 534, 535, 536, 539, 541, 544, 545, 548, 549, 552, 553, 556, 557, 560, 561, 564, 565, 568, 570, 573, 575, 578, 580, 583, 584, 587, 588, 592, 593, 597, 598, 602, 603, 606], "all_equ": [41, 42, 87, 88, 607, 612], "equality_matrix": [41, 42, 87, 88, 607, 608, 609, 610, 611, 612], "compar": [41, 42, 74, 75, 87, 88, 123, 132, 137, 607, 608, 609, 610, 611, 612, 615, 616, 949, 950, 954, 955, 959, 965, 969, 970, 971, 974, 976, 979], "matrix": [41, 42, 49, 50, 74, 75, 87, 88, 95, 96, 177, 212, 215, 230, 234, 235, 239, 607, 608, 609, 610, 611, 612, 619, 739, 752, 756, 757, 758, 759, 760, 761, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 787, 788, 790, 791, 793, 797, 799, 800, 802, 804, 806, 807, 809, 810, 812, 816, 818, 825, 827, 1044, 1054], "x1": [41, 42, 85, 86, 87, 88, 119, 121, 177, 243, 247, 248, 275, 278, 312, 317, 352, 364, 378, 381, 382, 396, 399, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 445, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 534, 535, 536, 539, 540, 545, 548, 553, 556, 557, 560, 588, 589, 592, 607, 608, 609, 610, 611, 612, 615, 739, 744, 756, 762, 764, 780, 783, 794, 796, 804, 806, 813, 815, 819, 821, 944, 948], "gather_nd": [41, 42, 87, 88, 607, 1025], "cuda": [41, 42, 74, 75, 103, 104, 134, 137, 151, 177, 206, 207, 209, 210, 317, 324, 330, 355, 607, 644, 646, 648, 649, 651, 672, 675, 676, 932, 933, 934, 935, 936, 938, 940, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1066, 1067], "to_numpi": [41, 42, 74, 75, 87, 88, 137, 607, 692, 1025], "adam_step": [43, 44, 89, 90, 701, 706], "mw": [43, 44, 89, 90, 138, 701, 702, 703, 704, 705, 706, 707, 709], "vw": [43, 44, 89, 90, 138, 701, 702, 703, 704, 705, 706, 707, 709], "beta1": [43, 44, 89, 90, 138, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 1060, 1061, 1062], "beta2": [43, 44, 89, 90, 138, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 1060, 1061, 1062], "999": [43, 44, 85, 86, 89, 90, 138, 364, 598, 599, 601, 602, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 1060, 1061, 1062], "epsilon": [43, 44, 51, 52, 55, 56, 89, 90, 97, 98, 101, 102, 124, 128, 131, 138, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 756, 788, 790, 797, 799, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 926, 927, 928, 929, 930, 931, 1058, 1059, 1060, 1061, 1062], "1e": [43, 44, 51, 52, 55, 56, 89, 90, 97, 98, 101, 102, 124, 128, 131, 138, 139, 607, 655, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 756, 807, 809, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 926, 927, 928, 929, 930, 931, 1025, 1060, 1061, 1062, 1063, 1065], "07": [43, 44, 51, 52, 89, 90, 97, 98, 138, 364, 565, 568, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 721, 722, 723, 724, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1060, 1061, 1062], "cost": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 904, 905, 906, 907], "respect": [43, 44, 89, 90, 119, 121, 123, 127, 128, 129, 132, 177, 212, 215, 364, 365, 368, 378, 381, 396, 399, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 557, 560, 588, 592, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 721, 723, 725, 727, 729, 731, 756, 800, 802, 904, 905, 906, 907], "weight": [43, 44, 89, 90, 124, 128, 138, 139, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 739, 752, 753, 755, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1057, 1060, 1062, 1063], "w": [43, 44, 47, 48, 74, 75, 89, 90, 93, 94, 134, 137, 138, 607, 616, 701, 702, 703, 704, 705, 706, 707, 709, 710, 712, 714, 715, 721, 723, 724, 725, 727, 728, 729, 731, 732, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750], "dc": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731], "dw": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731], "averag": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 904, 905, 906], "moment": [43, 44, 89, 90, 125, 151, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 1060, 1061, 1062], "forget": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 1060, 1061, 1062], "divisor": [43, 44, 89, 90, 364, 441, 444, 557, 560, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 981, 1002, 1005, 1010, 1013, 1060, 1061, 1062], "dure": [43, 44, 74, 75, 89, 90, 124, 128, 129, 130, 131, 151, 174, 175, 317, 359, 607, 697, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 756, 780, 783, 904, 905, 906, 907, 981, 1002, 1005, 1010, 1013, 1056, 1057, 1060, 1061, 1062, 1064], "adam": [43, 44, 89, 90, 137, 138, 139, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 1025, 1060, 1062], "divis": [43, 44, 89, 90, 124, 364, 420, 423, 441, 444, 466, 469, 557, 560, 607, 642, 655, 678, 684, 685, 701, 702, 703, 704, 705, 706, 707, 709, 721, 723, 1060, 1061, 1062], "delta": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706], "dcdw": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 721, 722, 723, 724, 725, 726, 727, 728], "adam_step_delta": [43, 44, 89, 90, 701, 702, 703, 704, 705, 706], "639": [43, 44, 701, 702, 703, 705], "11": [43, 44, 71, 76, 77, 85, 86, 103, 104, 121, 123, 128, 364, 378, 380, 381, 382, 404, 407, 561, 564, 607, 625, 644, 646, 702, 703, 756, 768, 770, 794, 796, 828, 839, 842, 844, 862, 865, 870, 873, 932, 934, 935, 936, 944, 948, 949, 950, 954, 981, 982, 985], "00121": [43, 44, 702, 703], "0102": [43, 44, 702, 703], "0397": [43, 44, 702, 703], "exclus": [43, 44, 74, 75, 89, 90, 123, 124, 128, 139, 177, 178, 179, 607, 625, 665, 666, 668, 701, 716, 717, 718, 719, 720, 932, 934, 935], "is_var": [43, 44, 89, 90, 701, 716, 717, 718, 719, 720], "gradient": [44, 74, 75, 90, 118, 128, 137, 138, 150, 151, 317, 358, 702, 703, 704, 705, 706, 707, 709, 711, 712, 714, 716, 719, 721, 723, 725, 727, 729, 731, 733, 734, 735, 736, 737, 738, 904, 905, 906, 907, 1025, 1060, 1061, 1062, 1063, 1064, 1065], "depthwise_conv2d": [47, 48, 93, 94, 739, 750, 1025], "stride": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "pad": [47, 48, 93, 94, 607, 643, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 844, 854, 857, 900, 903, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "data_format": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "nhwc": [47, 48, 93, 94, 739, 742, 743, 746, 747, 748, 749, 750, 1044, 1047, 1048, 1051], "dilat": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "batch_siz": [47, 48, 93, 94, 137, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 932, 933], "h": [47, 48, 93, 94, 117, 128, 739, 742, 743, 744, 745, 746, 747, 748, 749, 750, 908, 911], "convolut": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "fh": [47, 48, 93, 94, 739, 742, 743, 744, 745, 746, 747, 748, 749, 750], "fw": [47, 48, 93, 94, 123, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750], "d_in": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750], "slide": [47, 48, 93, 94, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "valid": [47, 48, 67, 68, 93, 94, 113, 114, 123, 129, 134, 248, 271, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 844, 888, 891, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "algorithm": [47, 48, 93, 94, 151, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051], "nchw": [47, 48, 93, 94, 739, 742, 743, 746, 747, 748, 749, 750, 1044, 1047, 1048, 1051], "255": [47, 48, 93, 94, 746, 747, 748, 750], "128": [47, 48, 93, 94, 739, 745, 746, 747, 748, 750, 756, 794, 796], "linear_algebra": [49, 50, 95, 96, 118, 136, 756, 757, 760, 762, 764, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 800, 802, 803, 804, 806, 807, 809, 810, 812, 813, 815, 816, 818, 819, 821, 822, 824, 825, 827], "choleski": [49, 50, 95, 96, 756, 761], "symmetr": [49, 50, 95, 96, 128, 756, 757, 758, 759, 760, 761, 771, 773, 774, 776, 825, 827], "625": [49, 50, 756, 757, 758, 760], "25": [49, 50, 51, 52, 101, 102, 128, 364, 575, 578, 580, 583, 584, 587, 756, 757, 758, 760, 768, 770, 777, 779, 828, 834, 835, 837, 926, 927, 929, 930, 931, 981, 982, 985], "cross": [49, 50, 51, 52, 71, 76, 77, 97, 98, 756, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1025], "axi": [49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 74, 75, 79, 80, 87, 88, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 119, 121, 123, 124, 128, 129, 131, 132, 134, 136, 139, 150, 162, 167, 177, 206, 207, 208, 209, 210, 211, 317, 318, 321, 326, 339, 340, 341, 342, 343, 344, 345, 346, 358, 607, 625, 626, 644, 645, 646, 647, 699, 756, 762, 763, 764, 768, 770, 819, 820, 821, 822, 823, 824, 828, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 851, 852, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 870, 871, 872, 873, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 896, 899, 900, 903, 932, 943, 944, 945, 946, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "det": [49, 50, 71, 76, 77, 756], "offset": [49, 50, 55, 56, 101, 102, 756, 768, 769, 770, 816, 817, 818, 926, 927, 928, 929, 930, 931], "axis1": [49, 50, 53, 54, 99, 100, 756, 768, 769, 770, 844, 892, 893, 894, 895], "axis2": [49, 50, 756, 768, 769, 770], "eigh": [49, 50, 71, 76, 77, 756], "namedtupl": [49, 50, 61, 62, 107, 108, 756, 771, 772, 773, 800, 801, 802, 807, 809, 949, 950, 952, 954, 955, 956, 957, 958, 959, 960, 962, 964], "eigvalsh": [49, 50, 71, 76, 77, 756], "inv": [49, 50, 71, 76, 77, 136, 756, 1025], "matmul": [49, 50, 95, 96, 118, 123, 125, 134, 756, 807, 809, 1025], "matrix_norm": [49, 50, 74, 75, 756], "ord": [49, 50, 74, 75, 756, 784, 785, 786, 822, 823, 824], "fro": [49, 50, 756, 784, 785, 786], "keepdim": [49, 50, 65, 66, 67, 68, 74, 75, 111, 112, 113, 114, 132, 607, 699, 756, 784, 785, 786, 822, 823, 824, 944, 945, 946, 981, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "matrix_rank": [49, 50, 71, 76, 77, 756], "rtol": [49, 50, 756, 788, 789, 790, 797, 798, 799], "matrix_transpos": [49, 50, 71, 76, 77, 136, 756], "outer": [49, 50, 71, 76, 77, 756, 904, 905, 906, 907], "pinv": [49, 50, 71, 76, 77, 756, 1025], "qr": [49, 50, 71, 76, 77, 756], "reduc": [49, 50, 67, 68, 74, 75, 87, 88, 113, 114, 136, 317, 358, 607, 633, 634, 635, 636, 756, 800, 801, 802, 944, 945, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "solv": [49, 50, 71, 76, 77, 135, 150, 756], "svd": [49, 50, 71, 76, 77, 756, 1025], "full_matric": [49, 50, 756, 807, 808, 809], "svdval": [49, 50, 71, 76, 77, 756], "tensordot": [49, 50, 71, 76, 77, 756], "trace": [49, 50, 71, 74, 75, 76, 77, 134, 151, 607, 665, 666, 668, 756], "vecdot": [49, 50, 71, 76, 77, 756], "vector_norm": [49, 50, 74, 75, 756], "vector_to_skew_symmetric_matrix": [49, 50, 71, 76, 77, 756, 1025], "binary_cross_entropi": [51, 52, 97, 98, 828, 833], "pred": [51, 52, 97, 98, 124, 128, 131, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "predict": [51, 52, 97, 98, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "amount": [51, 52, 97, 98, 130, 317, 360, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "smooth": [51, 52, 97, 98, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "binari": [51, 52, 97, 98, 364, 404, 407, 416, 419, 424, 427, 530, 533, 828, 829, 830, 831, 832, 833], "entropi": [51, 52, 97, 98, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843], "357": [51, 52, 97, 98, 828, 829, 830, 831, 832, 833, 839, 840, 842, 843], "223": [51, 52, 97, 98, 828, 829, 830, 831, 832, 833, 839, 840, 841, 843], "cross_entropi": [51, 52, 97, 98, 124, 128, 131, 828, 838, 839, 842], "along": [51, 52, 53, 54, 67, 68, 74, 75, 87, 88, 97, 98, 99, 100, 113, 114, 118, 131, 177, 206, 207, 209, 210, 317, 339, 340, 341, 342, 343, 344, 345, 346, 358, 607, 625, 626, 644, 645, 646, 699, 756, 784, 786, 816, 818, 819, 821, 822, 824, 828, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 850, 853, 862, 865, 870, 873, 878, 879, 880, 881, 882, 883, 888, 891, 896, 899, 904, 905, 906, 907, 932, 943, 944, 945, 946, 970, 971, 974, 976, 979, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "3862944": [51, 52, 828, 834, 835, 837], "sparse_cross_entropi": [51, 52, 97, 98, 828, 843], "logit": [51, 52, 97, 98, 828, 839, 840, 841, 842, 843], "spars": [51, 52, 97, 98, 828, 839, 840, 841, 842, 843], "loss": [52, 98, 118, 124, 137, 138, 139, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 1025], "clip": [53, 54, 74, 75, 99, 100, 124, 128, 131, 134, 137, 139, 364, 534, 535, 607, 619, 620, 622, 844, 849, 1025], "x_min": [53, 54, 74, 75, 99, 100, 134, 139, 844, 845, 846, 847, 848, 849], "x_max": [53, 54, 74, 75, 99, 100, 134, 139, 844, 845, 846, 847, 848, 849], "roll": [53, 54, 99, 100, 119, 128, 844, 845, 846, 882], "concat": [53, 54, 74, 75, 99, 100, 317, 343, 344, 345, 346, 358, 607, 643, 844, 1025], "constant_pad": [53, 54, 99, 100, 844], "pad_width": [53, 54, 99, 100, 844, 854, 855, 856, 857, 900, 901, 902, 903], "expand_dim": [53, 54, 99, 100, 134, 137, 844, 1025], "flip": [53, 54, 99, 100, 136, 137, 139, 364, 408, 411, 844, 870, 873, 1025], "permute_dim": [53, 54, 99, 100, 844], "reshap": [53, 54, 74, 75, 99, 100, 123, 131, 134, 136, 139, 844, 1025], "shift": [53, 54, 99, 100, 119, 121, 364, 412, 415, 420, 423, 844, 878, 879, 880, 881, 882], "larger": [53, 54, 99, 100, 123, 134, 139, 248, 280, 283, 844, 845, 848, 878, 879, 880, 881, 882, 981, 1002, 1005, 1010, 1013], "flatten": [53, 54, 61, 62, 74, 75, 99, 100, 107, 108, 607, 643, 756, 794, 796, 822, 824, 844, 870, 873, 878, 879, 880, 881, 882, 944, 945, 946, 949, 950, 954, 955, 956, 957, 958, 959, 965, 969], "restor": [53, 54, 99, 100, 844, 878, 879, 880, 881, 882], "squeez": [53, 54, 99, 100, 844, 1025], "stack": [53, 54, 74, 75, 99, 100, 134, 177, 230, 234, 235, 239, 756, 765, 767, 768, 770, 771, 773, 774, 776, 777, 779, 780, 783, 787, 788, 790, 791, 793, 797, 799, 800, 802, 807, 809, 810, 812, 816, 818, 844, 908, 909, 918, 919, 1025, 1044, 1053], "swapax": [53, 54, 99, 100, 844], "axis0": [53, 54, 99, 100, 844, 892, 893, 894, 895], "tile": [53, 54, 99, 100, 844, 1025], "rep": [53, 54, 99, 100, 844, 896, 897, 898, 899], "zero_pad": [53, 54, 99, 100, 844, 1025], "layer_norm": [55, 56, 101, 102, 926, 931], "normalized_idx": [55, 56, 101, 102, 926, 927, 928, 929, 930, 931], "05": [55, 56, 101, 102, 123, 317, 701, 702, 705, 926, 927, 928, 929, 930, 931], "scale": [55, 56, 101, 102, 128, 317, 356, 357, 701, 725, 727, 739, 751, 754, 755, 926, 927, 928, 929, 930, 931, 1044, 1052, 1055, 1060, 1063], "new_std": [55, 56, 101, 102, 926, 927, 928, 929, 930, 931, 1058, 1059], "normal": [55, 56, 101, 102, 137, 844, 888, 891, 926, 927, 928, 929, 930, 931, 932, 937, 1058, 1059], "small": [55, 56, 101, 102, 121, 124, 134, 138, 151, 364, 536, 539, 756, 788, 790, 797, 799, 926, 927, 928, 929, 930, 931, 1058, 1059], "constant": [55, 56, 101, 102, 118, 124, 138, 139, 151, 317, 324, 325, 844, 854, 857, 908, 914, 926, 927, 928, 929, 930, 931, 1038, 1041, 1043, 1056, 1057, 1058, 1059], "denomin": [55, 56, 101, 102, 124, 151, 607, 642, 655, 678, 684, 685, 926, 927, 928, 929, 930, 931, 1058, 1059], "_min_bas": [55, 56, 101, 102, 607, 685, 926, 927, 928, 929, 930, 931, 1058, 1059], "learnabl": [55, 56, 101, 102, 139, 926, 927, 928, 929, 930, 931, 1058, 1059], "gamma": [55, 56, 101, 102, 926, 927, 928, 929, 930, 931], "beta": [55, 56, 101, 102, 926, 927, 928, 929, 930, 931], "after": [55, 56, 74, 75, 101, 102, 121, 123, 128, 129, 133, 248, 312, 317, 364, 580, 583, 701, 707, 709, 711, 712, 714, 721, 723, 725, 727, 729, 731, 926, 927, 928, 929, 930, 931, 1060, 1061, 1062, 1063, 1064, 1065], "0976": [55, 56, 926, 927, 928, 930], "3452": [55, 56, 926, 927, 928, 930], "2740": [55, 56, 926, 927, 928, 930], "1047": [55, 56, 926, 927, 928, 930], "5886": [55, 56, 926, 927, 928, 930], "2732": [55, 56, 926, 927, 928, 930], "7696": [55, 56, 926, 927, 928, 930], "7024": [55, 56, 926, 927, 928, 930], "2518": [55, 56, 926, 927, 928, 930], "001": [55, 56, 137, 138, 364, 565, 568, 701, 702, 705, 926, 927, 928, 930], "576": [55, 56, 926, 927, 928, 930], "292": [55, 56, 926, 927, 928, 930], "33": [55, 56, 85, 86, 387, 389, 756, 794, 796, 926, 927, 928, 930, 981, 982, 985], "581": [55, 56, 701, 702, 705, 926, 927, 928, 930], "891": [55, 56, 162, 166, 926, 927, 928, 930], "01": [55, 56, 139, 364, 561, 564, 565, 568, 926, 927, 928, 930], "579": [55, 56, 926, 927, 928, 930], "931": [55, 56, 926, 927, 928, 930], "norm": [56, 74, 75, 102, 118, 607, 619, 620, 622, 756, 784, 786, 822, 824, 927, 928, 929, 930, 931, 1025, 1059, 1060, 1062], "random": [58, 74, 75, 104, 118, 130, 139, 150, 933, 934, 935, 937, 938, 940, 942, 943, 1025], "unique_al": [61, 62, 107, 108, 949], "unique_count": [61, 62, 107, 108, 949, 956], "count": [61, 62, 67, 68, 107, 108, 113, 114, 121, 137, 317, 352, 756, 819, 821, 844, 862, 865, 949, 950, 954, 955, 956, 957, 958, 959, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "field": [61, 62, 107, 108, 150, 756, 771, 773, 800, 802, 807, 809, 949, 950, 954, 955, 956, 957, 958, 959], "uc": [61, 62, 955, 957], "unique_invers": [61, 62, 107, 108, 949], "unique_valu": [61, 62, 107, 108, 949], "argsort": [63, 64, 109, 110, 970], "descend": [63, 64, 109, 110, 756, 807, 809, 810, 812, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980], "sort": [64, 71, 74, 75, 76, 77, 78, 110, 118, 756, 771, 773, 807, 809, 810, 812, 971, 974], "einsum": [65, 66, 111, 112, 981], "equat": [65, 66, 111, 112, 756, 804, 806, 981, 982, 983, 984, 985], "max": [65, 66, 87, 88, 111, 112, 248, 280, 283, 287, 290, 364, 534, 607, 619, 620, 622, 633, 634, 635, 636, 675, 676, 756, 788, 790, 797, 799, 981, 1060, 1062], "min": [65, 66, 87, 88, 111, 112, 248, 280, 283, 287, 290, 364, 535, 607, 633, 634, 635, 636, 675, 676, 684, 756, 800, 802, 807, 809, 810, 812, 822, 824, 981], "prod": [65, 66, 87, 88, 111, 112, 121, 129, 607, 633, 634, 635, 636, 981], "std": [65, 66, 111, 112, 121, 932, 937, 949, 950, 954, 981], "var": [65, 66, 111, 112, 115, 116, 121, 134, 904, 905, 906, 981], "statist": [66, 112, 115, 116, 118, 123, 129, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013], "sequenc": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 121, 123, 129, 132, 150, 168, 170, 172, 174, 175, 266, 268, 270, 317, 324, 325, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 607, 608, 610, 612, 616, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 669, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 844, 845, 847, 849, 878, 880, 882, 883, 888, 891, 927, 929, 931, 932, 934, 935, 936, 955, 956, 958, 981, 986, 989, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1044, 1053, 1058, 1059, 1066, 1067], "logic": [67, 68, 113, 114, 123, 126, 127, 129, 130, 136, 317, 350, 364, 518, 521, 522, 525, 526, 529, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "AND": [67, 68, 113, 114, 364, 404, 407, 518, 521, 1014, 1015, 1016, 1017, 1018, 1019], "reduct": [67, 68, 74, 75, 87, 88, 113, 114, 123, 129, 136, 607, 633, 634, 635, 636, 675, 676, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025], "By": [67, 68, 113, 114, 121, 124, 128, 131, 138, 139, 607, 625, 626, 756, 819, 821, 844, 870, 873, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "integ": [67, 68, 74, 75, 103, 104, 113, 114, 123, 128, 129, 136, 177, 178, 179, 200, 248, 287, 290, 298, 301, 304, 307, 364, 365, 368, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 462, 465, 466, 469, 530, 533, 553, 556, 557, 560, 561, 564, 603, 606, 756, 787, 819, 821, 822, 824, 844, 883, 932, 934, 935, 936, 942, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "interv": [67, 68, 74, 75, 103, 104, 113, 114, 134, 139, 177, 178, 179, 206, 207, 209, 210, 756, 819, 821, 844, 845, 848, 888, 891, 932, 934, 935, 936, 938, 940, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "rank": [67, 68, 113, 114, 177, 212, 215, 607, 699, 756, 762, 764, 788, 790, 800, 802, 804, 806, 816, 818, 819, 821, 822, 824, 844, 854, 857, 858, 861, 888, 891, 900, 903, 944, 947, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "backward": [67, 68, 113, 114, 151, 364, 557, 560, 756, 819, 821, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "invalid": [67, 68, 113, 114, 129, 132, 756, 819, 821, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "except": [67, 68, 74, 75, 113, 114, 120, 127, 131, 132, 136, 151, 248, 261, 264, 607, 617, 628, 663, 697, 756, 797, 799, 844, 850, 853, 888, 891, 944, 947, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "singleton": [67, 68, 113, 114, 756, 822, 824, 844, 884, 887, 944, 946, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "accordingli": [67, 68, 113, 114, 132, 177, 212, 215, 364, 458, 461, 756, 822, 824, 944, 946, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "dimension": [67, 68, 74, 75, 113, 114, 177, 178, 179, 192, 193, 212, 215, 756, 762, 764, 765, 767, 780, 783, 788, 790, 794, 796, 797, 799, 819, 821, 822, 824, 844, 883, 944, 945, 946, 947, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "non": [67, 68, 113, 114, 121, 128, 129, 134, 174, 175, 248, 251, 254, 292, 364, 522, 525, 526, 529, 739, 742, 756, 765, 767, 788, 790, 807, 809, 813, 815, 819, 821, 822, 824, 944, 945, 946, 947, 981, 986, 989, 990, 993, 994, 997, 998, 1001, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1056, 1057, 1060, 1064], "util": [68, 114, 118, 130, 317, 347, 1015, 1018, 1020, 1023], "add_ivy_array_instance_method": 69, "cl": [69, 70, 115, 116], "to_ignor": [69, 70, 115, 116, 908, 919], "loop": [69, 70, 115, 116, 125, 132, 151, 904, 905, 906, 907], "_wrap_funct": [69, 70, 115, 116, 124, 126], "toi": [69, 70, 115, 116], "arrayexampl": [69, 70], "hasattr": [69, 70, 115, 116, 136], "dict_in": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "queue": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 317, 324, 325, 607, 674, 679], "queue_load_s": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "container_combine_method": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "list_join": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "key_length_limit": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_ind": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_line_spac": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "ivyh": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "default_key_color": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "keyword_color_dict": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "rebuild_child_contain": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "types_to_iteratively_nest": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "alphabetical_kei": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "containerwithactiv": [71, 72, 76, 77], "containerwithcr": [71, 76, 77, 79], "containerwithdatatyp": [71, 76, 77, 81], "containerwithdevic": [71, 76, 77, 83], "containerwithelementwis": [71, 76, 77, 85, 128], "containerwithgener": [71, 76, 77, 87], "containerwithgradi": [71, 76, 77, 89], "containerwithimag": [71, 76, 77, 91], "containerwithlay": [71, 76, 77, 93], "containerwithlinearalgebra": [71, 76, 77, 95], "containerwithloss": [71, 76, 77, 97], "containerwithnorm": [71, 76, 77, 101], "containerwithrandom": [71, 76, 77, 103], "containerwithsearch": [71, 76, 77, 105], "containerwithset": [71, 76, 77, 107], "containerwithsort": [71, 76, 77, 109], "containerwithstatist": [71, 76, 77, 111], "containerwithutil": [71, 76, 77, 113], "represent": [71, 74, 75, 76, 77, 78, 150, 176, 248, 249, 250, 280, 283, 287, 290, 317, 330, 331, 364, 365, 368, 378, 381, 404, 407, 416, 419, 424, 427, 530, 533, 536, 539, 607, 613, 689], "dictionari": [71, 74, 75, 76, 77, 78, 137, 151, 317, 357], "asynchron": [71, 74, 75, 76, 77, 78], "arriv": [71, 74, 75, 76, 77, 78], "timeout": [71, 74, 75, 76, 77, 78, 317, 324, 325, 607, 674, 679], "length": [71, 74, 75, 76, 77, 78, 123, 132, 137, 177, 178, 179, 212, 215, 756, 807, 809, 810, 812, 844, 874, 877], "whitespac": [71, 74, 75, 76, 77, 78], "indent": [71, 74, 75, 76, 77, 78, 137], "extra": [71, 74, 75, 76, 77, 78, 121, 126, 127, 134, 701, 711], "newlin": [71, 74, 75, 76, 77, 78, 120], "handl": [71, 74, 75, 76, 77, 78, 117, 119, 123, 124, 126, 128, 129, 130, 131, 138, 151, 174, 175, 317, 330, 331, 332, 333, 334, 348, 352, 353, 360, 363, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 1060, 1061, 1062, 1063, 1064, 1065], "color": [71, 74, 75, 76, 77, 78, 1069, 1070], "map": [71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 119, 123, 124, 128, 137, 150, 151, 168, 170, 172, 266, 268, 270, 317, 324, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 908, 915, 916, 920, 921, 927, 929, 931, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024, 1044, 1055], "termcolor": [71, 74, 75, 76, 77, 78], "rebuild": [71, 74, 75, 76, 77, 78], "constructor": [71, 74, 75, 76, 77, 78, 129, 130, 136, 607, 614, 1066, 1067], "param": [71, 74, 75, 76, 77, 78, 87, 88, 134, 139, 607, 613, 644, 645, 646, 647, 648, 650, 651, 652], "alphabet": [71, 74, 75, 76, 77, 78], "preserv": [71, 74, 75, 76, 77, 78, 123, 139, 151, 701, 734, 844, 862, 865], "key_chain": [71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 251, 253, 255, 256, 258, 260, 261, 263, 265, 266, 268, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 608, 610, 612, 620, 621, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 707, 708, 710, 712, 713, 715, 716, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 757, 759, 761, 780, 782, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 908, 921, 927, 929, 931, 934, 936, 938, 939, 941, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1015, 1017, 1019, 1020, 1022, 1024], "to_appli": [71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 251, 253, 255, 256, 258, 260, 261, 263, 265, 266, 268, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 608, 610, 612, 620, 621, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 707, 708, 710, 712, 713, 715, 716, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 757, 759, 761, 780, 782, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 908, 921, 927, 929, 931, 938, 939, 941, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1015, 1017, 1019, 1020, 1022, 1024], "prune_unappli": [71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 251, 253, 255, 256, 258, 260, 261, 263, 265, 266, 268, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 608, 610, 612, 620, 621, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 707, 708, 710, 712, 713, 715, 716, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 757, 759, 761, 780, 782, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 908, 921, 927, 929, 931, 938, 939, 941, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1015, 1017, 1019, 1020, 1022, 1024], "map_sequ": [71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 251, 253, 255, 256, 258, 260, 261, 263, 265, 266, 268, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 400, 402, 408, 410, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 450, 452, 454, 456, 458, 460, 462, 464, 478, 480, 482, 484, 486, 488, 498, 500, 502, 504, 506, 508, 510, 512, 522, 524, 536, 538, 540, 541, 543, 549, 551, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 608, 610, 612, 620, 621, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 707, 708, 710, 712, 713, 715, 716, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 892, 894, 896, 898, 900, 902, 927, 929, 931, 938, 939, 941, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1015, 1017, 1019, 1020, 1022, 1024], "static_aco": [71, 76, 77], "static_acosh": [71, 76, 77], "static_arg_info": [71, 76, 77], "static_arg_nam": [71, 76, 77], "static_argmax": [71, 76, 77], "static_argmin": [71, 76, 77], "static_arrai": [71, 76, 77], "static_array_equ": [71, 76, 77], "static_arrays_equ": [71, 76, 77], "static_as_ivy_dev": [71, 76, 77], "static_as_ivy_dtyp": [71, 76, 77], "static_as_native_dev": [71, 76, 77], "static_as_native_dtyp": [71, 76, 77], "static_asin": [71, 76, 77], "static_assert_supports_inplac": [71, 76, 77], "static_atan": [71, 76, 77], "static_atan2": [71, 76, 77], "static_atanh": [71, 76, 77], "static_bitwise_and": [71, 76, 77], "static_bitwise_invert": [71, 76, 77], "static_bitwise_left_shift": [71, 76, 77], "static_bitwise_or": [71, 76, 77], "static_bitwise_right_shift": [71, 76, 77], "static_bitwise_xor": [71, 76, 77], "static_cache_fn": [71, 76, 77], "static_ceil": [71, 76, 77], "static_clear_mem_on_dev": [71, 76, 77], "static_clip_matrix_norm": [71, 76, 77], "static_clip_vector_norm": [71, 76, 77], "static_closest_valid_dtyp": [71, 76, 77], "static_concat": [71, 76, 77], "static_constant_pad": [71, 76, 77], "static_container_typ": [71, 76, 77], "static_conv1d": [71, 76, 77], "static_conv1d_transpos": [71, 76, 77], "static_conv2d": [71, 76, 77], "static_conv2d_transpos": [71, 76, 77], "static_conv3d": [71, 76, 77], "static_conv3d_transpos": [71, 76, 77], "static_copy_arrai": [71, 76, 77], "static_cosh": [71, 76, 77], "static_cross": [71, 76, 77], "static_cumprod": [71, 76, 77], "static_cumsum": [71, 76, 77], "static_current_backend": [71, 76, 77], "static_current_backend_str": [71, 76, 77], "static_default": [71, 76, 77], "static_default_devic": [71, 76, 77], "static_default_dtyp": [71, 76, 77], "static_default_float_dtyp": [71, 76, 77], "static_default_int_dtyp": [71, 76, 77], "static_det": [71, 76, 77], "static_dev": [71, 76, 77], "static_dev_clon": [71, 76, 77], "static_dev_clone_arrai": [71, 76, 77], "static_dev_clone_it": [71, 76, 77], "static_dev_clone_nest": [71, 76, 77], "static_dev_dist": [71, 76, 77], "static_dev_dist_arrai": [71, 76, 77], "static_dev_dist_it": [71, 76, 77], "static_dev_dist_nest": [71, 76, 77], "static_dev_unifi": [71, 76, 77], "static_dev_unify_arrai": [71, 76, 77], "static_dev_unify_it": [71, 76, 77], "static_dev_unify_nest": [71, 76, 77], "static_dev_util": [71, 76, 77], "static_diagon": [71, 76, 77], "static_dropout": [71, 76, 77], "static_dtyp": [71, 76, 77], "static_dtype_bit": [71, 76, 77], "static_eigh": [71, 76, 77], "static_eigvalsh": [71, 76, 77], "static_einsum": [71, 76, 77], "static_empti": [71, 76, 77], "static_equ": [71, 76, 77], "static_erf": [71, 76, 77], "static_execute_with_gradi": [71, 76, 77], "static_exist": [71, 76, 77], "static_exp": [71, 76, 77], "static_expand_dim": [71, 76, 77], "static_expm1": [71, 76, 77], "static_flip": [71, 76, 77], "static_floor": [71, 76, 77], "static_floor_divid": [71, 76, 77], "static_floormod": [71, 76, 77], "static_fourier_encod": [71, 76, 77], "static_ful": [71, 76, 77], "static_function_supported_dtyp": [71, 76, 77], "static_function_unsupported_dtyp": [71, 76, 77], "static_gelu": [71, 76, 77], "static_get_all_arrays_in_memori": [71, 76, 77], "static_get_all_ivy_arrays_on_dev": [71, 76, 77], "static_get_min_bas": [71, 76, 77], "static_get_min_denomin": [71, 76, 77], "static_get_num_dim": [71, 76, 77], "static_get_referrers_recurs": [71, 76, 77], "static_gpu_is_avail": [71, 76, 77], "static_great": [71, 76, 77], "static_greater_equ": [71, 76, 77], "static_handle_nest": [71, 76, 77], "static_handle_out_argu": [71, 76, 77], "static_has_nan": [71, 76, 77], "static_indices_wher": [71, 76, 77], "static_infer_devic": [71, 76, 77], "static_infer_dtyp": [71, 76, 77], "static_inplace_arrays_support": [71, 76, 77], "static_inplace_decr": [71, 76, 77], "static_inplace_incr": [71, 76, 77], "static_inplace_upd": [71, 76, 77], "static_inplace_variables_support": [71, 76, 77], "static_inputs_to_native_arrai": [71, 76, 77], "static_inv": [71, 76, 77], "static_invalid_dtyp": [71, 76, 77], "static_is_arrai": [71, 76, 77], "static_is_ivy_arrai": [71, 76, 77], "static_is_ivy_contain": [71, 76, 77], "static_is_native_arrai": [71, 76, 77], "static_isfinit": [71, 76, 77], "static_isinf": [71, 76, 77], "static_isnan": [71, 76, 77], "static_leaky_relu": [71, 76, 77], "static_less": [71, 76, 77], "static_less_equ": [71, 76, 77], "static_linear": [71, 76, 77], "static_log": [71, 76, 77], "static_log10": [71, 76, 77], "static_log1p": [71, 76, 77], "static_log2": [71, 76, 77], "static_logaddexp": [71, 76, 77], "static_logical_and": [71, 76, 77], "static_logical_not": [71, 76, 77], "static_logical_or": [71, 76, 77], "static_logical_xor": [71, 76, 77], "static_lstm_upd": [71, 76, 77], "static_match_kwarg": [71, 76, 77], "static_matmul": [71, 76, 77], "static_matrix_norm": [71, 76, 77], "static_matrix_pow": [71, 76, 77], "static_matrix_rank": [71, 76, 77], "static_matrix_transpos": [71, 76, 77], "static_max": [71, 76, 77], "static_maximum": [71, 76, 77], "static_mean": [71, 76, 77], "static_min": [71, 76, 77], "static_minimum": [71, 76, 77], "static_multi_head_attent": [71, 76, 77], "static_multinomi": [71, 76, 77], "static_multiprocess": [71, 76, 77], "static_neg": [71, 76, 77], "static_nonzero": [71, 76, 77], "static_not_equ": [71, 76, 77], "static_num_arrays_in_memori": [71, 76, 77], "static_num_cpu_cor": [71, 76, 77], "static_num_gpu": [71, 76, 77], "static_num_ivy_arrays_on_dev": [71, 76, 77], "static_one_hot": [71, 76, 77], "static_out": [71, 76, 77], "static_outputs_to_ivy_arrai": [71, 76, 77], "static_percent_used_mem_on_dev": [71, 76, 77], "static_permute_dim": [71, 76, 77], "static_pinv": [71, 76, 77], "static_posit": [71, 76, 77], "static_pow": [71, 76, 77], "static_print_all_arrays_in_memori": [71, 76, 77], "static_print_all_ivy_arrays_on_dev": [71, 76, 77], "static_prod": [71, 76, 77], "static_promote_typ": [71, 76, 77], "static_qr": [71, 76, 77], "static_queue_timeout": [71, 76, 77], "static_random_norm": [71, 76, 77], "static_relu": [71, 76, 77], "static_remaind": [71, 76, 77], "static_repeat": [71, 76, 77], "static_reshap": [71, 76, 77], "static_round": [71, 76, 77], "static_scaled_dot_product_attent": [71, 76, 77], "static_scatter_flat": [71, 76, 77], "static_scatter_nd": [71, 76, 77], "static_se": [71, 76, 77], "static_set_default_devic": [71, 76, 77], "static_set_default_dtyp": [71, 76, 77], "static_set_default_float_dtyp": [71, 76, 77], "static_set_default_int_dtyp": [71, 76, 77], "static_set_min_bas": [71, 76, 77], "static_set_min_denomin": [71, 76, 77], "static_set_queue_timeout": [71, 76, 77], "static_set_shape_array_mod": [71, 76, 77], "static_set_split_factor": [71, 76, 77], "static_set_tmp_dir": [71, 76, 77], "static_set_with_grad": [71, 76, 77], "static_shap": [71, 76, 77], "static_shape_array_mod": [71, 76, 77], "static_shuffl": [71, 76, 77], "static_sigmoid": [71, 76, 77], "static_slogdet": [71, 76, 77], "static_softmax": [71, 76, 77], "static_solv": [71, 76, 77], "static_split": [71, 76, 77], "static_split_factor": [71, 76, 77], "static_split_func_cal": [71, 76, 77], "static_sqrt": [71, 76, 77], "static_squar": [71, 76, 77], "static_squeez": [71, 76, 77], "static_stable_divid": [71, 76, 77], "static_stable_pow": [71, 76, 77], "static_stack": [71, 76, 77], "static_std": [71, 76, 77], "static_stop_gradi": [71, 76, 77], "static_sum": [71, 76, 77], "static_supports_inplac": [71, 76, 77], "static_svd": [71, 76, 77], "static_svdv": [71, 76, 77], "static_swapax": [71, 76, 77], "static_tensordot": [71, 76, 77], "static_til": [71, 76, 77], "static_tmp_dir": [71, 76, 77], "static_to_devic": [71, 76, 77], "static_to_ivy_shap": [71, 76, 77], "static_to_list": [71, 76, 77], "static_to_native_arrays_and_back": [71, 76, 77], "static_to_native_shap": [71, 76, 77], "static_to_scalar": [71, 76, 77], "static_total_mem_on_dev": [71, 76, 77], "static_tpu_is_avail": [71, 76, 77], "static_trac": [71, 76, 77], "static_trunc": [71, 76, 77], "static_try_else_non": [71, 76, 77], "static_type_promote_arrai": [71, 76, 77], "static_unset_default_devic": [71, 76, 77], "static_unset_default_dtyp": [71, 76, 77], "static_unset_default_float_dtyp": [71, 76, 77], "static_unset_default_int_dtyp": [71, 76, 77], "static_unset_shape_array_mod": [71, 76, 77], "static_unset_with_grad": [71, 76, 77], "static_unstack": [71, 76, 77], "static_used_mem_on_dev": [71, 76, 77], "static_valid_dtyp": [71, 76, 77], "static_value_is_nan": [71, 76, 77], "static_var": [71, 76, 77], "static_vari": [71, 76, 77], "static_variable_data": [71, 76, 77], "static_vecdot": [71, 76, 77], "static_vector_norm": [71, 76, 77], "static_vector_to_skew_symmetric_matrix": [71, 76, 77], "static_wher": [71, 76, 77], "static_with_grad": [71, 76, 77], "static_zero_pad": [71, 76, 77], "multidevcontain": [71, 74, 75, 76, 78], "at_dev": [71, 76, 78, 317, 327, 328], "containerbas": [72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 128], "chain": [72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 127, 128, 138, 139, 151, 168, 170, 172, 266, 268, 270, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 904, 905, 906, 908, 921, 927, 929, 931, 934, 936, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024, 1066, 1067], "prune": [72, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 113, 114, 168, 170, 172, 266, 268, 270, 365, 367, 369, 378, 380, 382, 387, 389, 391, 428, 430, 432, 434, 436, 462, 464, 565, 567, 569, 570, 572, 574, 575, 577, 579, 593, 594, 596, 598, 599, 601, 608, 610, 612, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 716, 718, 720, 757, 759, 761, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 878, 880, 882, 908, 921, 922, 923, 927, 929, 931, 955, 956, 958, 1015, 1017, 1019, 1020, 1022, 1024], "static_softplu": [72, 73, 168], "__getitem__": [74, 75, 128], "queri": [74, 75, 128, 129, 136, 317, 347, 357, 739, 754, 755, 1044, 1055], "slice": [74, 75, 87, 88, 607, 644, 645, 646, 648, 650, 651, 652, 908, 917], "__setitem__": [74, 75, 127, 128, 136], "val": [74, 75, 131, 136, 607, 661, 662, 663, 677, 678], "all_fals": [74, 75], "assert_is_bool": [74, 75], "entri": [74, 75, 177, 206, 207, 209, 210, 844, 883, 908, 921], "assert": [74, 75, 123, 132, 136, 137, 607, 617], "all_key_chain": [74, 75], "include_empti": [74, 75], "all_tru": [74, 75, 128, 137], "arrays_as_list": [74, 75], "intermedi": [74, 75], "as_arrai": [74, 75, 607, 656, 682], "as_bool": [74, 75], "as_on": [74, 75], "as_random_uniform": [74, 75], "low": [74, 75, 103, 104, 134, 932, 934, 935, 936, 938, 939, 940, 941], "uniform": [74, 75, 103, 104, 138, 932, 933, 934, 935, 936, 938, 940, 1038, 1039, 1040, 1042], "boundari": [74, 75, 932, 938, 940], "as_vari": [74, 75, 123], "as_zero": [74, 75], "assert_contains_sub_contain": [74, 75], "sub_cont": [74, 75], "diff": [74, 75, 128, 137], "screen": [74, 75, 137], "assert_contains_sub_structur": [74, 75], "check_shap": [74, 75], "assert_ident": [74, 75], "check_typ": [74, 75], "same_arrai": [74, 75, 137], "assert_identical_structur": [74, 75], "at_key_chain": [74, 75], "ignore_key_error": [74, 75], "ignore_non": [74, 75], "at_kei": [74, 75], "ignor": [74, 75, 121, 123, 151, 177, 212, 215, 908, 919, 1060, 1064], "substr": [74, 75], "clip_min": [74, 75], "clip_max": [74, 75], "config": [74, 75, 137, 908, 921], "duplic": [74, 75, 120, 125, 126, 132, 136, 138], "container_rightmost": [74, 75], "common_key_chain": [74, 75, 128], "contains_sub_contain": [74, 75], "match": [74, 75, 128, 248, 251, 254, 364, 557, 560, 607, 669], "contains_sub_structur": [74, 75], "create_if_abs": [74, 75], "inplac": [74, 75, 89, 90, 117, 119, 121, 126, 127, 136, 138, 607, 617, 660, 663, 664, 686, 701, 707, 708, 709, 710, 712, 713, 714, 715, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 1036, 1037, 1060, 1061, 1062, 1063, 1064, 1065], "cutoff_at_depth": [74, 75], "depth_cutoff": [74, 75], "cutoff_at_height": [74, 75], "height_cutoff": [74, 75], "deep_copi": [74, 75, 137], "intern": [74, 75, 120, 123, 127, 128, 130, 131, 317, 701, 737, 908, 909, 918, 919, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1066, 1067], "belong": [74, 75, 138], "dev_str": [74, 75], "diff_kei": [74, 75], "detect_key_diff": [74, 75], "detect_value_diff": [74, 75], "detect_shape_diff": [74, 75], "treat": [74, 75, 123, 135, 139, 174, 175], "detect": [74, 75, 119, 123, 128, 132, 137, 138, 908, 909, 919], "container0": [74, 75], "find_sub_contain": [74, 75], "sub_cont_to_find": [74, 75], "exsit": [74, 75], "find_sub_structur": [74, 75], "sub_struc_to_find": [74, 75], "flatten_key_chain": [74, 75, 137, 1056, 1057], "__": [74, 75, 121, 137], "above_height": [74, 75, 137], "below_depth": [74, 75, 137], "format_key_chain": [74, 75], "format_fn": [74, 75], "string": [74, 75, 125, 129, 130, 132, 134, 137, 248, 249, 250, 275, 278, 292, 316, 317, 330, 331, 332, 333, 347, 353, 359, 360, 363, 607, 627], "from_disk_as_hdf5": [74, 75, 137], "h5_obj_or_filepath": [74, 75], "slice_obj": [74, 75], "load": [74, 75, 151], "disk": [74, 75, 137], "h5py": [74, 75], "hdf5": [74, 75, 137, 1056, 1057], "h5": [74, 75], "from_disk_as_json": [74, 75, 137], "json_filepath": [74, 75], "json": [74, 75, 137], "from_disk_as_pickl": [74, 75, 137], "pickle_filepath": [74, 75], "pickl": [74, 75, 128, 137], "from_flat_list": [74, 75], "flat_list": [74, 75], "hierarchi": [74, 75, 137], "flat": [74, 75, 607, 675, 844, 870, 873], "popul": [74, 75, 123, 129, 130, 134, 932, 933, 981, 1002, 1005, 1010, 1013], "from_numpi": [74, 75, 137], "h5_file_s": [74, 75], "batch": [74, 75, 124, 128, 137, 317, 356, 357, 607, 643, 739, 752, 756, 822, 824, 904, 905, 906, 907, 926, 927, 930, 1058, 1059], "handle_inplac": [74, 75], "prime": [74, 75], "overwritten": [74, 75, 125, 127], "has_kei": [74, 75], "query_kei": [74, 75], "somewher": [74, 75], "has_key_chain": [74, 75], "include_inf": [74, 75, 607, 658, 700], "leafwis": [74, 75], "nan": [74, 75, 118, 120, 123, 176, 248, 251, 254, 364, 365, 368, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 478, 481, 486, 489, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 607, 658, 700, 739, 755, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013, 1014, 1015, 1018, 1020, 1023], "well": [74, 75, 123, 131, 138, 139, 150, 607, 658, 756, 804, 806], "inf": [74, 75, 123, 176, 607, 658, 700, 756, 822, 824], "identical_array_shap": [74, 75], "identical_config": [74, 75], "identical_structur": [74, 75], "if_exist": [74, 75], "key_chains_contain": [74, 75], "sub_str": [74, 75], "join": [74, 75, 844, 850, 853, 888, 891, 1025], "list_stack": [74, 75, 137], "dim": [74, 75, 129, 607, 672, 1044, 1055], "func": [74, 75, 128, 174, 175, 317, 358, 607, 618, 701, 711, 908, 921], "map_cont": [74, 75], "include_self": [74, 75], "possibi": [74, 75], "max_depth": [74, 75, 317, 320, 323, 328, 338, 342, 346, 607, 657, 908, 920], "multi_map": [74, 75, 128], "map_nest": [74, 75, 85, 86, 95, 96, 99, 100, 396, 398, 404, 406, 412, 414, 416, 418, 420, 422, 424, 426, 446, 448, 466, 468, 470, 472, 474, 476, 490, 492, 494, 496, 514, 516, 518, 520, 526, 528, 530, 532, 545, 547, 553, 555, 557, 559, 780, 782, 850, 852, 888, 890], "leftmost": [74, 75, 908, 921], "multi_map_in_static_method": [74, 75, 128], "fn_name": [74, 75], "num_arrai": [74, 75, 123], "overwrite_at_key_chain": [74, 75], "overwrit": [74, 75, 131, 134, 317, 358], "target_dict": [74, 75], "return_dict": [74, 75], "prune_empti": [74, 75], "keep_non": [74, 75], "prune_key_chain": [74, 75], "key1": [74, 75, 138], "key2": [74, 75], "key3": [74, 75], "prune_key_from_key_chain": [74, 75], "prune_kei": [74, 75], "prune_keys_from_key_chain": [74, 75], "remove_key_length_limit": [74, 75], "remove_print_limit": [74, 75], "reshape_lik": [74, 75], "leading_shap": [74, 75], "return_cont": [74, 75], "restructur": [74, 75], "keep_orig": [74, 75], "transpos": [74, 75, 136, 139, 317, 345, 739, 741, 743, 745, 756, 791, 793, 797, 799, 1025, 1044, 1046, 1048, 1050], "restructure_key_chain": [74, 75], "keychain_map": [74, 75], "set_at_key_chain": [74, 75], "set_at_kei": [74, 75], "set_framework": [74, 75, 134, 136, 137, 139], "set_ivy_backend": [74, 75], "ivy_backend": [74, 75], "attribut": [74, 75, 120, 128, 129, 135, 136, 137, 138, 248, 280, 283, 285, 286, 287, 290, 317, 354], "show_sub_contain": [74, 75], "sub_cont_or_keychain": [74, 75], "seed_valu": [74, 75, 932, 942], "shuffle_h5_fil": [74, 75], "dataset": [74, 75, 137, 149, 1025], "size_ordered_arrai": [74, 75], "keychain": [74, 75], "smallest": [74, 75, 248, 280, 283, 287, 290, 364, 428, 431], "largest": [74, 75, 150, 248, 280, 283, 287, 290, 756, 807, 809], "slice_kei": [74, 75], "key_slic": [74, 75], "all_depth": [74, 75], "slice_via_kei": [74, 75], "sort_by_kei": [74, 75], "num_or_size_split": [74, 75, 134, 844, 883], "with_remaind": [74, 75, 844, 883], "constitu": [74, 75, 139], "evenli": [74, 75, 177, 178, 179, 206, 207, 209, 210, 844, 883], "store": [74, 75, 120, 125, 127, 128, 134, 136, 137, 138, 177, 243, 247, 607, 643, 701, 737, 756, 816, 818, 844, 883, 1056, 1057], "preserve_typ": [74, 75, 701, 734], "stop": [74, 75, 79, 80, 134, 151, 177, 178, 179, 180, 206, 207, 208, 209, 210, 211, 317, 329, 358, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 734, 904, 905, 906, 907, 1060, 1061, 1062, 1063, 1064, 1065], "structural_diff": [74, 75], "target": [74, 75, 117, 133, 137, 138, 139, 317, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 1025], "to_dict": [74, 75], "to_disk_as_hdf5": [74, 75, 137], "starting_index": [74, 75], "max_batch_s": [74, 75], "later": [74, 75, 123, 607, 618], "to_disk_as_json": [74, 75, 137], "to_disk_as_pickl": [74, 75, 137], "to_flat_list": [74, 75], "to_iter": [74, 75, 128], "leaf_keys_onli": [74, 75], "to_iterator_kei": [74, 75], "to_iterator_valu": [74, 75], "to_json": [74, 75], "to_multi_dev": [74, 75], "distributedarrai": [74, 75], "update_backend": [74, 75], "to_raw": [74, 75], "raw": [74, 75, 120], "trim_kei": [74, 75], "max_length": [74, 75], "try_kc": [74, 75], "tri": [74, 75], "arbitrari": [74, 75, 119, 123, 124, 128, 131, 138, 151, 177, 212, 215, 248, 256, 259, 304, 307, 317, 343, 344, 346], "concatten": [74, 75, 317, 343, 344, 345, 346, 358], "dim_siz": [74, 75, 317], "update_config": [74, 75], "global_norm": [74, 75, 87, 88, 620, 621], "vector": [74, 75, 150, 177, 212, 215, 607, 620, 622, 739, 752, 756, 762, 764, 771, 773, 780, 783, 794, 796, 807, 809, 810, 812, 819, 821, 822, 824, 825, 827, 1044, 1054], "with_default_key_color": [74, 75], "with_entries_as_list": [74, 75], "with_ivy_backend": [74, 75], "with_key_length_limit": [74, 75, 137], "with_print_ind": [74, 75, 137], "with_print_limit": [74, 75, 137], "with_print_line_spac": [74, 75], "static_arang": [79, 80, 178], "static_asarrai": [79, 80, 181], "static_empty_lik": [79, 80, 187], "static_ey": [79, 80, 192], "n_row": [79, 80, 177, 192, 193, 194], "n_col": [79, 80, 177, 192, 193, 194], "static_from_dlpack": [79, 80, 195], "static_full_lik": [79, 80, 201], "static_linspac": [79, 80, 206], "num": [79, 80, 134, 177, 206, 207, 208, 209, 210, 211], "endpoint": [79, 80, 177, 206, 207, 208, 209, 211], "static_logspac": [79, 80, 209], "static_meshgrid": [79, 80, 212], "static_native_arrai": [79, 80, 217], "static_on": [79, 80, 222], "static_ones_lik": [79, 80, 225], "static_tril": [79, 80, 230], "static_triu": [79, 80, 235], "static_zero": [79, 80, 240], "static_zeros_lik": [79, 80, 243], "int32": [81, 82, 87, 88, 123, 129, 177, 243, 247, 248, 266, 268, 269, 270, 275, 278, 298, 301, 607, 691, 692, 694, 695, 844, 858, 861, 981, 998, 1001, 1006, 1009], "int64": [81, 82, 123, 129, 248, 266, 268, 269, 270, 316, 364, 420, 423, 944, 945, 946, 981, 998, 1001, 1006, 1009], "static_astyp": [81, 82, 251], "static_broadcast_arrai": [81, 82, 256], "static_broadcast_to": [81, 82, 261], "static_can_cast": [81, 82, 266], "from_": [81, 82, 248, 266, 269, 270], "static_finfo": [81, 82, 280], "static_iinfo": [81, 82, 287], "static_is_float_dtyp": [81, 82, 293], "dtype_in": [81, 82, 248, 249, 250, 279, 292, 293, 296, 297, 298, 301, 302, 316], "static_is_int_dtyp": [81, 82, 298], "static_result_typ": [81, 82, 304], "02": [85, 86, 387, 389, 701, 702, 705], "21": [85, 86, 364, 387, 389, 424, 427, 607, 625, 756, 768, 770, 794, 796, 828, 839, 842, 981, 982, 985], "61": [85, 86, 97, 98, 364, 387, 389, 584, 587, 739, 746, 749, 828, 829, 831, 832, 833, 839, 841, 843], "96": [85, 86, 364, 432, 434, 435, 436, 593, 597, 598, 599, 701, 702, 705, 756, 794, 796, 981, 982, 985], "757": [85, 86, 364, 570, 572, 573, 574], "959": [85, 86, 364, 570, 572, 573, 574], "279": [85, 86, 364, 570, 572, 573, 574], "76": [85, 86, 364, 437, 440, 575, 577, 579, 598, 599, 701, 702, 705, 756, 813, 815, 981, 982, 985], "37": [85, 86, 103, 104, 364, 387, 390, 391, 575, 577, 579, 593, 597, 934, 936], "835": [85, 86, 575, 577, 579], "34": [85, 86, 364, 424, 427, 575, 577, 579, 580, 583], "98": [85, 86, 364, 424, 427, 575, 577, 579, 756, 794, 796, 944, 948, 981, 982, 985], "347": [85, 86, 575, 577, 579], "721": [85, 86, 575, 577, 579], "static_ab": [85, 86, 365], "static_add": [85, 86, 120, 121, 128, 378], "static_asinh": [85, 86, 387], "97": [85, 86, 364, 387, 390, 391], "75": [85, 86, 364, 387, 390, 391, 756, 777, 779, 794, 796], "static_co": [85, 86, 432], "static_divid": [85, 86, 128, 441], "static_multipli": [85, 86, 128, 536], "static_sign": [85, 86, 565], "static_sin": [85, 86, 570], "static_sinh": [85, 86, 575], "static_subtract": [85, 86, 128, 588], "static_tan": [85, 86, 121, 128, 593], "143": [85, 86, 121, 364, 593, 594, 596, 597], "38": [85, 86, 121, 364, 593, 594, 596, 597], "static_tanh": [85, 86, 598], "995": [85, 86, 364, 598, 599, 601, 602], "9999": [85, 86, 598, 599], "static_all_equ": [87, 88, 608, 610], "max_norm": [87, 88, 607, 619, 620, 621, 622], "axes_length": [87, 88, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 647], "rearrang": [87, 88, 607, 629, 630, 631, 632, 637, 638, 639, 640, 644, 647], "One": [87, 88, 103, 104, 123, 129, 134, 136, 137, 607, 633, 634, 635, 636, 844, 874, 877, 932, 934, 935, 936], "callabl": [87, 88, 123, 128, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 174, 175, 248, 285, 286, 317, 358, 607, 613, 618, 628, 633, 634, 635, 636, 904, 905, 906, 907, 908, 914, 918, 919, 920], "static_einops_rearrang": [87, 88, 629], "static_einops_reduc": [87, 88, 633], "static_einops_repeat": [87, 88, 637], "static_gath": [87, 88, 644], "static_gather_nd": [87, 88, 648], "static_to_numpi": [87, 88, 691, 694], "lr": [89, 90, 137, 138, 701, 707, 708, 709, 710, 712, 713, 714, 715, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 1060, 1061, 1062, 1063, 1064, 1065], "mw_tm1": [89, 90, 701, 707, 708, 709, 710, 721, 722, 723, 724], "vw_tm1": [89, 90, 701, 707, 708, 709, 710, 721, 722, 723, 724], "max_trust_ratio": [89, 90, 701, 721, 722, 723, 724, 1060, 1062], "decay_lambda": [89, 90, 701, 721, 722, 723, 724, 725, 726, 727, 728, 1060, 1062, 1063], "effective_grad": [89, 90, 701, 729, 730, 731, 732], "static_adam_step": [89, 90, 702], "87": [89, 90, 103, 104, 701, 702, 705, 706, 934, 936], "976": [89, 90, 364, 598, 602, 701, 702, 705, 706], "static_adam_upd": [89, 90, 707], "static_gradient_descent_upd": [89, 90, 712], "static_is_vari": [89, 90, 716], "static_lamb_upd": [89, 90, 721], "static_lars_upd": [89, 90, 725], "static_optimizer_upd": [89, 90, 729], "inp": [93, 94, 739, 746, 748, 749, 750], "static_depthwise_conv2d": [93, 94, 746], "73": [95, 96, 123, 364, 580, 583, 756, 757, 759, 760, 761, 926, 927, 930], "577": [95, 96, 756, 757, 759, 760, 761], "41": [95, 96, 136, 364, 424, 427, 580, 583, 756, 757, 759, 760, 761, 981, 1006, 1009], "707": [95, 96, 756, 757, 759, 760, 761], "static_choleski": [95, 96, 757], "static_rol": [95, 96, 99, 100, 121, 128, 757, 761, 845, 849, 878], "511": [97, 98, 828, 829, 831, 832, 833, 839, 841, 843], "5108256": [97, 98, 834, 836], "609438": [97, 98, 834, 836], "static_binary_cross_entropi": [97, 98, 829], "static_cross_entropi": [97, 98, 834], "20397282": [97, 98, 834, 838], "83258148": [97, 98, 834, 838], "60943794": [97, 98, 834, 838], "static_sparse_cross_entropi": [97, 98, 839], "static_clip": [99, 100, 845], "658": [101, 102, 926, 927, 929, 930, 931], "04": [101, 102, 739, 755, 926, 927, 929, 930, 931], "759": [101, 102, 926, 927, 929, 930, 931], "42": [101, 102, 103, 104, 139, 162, 168, 171, 701, 702, 705, 756, 794, 796, 927, 929, 931, 932, 934, 936, 942, 981, 982, 985], "403": [101, 102, 927, 929, 931], "62": [101, 102, 103, 104, 364, 575, 578, 927, 929, 931, 934, 936], "static_layer_norm": [101, 102, 927], "static_randint": [103, 104, 934], "drawn": [103, 104, 123, 932, 933, 934, 935, 936, 937, 938, 940], "highest": [103, 104, 932, 934, 935, 936], "nativeshap": [103, 104, 177, 186, 200, 222, 223, 240, 242, 607, 676, 682, 688, 690, 739, 741, 743, 745, 844, 874, 877, 932, 934, 935, 936, 937, 938, 940], "half": [103, 104, 177, 178, 179, 932, 934, 935, 936, 938, 940], "20": [103, 104, 136, 364, 424, 427, 454, 457, 561, 564, 580, 583, 756, 768, 770, 794, 796, 813, 815, 932, 934, 935, 936, 944, 947, 948, 981, 982, 985], "40": [103, 104, 364, 437, 440, 580, 583, 756, 794, 796, 934, 936, 981, 982, 985], "52": [103, 104, 701, 702, 705, 756, 794, 796, 934, 936, 949, 950, 954, 981, 982, 985], "95": [103, 104, 364, 565, 568, 701, 702, 705, 934, 936], "13": [103, 104, 121, 123, 128, 364, 404, 407, 424, 427, 437, 440, 580, 583, 607, 625, 701, 702, 705, 739, 755, 756, 768, 770, 794, 796, 934, 936, 944, 948, 949, 950, 954, 981, 982, 985], "static_random_uniform": [103, 104, 938], "static_unique_al": [107, 108, 950], "static_unique_count": [107, 108, 955], "classivi": [107, 108, 844, 883, 949, 955, 956, 958, 959], "static_unique_invers": [107, 108, 960], "static_unique_valu": [107, 108, 965], "static_argsort": [109, 110, 971], "static_sort": [109, 110, 976], "static_al": [113, 114, 1015], "static_ani": [113, 114, 1020], "add_ivy_container_instance_method": 115, "containerexampl": [115, 116], "who": [117, 133, 151], "mainli": [117, 135, 137], "under": [117, 120, 121, 122, 123, 124, 128, 133, 134, 137, 139], "hood": [117, 121, 123, 124, 128, 133, 134, 137, 139], "weed": [117, 133], "behind": [117, 123, 133, 135, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731], "tour": 117, "primari": [117, 123, 125, 131, 151], "composit": [117, 123, 125, 127, 128, 131, 134, 138, 139, 151], "nestabl": [117, 120, 121, 123, 131, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 428, 431, 462, 465, 534, 545, 548, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 768, 770, 844, 878, 881, 926, 927, 930, 949, 955, 959, 981, 986, 989, 1014, 1015, 1018], "dynam": [117, 129, 130, 131, 134, 174, 175], "runtim": [117, 123, 317], "j": [117, 607, 615, 616, 756, 816, 818, 981, 982, 985], "borrow": 117, "taken": [118, 132, 139, 756, 768, 770], "compil": [118, 128, 133, 135, 151, 1025, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "meta": [118, 127, 905, 906, 907], "overlap": 118, "sever": [118, 151, 756, 777, 779], "judgement": 118, "locat": [118, 123, 125, 130, 932, 933], "some_namespac": 118, "some_backend": 118, "another_backend": 118, "break": [118, 119, 132, 136, 151, 1025], "anyth": [118, 123, 1025], "refactor": 118, "ongo": 118, "subfold": [118, 123], "via": [118, 128, 129, 130, 131, 134, 136, 137, 150, 908, 909, 918, 919], "file_nam": [118, 123], "my_func": [118, 121], "my": 118, "cooler": 118, "produc": [118, 123, 317, 324, 325, 739, 755], "something_cool": 118, "category_nam": [119, 120, 124, 129, 130], "backend_nam": [119, 120, 124, 125, 126, 129, 130], "adress": 119, "conveni": [119, 129, 130, 135, 137, 138], "revisit": [119, 139], "dedic": [119, 136, 138, 701, 737, 1036, 1037], "four": [119, 121, 124, 129, 137], "tf": [119, 127, 129, 130, 131, 134, 139, 151, 1025], "jnp": [119, 129, 130, 131, 139, 1025], "jaxarrai": [119, 129, 130, 131], "wherea": [119, 121, 123, 124, 127, 129, 130, 139], "__sub__": [119, 121, 127, 128, 136], "__mul__": [119, 121, 127, 128, 136], "__div__": 119, "permit": [119, 123, 127], "dicat": 119, "addition": [119, 128, 131], "omit": [119, 131, 949, 950, 954, 955, 959, 965, 969], "wrapper": [119, 126, 127, 128, 129, 131, 136], "contrast": [119, 120], "futher": 119, "absenc": [119, 128], "pep": 119, "484": 119, "annot": [119, 132], "dictat": [119, 121, 127, 131], "brittl": 119, "intend": [119, 981, 1006, 1009], "subset": [119, 120, 123, 134], "freeli": 119, "extend": [119, 120, 125], "consum": [119, 123, 128, 317], "inde": [119, 151], "flexibl": 119, "technic": [119, 128, 131, 151], "original_typ": 119, "cumbersom": 119, "readabl": [119, 127, 128, 136, 137], "account": 120, "instanti": 120, "firstli": [120, 121, 124, 127, 129, 131, 137], "templat": [120, 123, 1025], "spec": [120, 121], "api_specif": [120, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "array_api": 120, "preview": 120, "render": 120, "incorrectli": [120, 132], "onlin": [120, 1025], "approxim": [120, 162, 163, 364, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 506, 509, 510, 513, 553, 556, 570, 573, 575, 578, 593, 597, 598, 602, 756, 788, 790, 797, 799], "domain": [120, 364, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602], "infin": [120, 176, 248, 251, 254, 364, 365, 368, 374, 377, 378, 381, 387, 390, 392, 395, 396, 399, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 466, 469, 478, 481, 482, 485, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 756, 822, 824, 981, 986, 989, 994, 997, 1014, 1015, 1018, 1020, 1023], "codomain": [120, 364, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 396, 399, 432, 435, 437, 440, 454, 457, 458, 461, 498, 501, 502, 505, 510, 513, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602], "x_i": [120, 364, 365, 368, 370, 373, 374, 377, 383, 386, 387, 390, 392, 395, 408, 411, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 478, 481, 482, 485, 486, 489, 498, 501, 502, 505, 510, 513, 522, 525, 541, 544, 561, 564, 565, 568, 570, 573, 575, 578, 580, 583, 584, 587, 593, 597, 598, 602, 603, 606, 949, 950, 954, 955, 959, 965, 969, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013], "assum": [120, 123, 125, 129, 136, 137, 151, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 432, 435, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018], "operand": [120, 364, 370, 373, 374, 377, 378, 381, 383, 386, 387, 390, 392, 395, 396, 399, 424, 427, 428, 431, 432, 435, 437, 440, 454, 457, 458, 461, 462, 465, 498, 501, 502, 505, 510, 513, 514, 517, 536, 539, 553, 556, 557, 560, 561, 564, 570, 573, 575, 578, 580, 583, 593, 597, 598, 602, 603, 606, 981, 982, 985, 986, 989, 994, 997, 1006, 1009], "ref": [120, 364, 420, 423, 490, 493, 536, 539, 545, 548, 557, 560, 588, 592, 844, 888, 891], "But": [120, 128, 139], "needless": 120, "info": [120, 1025], "renam": 120, "conform": [120, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 458, 461, 462, 465, 494, 497, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 756, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018], "org": [120, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 701, 702, 705, 707, 709, 756, 768, 770, 844, 858, 861, 878, 881, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "elementwise_funct": [120, 364, 365, 368, 383, 386, 387, 390, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 570, 573, 580, 583, 584, 587, 756, 768, 770, 844, 878, 881, 949, 950, 954, 970, 971, 974, 981, 986, 989], "descript": [120, 123, 128, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 822, 824, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989, 1014, 1015, 1018], "simplic": [120, 138, 150, 177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 209, 210, 212, 215, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247, 248, 266, 269, 298, 301, 364, 365, 368, 378, 381, 383, 386, 387, 390, 404, 407, 424, 427, 428, 431, 437, 440, 462, 465, 534, 545, 548, 561, 564, 565, 568, 570, 573, 580, 583, 584, 587, 593, 597, 598, 602, 607, 644, 646, 739, 742, 746, 749, 755, 756, 757, 760, 765, 767, 768, 770, 844, 858, 861, 862, 865, 878, 881, 926, 927, 930, 949, 950, 954, 955, 959, 970, 971, 974, 981, 986, 989], "judgment": 120, "beyond": [120, 844, 878, 881], "text": 120, "func_nam": [120, 121, 124], "pure": [120, 136, 139, 151], "themselv": [120, 124, 128, 129, 130, 138, 908, 909], "operator_nam": 120, "succinct": 120, "contstructor": 120, "though": [120, 124, 129, 137, 151], "forward": [120, 123, 139, 150, 151, 1056, 1057, 1060, 1064], "_forward": [120, 134, 137, 138, 1025], "former": 120, "explicitli": [120, 124, 125, 127, 128, 131, 134, 151, 756, 771, 773, 1044, 1053, 1055, 1056, 1057], "latter": [120, 125], "implicit": [120, 123, 128, 134], "docst": 120, "eight": 121, "static_": 121, "op_nam": 121, "__r": 121, "__truediv__": [121, 127, 128], "recap": [121, 128, 138], "independ": [121, 122, 126, 128, 134, 139, 756, 762, 764, 804, 806, 932, 933], "combinatorili": 121, "variat": [121, 123], "grid": [121, 123, 150, 177, 212, 215], "vari": [121, 123, 128, 136, 949, 950, 954, 955, 959, 965, 969], "simplest": [121, 123], "unus": [121, 131, 132, 174, 175], "excess": [121, 125, 136], "okai": [121, 134], "showcas": [121, 150], "demonstr": [121, 136], "replic": [121, 129], "meant": 121, "imaginari": 121, "some_flag": 121, "another_flag": 121, "jointli": 121, "three": [121, 123, 128, 133, 177, 212, 215, 1025], "x0": [121, 607, 615], "procedur": 121, "sens": [121, 128, 136], "5574077": 121, "1850398": 121, "5463025": 121, "8422884": 121, "91601413": 121, "9647598": 121, "3738229": 121, "1597457": 121, "0963247": 121, "9955841": 121, "3278579": 121, "multi": [121, 128, 133, 151, 739, 754, 756, 762, 764, 1025, 1031, 1044, 1055], "seper": [121, 607, 643], "pars": [121, 151], "satisfi": [121, 756, 825, 827], "far": [121, 130, 135, 136, 908, 909, 919], "asid": [121, 150], "irrelev": [121, 129], "increasingli": 121, "complex": [121, 137, 138, 139, 151, 756, 771, 773, 807, 809], "14254655": 121, "1578213": 121, "380515": 121, "17": [121, 128, 162, 164, 756, 768, 770, 932, 937], "trivial": 121, "exlud": 121, "unit": [122, 123, 151, 162, 163, 164, 165, 317], "thoroughli": 122, "ci": [122, 123, 151], "failur": 122, "On": [123, 132, 135, 139], "fixtur": 123, "300": [123, 364, 561, 564], "hit": [123, 134], "action": 123, "eleg": 123, "intellig": 123, "sampl": [123, 739, 751, 932, 933, 937, 938, 940, 981, 1002, 1005, 1010, 1013, 1044, 1052], "rang": [123, 137, 138, 139, 177, 178, 179, 206, 207, 209, 210, 949, 950, 954, 981, 998, 1001, 1006, 1009, 1025], "cach": [123, 124, 317, 332, 607, 618], "unexplor": 123, "known": 123, "repeatedli": [123, 128, 908, 917], "upload": 123, "artifact": 123, "parametr": 123, "statement": [123, 132, 151], "plai": [123, 139], "varieti": [123, 129, 130], "wide": 123, "valid_int_dtyp": 123, "int8": [123, 129, 248, 298, 301, 316], "int16": [123, 129, 248, 266, 269, 298, 301, 981, 998, 1001, 1006, 1009], "uint8": [123, 129, 248, 266, 269, 316], "uint16": [123, 129, 248, 286, 981, 998, 1001, 1006, 1009], "uint32": [123, 129, 248, 286, 981, 998, 1001, 1006, 1009], "uint64": [123, 129, 248, 286, 981, 998, 1001, 1006, 1009], "custom_strategi": 123, "st": 123, "sampled_from": 123, "min_siz": 123, "max_siz": 123, "wherein": 123, "referenc": 123, "print_hypothesis_exampl": 123, "searchstrategi": 123, "randomis": 123, "simplist": 123, "intricaci": 123, "briefli": [123, 124, 137], "bound": [123, 134], "mechan": [123, 149, 151, 1025], "power": [123, 136, 137, 138, 364, 420, 423, 454, 457, 553, 556, 607, 654, 677, 685, 756, 787, 1038], "math": [123, 131, 139, 1025], "inclus": [123, 131, 177, 178, 179, 932, 934, 935], "width": 123, "losslessli": 123, "mostli": 123, "one_of": 123, "datum": 123, "pipe": 123, "overload": 123, "shorthand": 123, "draw": [123, 932, 933, 937, 938, 940], "input_dtyp": 123, "reject": 123, "flatmap": 123, "suppos": 123, "dataobject": 123, "test_argsort": 123, "decor": [123, 124, 126, 128, 129, 130, 131], "initialis": [123, 317], "snippet": 123, "dtype_and_x": 123, "dtype_and_valu": 123, "valid_float_dtyp": 123, "list_of_length": 123, "num_positional_arg": 123, "instance_method": 123, "alpha": [123, 162, 164], "test_leaky_relu": 123, "float16": [123, 129, 248, 286, 316], "exhaust": 123, "num_posit": 123, "indirectli": 123, "advis": 123, "seri": 123, "9433925": 123, "401298464324817e": 123, "574352379": 123, "99999": 123, "2250738585072014e": 123, "308": 123, "103515625e": 123, "unpack": [123, 132, 607, 699], "seamlessli": 123, "edg": [123, 134, 139, 844, 845, 848, 854, 857, 900, 903, 1025], "encount": 123, "criterion": 123, "straight": [123, 136, 1025], "array_valu": 123, "valid_ax": 123, "hand": [123, 124, 132, 151], "craft": 123, "polici": [123, 150], "hoc": 123, "overview": [123, 133, 150], "array_dtyp": 123, "array_bool": 123, "na": 123, "test_concat": 123, "test_devic": 123, "array_shap": 123, "test_manipul": 123, "common_shap": 123, "test_lay": 123, "size_bound": 123, "precis": [123, 248, 280, 283, 364, 536, 539, 580, 583], "283405296074752": 123, "564049465049088": 123, "0417876997507982e": 123, "min_valu": 123, "max_valu": 123, "allow_inf": 123, "min_num_dim": 123, "wherev": 123, "reshape_shap": 123, "stand": 123, "alon": [123, 317, 353, 363], "fashion": 123, "some_sequ": 123, "06": [123, 701, 702, 705], "allow_subnorm": 123, "exclude_min": 123, "960464477539063e": 123, "08": [123, 364, 387, 390, 739, 755], "coverag": 123, "allow_nan": 123, "Such": 123, "kind": [123, 151, 248, 280, 283, 287, 290, 364, 553, 556, 981, 998, 1001, 1006, 1009], "get_shap": 123, "allow_non": 123, "max_num_dim": 123, "min_dim_s": 123, "none_or_list_of_float": 123, "200": 123, "199": [123, 364, 387, 390], "99999999999997": 123, "000000000000002": 123, "125": 123, "43759670925832": 123, "get_mean_std": 123, "probabilist": 123, "811428143185347e": 123, "89": [123, 364, 424, 427, 756, 813, 815, 981, 1006, 1009], "none_or_list_float": 123, "get_bound": 123, "arrays_valu": 123, "put": [123, 151], "36418": 123, "213": 123, "21716926": 123, "get_prob": 123, "unnorm": [123, 932, 933], "099609375": 123, "get_axi": 123, "number_positional_argu": 123, "mind": [123, 127, 128], "bodi": 123, "possibli": [123, 151, 607, 689], "test_valu": 123, "enough": [123, 136, 137, 138], "autom": [123, 1025], "report": 123, "test_demo": 123, "falsifi": 123, "failing_test": 123, "traceback": 123, "123": [123, 607, 641], "assertionerror": [123, 701, 738], "shrink": 123, "prescrib": 123, "behavior": [123, 128, 134, 151, 364, 553, 556, 557, 560, 949, 950, 954, 955, 959, 965, 969], "identifi": 123, "closest": [123, 248, 271, 364, 428, 431, 462, 465, 466, 469, 561, 564, 603, 606], "checkout": 123, "scratch": 123, "databas": 123, "therebi": 123, "debug": [123, 128, 137], "event": [123, 1025], "test_gelu": 123, "test_fil": 123, "brief": 123, "phase": [123, 151], "reus": 123, "notabl": 123, "displai": [123, 128, 137], "verbos": [123, 134, 1025, 1070], "newer": 123, "max_exampl": 123, "impact": [123, 138], "deadlin": 123, "weird": 123, "verifi": [123, 129, 130, 136, 1025, 1031], "truth": [123, 364, 446, 449, 470, 473, 474, 477, 490, 493, 494, 497, 545, 548], "opt": [123, 125, 131, 136], "defer": [123, 124, 127, 128, 129, 130, 131], "suffic": [123, 126], "catch": [123, 607, 628], "systemat": 123, "safeguard": 123, "inabl": 123, "fact": [123, 137], "categor": [124, 130], "mutual": [124, 128], "constitut": [124, 134, 981, 1002, 1005, 1010, 1013], "venn": 124, "diagram": 124, "light": [124, 151], "log_pr": [124, 128, 131], "array_arg": 124, "typic": 124, "whatsoev": [124, 128], "commonli": [124, 981, 1002, 1005, 1010, 1013], "outsid": [124, 130, 132, 134, 136, 139, 844, 845, 848, 888, 891], "deal": [124, 151], "concurr": [124, 128], "modif": 124, "group": [124, 128], "get_all_arrays_on_dev": 124, "nested_map": [124, 908], "index_nest": [124, 908], "implicit_backend": 125, "unless": [125, 130, 131, 151, 364, 536, 539, 607, 672], "__dict__": [125, 134, 136], "ivy_original_dict": [125, 134], "unmodifi": [125, 129], "fallback": 125, "freedom": [125, 981, 1002, 1005, 1010, 1013], "recommend": [125, 364, 522, 525, 526, 529, 557, 560, 981, 990, 993], "achiev": [126, 132, 137, 139], "topic": [126, 136], "_data": [127, 136], "organiz": [127, 128], "inherit": [127, 128, 136], "bear": [127, 128, 129], "necessarili": [127, 128], "although": [127, 128], "underpin": [127, 128, 134], "programmat": [127, 128], "backup": [127, 128], "accident": [127, 128], "absent": [127, 128], "perk": [127, 128], "auto": [127, 128, 137], "throw": [127, 136], "imposs": 127, "coupl": [127, 128, 136, 138], "anywai": 127, "secondli": [127, 129], "easier": 127, "five": [128, 137], "decis": [128, 134, 136], "arbitrarili": [128, 137], "__repr__": 128, "control": [128, 129, 131, 136, 137, 150], "__getattr__": 128, "underli": [128, 364, 404, 407, 416, 419, 424, 427, 530, 533], "__setattr__": 128, "__contains__": 128, "__getstate__": 128, "__setstate__": 128, "unpickl": 128, "expand": [128, 607, 643, 844, 858, 861], "counterpart": 128, "irrespect": [128, 131, 136, 248, 251, 254], "presenc": [128, 131], "implicitli": 128, "intuit": [128, 137, 138], "chronolog": 128, "had": [128, 131], "sequenti": [128, 138], "flow": [128, 150], "implic": 128, "slightli": [128, 134, 138], "eager": [128, 151], "children": 128, "shallowest": 128, "deepest": 128, "22": [128, 364, 424, 427, 756, 768, 770, 794, 796, 944, 948, 981, 982, 985], "retain_grad": [128, 701, 711], "dy": [128, 701, 711], "dx": [128, 701, 711], "autograd": [128, 151], "grad": [128, 137, 138, 139, 1025, 1060, 1064], "redund": 128, "num_head": [128, 739, 754, 1044, 1055], "mask": [128, 739, 754, 755], "to_q_fn": [128, 739, 754], "to_kv_fn": [128, 739, 754], "to_out_fn": [128, 131, 739, 754], "to_q_v": [128, 739, 754], "to_kv_v": [128, 739, 754], "to_out_v": [128, 739, 754], "measur": [128, 739, 754, 1044, 1055], "dot": [128, 739, 754, 755, 756, 813, 815, 819, 821, 1044, 1055], "bfloat16": 129, "all_dtyp": 129, "all_numeric_dtyp": 129, "all_int_dtyp": 129, "all_float_dtyp": 129, "fall": [129, 133, 1025, 1056, 1057, 1060, 1064], "thirdli": 129, "native_float32": [129, 248, 316], "importantli": [129, 136, 139, 150], "arguabl": [129, 130], "compound": 129, "overflow": [129, 364, 378, 381, 981, 1006, 1009], "arr": [129, 130], "settabl": [129, 130], "mx": [129, 130, 131, 1025], "nd": [129, 130, 131, 134, 139, 1025], "deleg": 129, "shape_to_tupl": 129, "unsupported_dtyp": 129, "idx": [130, 136, 607, 613], "tpu": [130, 317, 336, 361], "aliv": [130, 317, 348, 352, 354, 607, 653, 671, 673], "memori": [130, 131, 149, 151, 317, 332, 353, 358, 360, 363, 739, 753, 1025], "dual": 130, "thrown": [130, 151, 607, 663], "rare": [130, 151], "program": 131, "strictli": 131, "ration": 131, "speak": 131, "subtli": 131, "ensure_in_backend": [131, 607, 663], "x_nativ": 131, "val_n": 131, "assign": [131, 132, 136], "elif": 131, "unspecifi": [131, 364, 553, 556, 557, 560, 756, 771, 773, 844, 888, 891], "predominantli": [131, 150], "altern": [131, 137], "_wrap_fn": 131, "maxim": [131, 134], "inner": [131, 136, 756, 771, 773, 780, 783, 904, 905, 906, 907], "third": [131, 151, 756, 807, 809, 949, 950, 954], "leverag": 131, "equival": [131, 137, 139, 177, 178, 179, 364, 420, 423, 522, 525, 526, 529, 557, 560, 756, 788, 790, 797, 799, 804, 806, 822, 824], "input_arrai": 131, "clean": [132, 134, 135, 137], "flake8": 132, "undefin": 132, "yield": [132, 944, 948], "handler": [132, 133, 135, 139, 1025], "liter": [132, 756, 822, 824], "carri": 132, "star": 132, "byte": 132, "notimpl": 132, "notimplementederror": 132, "unsuccess": 132, "exce": [132, 364, 535], "black": 132, "disobei": 132, "successfulli": 132, "comparison": 132, "sound": 133, "higher": [133, 134, 139, 151, 701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731], "fledg": [134, 135], "syntact": [134, 139], "clip_by_valu": [134, 139], "clamp": [134, 139], "fit": [134, 844, 870, 873], "construct": [134, 135, 138, 139, 844, 896, 899, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067], "power_seq": 134, "resid": [134, 138], "ml_framework": [134, 139, 177, 178, 179], "current_framework": [134, 139], "furthermor": 134, "concaten": [134, 137, 317, 343, 607, 643, 844, 850, 853, 1025], "framework_handl": 134, "face": 134, "cprint": [134, 1069], "framework_stack": 134, "_determine_framework_from_arg": 134, "valueerror": [134, 844, 884, 887], "get_framework": 134, "neither": [134, 364, 378, 381, 536, 539, 701, 738], "illustr": [134, 150], "un": [134, 248, 292], "nn": [134, 139, 177, 212, 215, 1025], "init_h": [134, 739, 753], "init_c": [134, 739, 753], "kernel": [134, 151, 739, 753], "recurrent_kernel": [134, 739, 753], "bia": [134, 138, 739, 752, 753, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054], "recurrent_bia": [134, 739, 753], "x_shape": 134, "batch_shap": [134, 136, 139, 607, 672, 739, 753, 754, 755, 756, 825, 827, 932, 933, 1044, 1053], "timestep": [134, 739, 753, 1044, 1053], "input_channel": [134, 138, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054], "x_flat": 134, "wi": 134, "wi_x": 134, "wii_x": 134, "wif_x": 134, "wig_x": 134, "wio_x": 134, "recurr": [134, 739, 753], "wh": 134, "lstm": [134, 739, 753, 1044], "ht": 134, "ct": 134, "hts_list": 134, "unrol": [134, 137, 739, 753], "wii_xt": 134, "wif_xt": 134, "wig_xt": 134, "wio_xt": 134, "zip": 134, "htm1": 134, "ctm1": 134, "wh_htm1": 134, "whi_htm1": 134, "whf_htm1": 134, "whg_htm1": 134, "who_htm1": 134, "ft": 134, "gt": 134, "ot": 134, "offici": 134, "reliabl": 134, "sacrific": 134, "hear": 134, "virtu": 134, "pure_ivi": 134, "reduce_mean": [134, 137, 138, 139, 1025], "reduce_sum": [134, 1025], "reduce_var": 134, "compile_graph": [134, 139], "pure_torch": 134, "cat": [134, 139], "backbon": [134, 137], "_layer": 134, "super": [134, 137, 138, 139], "random_unifrom": 134, "unclean": 134, "wx": 134, "temp": 134, "torchscript": 134, "fn": [134, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 248, 285, 286, 317, 324, 325, 607, 613, 697, 908, 909, 914, 915, 916, 918, 919, 920, 1028, 1030], "example_input": [134, 174, 175], "static_argnum": [134, 174, 175], "static_argnam": [134, 174, 175], "jit": [134, 151], "frontend": 135, "primit": [135, 151], "hierarch": [135, 137, 138], "arraywithlinalg": 136, "arraywithlog": 136, "arraywithmath": 136, "arraywithmeta": 136, "arraywithreduct": 136, "_shape": 136, "_size": 136, "functool": 136, "mul": 136, "len": [136, 139, 177, 212, 215], "_dtype": 136, "_devic": 136, "_dev_str": 136, "_pre_repr": 136, "_post_repr": 136, "answer": [136, 151], "consol": 136, "typeerror": 136, "immut": 136, "behav": 136, "claim": 136, "truli": 136, "_native_wrapp": 136, "attributeerror": 136, "genuin": 136, "some_method": 136, "similarli": [136, 177, 212, 215], "rewritten": 136, "__pow__": 136, "strang": 136, "enforc": 136, "notic": 136, "appear": [136, 844, 858, 861], "_wrap_method": 136, "func_wrapp": [136, 152, 153, 154, 155, 156, 157, 158, 159, 160], "__name__": 136, "non_wrapped_method": 136, "_method_wrap": 136, "native_arg": 136, "native_kwarg": 136, "inner_fn": 136, "whist": 136, "unwrap": 136, "transit": 136, "needlessli": 136, "randn": 136, "_unwrap_method": 136, "method_wrap": 136, "compartment": 136, "public": [136, 607, 623], "newshap": 136, "new_shap": 136, "tidi": 136, "shorter": 136, "crystal": 136, "ton": 137, "ado": [137, 138], "incredibli": [137, 151], "hash": 137, "soup": 137, "walk": [137, 138], "dct": 137, "cnt": 137, "combo": [137, 1025, 1031], "hold": [137, 607, 675, 676], "1000": [137, 364, 580, 583], "uda": 137, "3333": 137, "6667": 137, "178": 137, "new_weight": 137, "0600": 137, "3100": 137, "2400": 137, "6900": 137, "delimit": 137, "autocomplet": 137, "midwai": 137, "agent": 137, "total_spe": 137, "total_height": 137, "total_width": 137, "ag": 137, "tot": 137, "total_": 137, "total_h": 137, "dir": 137, "cnt0": 137, "cnt1": 137, "diff_0": 137, "diff_1": 137, "config0": 137, "config1": 137, "Not": [137, 138, 151, 176], "helper": 137, "decod": 137, "l0": 137, "l1": [137, 756, 822, 824], "depth": [137, 138, 139, 150, 317, 338, 342, 346, 607, 657, 672, 908, 920, 1056, 1057], "clearer": 137, "truncat": 137, "decoder__l0": 137, "decoder__l1": 137, "encoder__l0": 137, "encoder__l1": 137, "height": 137, "l0__b": 137, "l0__w": 137, "l1__b": 137, "l1__w": 137, "printabl": 137, "obviou": 137, "foresight": 137, "untidili": 137, "update_ag": 137, "normalize_img": 137, "img": 137, "img_max": 137, "reduce_max": [137, 1025], "img_min": 137, "reduce_min": [137, 1025], "img_rang": 137, "agent_posit": 137, "agent_veloc": 137, "agent_cam_front_rgb": 137, "agent_cam_front_depth": 137, "agent_cam_rear_rgb": 137, "agent_cam_rear_depth": 137, "agent_cam_lidar": 137, "cleaner": 137, "camera": 137, "front_rgb": 137, "front_depth": 137, "rear_rgb": 137, "rear_depth": 137, "lidar": 137, "rgb": 137, "rear": 137, "veloc": 137, "cam": 137, "cam_max": 137, "cam_min": 137, "cam_rang": 137, "Of": 137, "ideal": 137, "perman": 137, "afterward": 137, "thread": 137, "incorpor": 137, "pretti": 137, "straightforward": 137, "dataload": [137, 149, 1025], "_cnt": 137, "img_": 137, "_dataset_s": 137, "_batch_siz": 137, "_count": [137, 138], "__next__": 137, "filenam": 137, "img_fnam": 137, "fname": 137, "loaded_img": 137, "cv2": 137, "imread": 137, "loader": [137, 151], "batch_slic": 137, "mymodel": [137, 1025], "linear0": [137, 138, 1025], "linear1": [137, 138, 1025], "x_in": [137, 138, 139, 1025], "loss_fn": [137, 138, 139, 1025], "0145": 137, "grad_fn": 137, "addbackward0": 137, "_create_vari": 138, "output_channel": [138, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054], "with_bia": [138, 1044, 1054], "_input_channel": 138, "_output_channel": 138, "_w_shape": 138, "_b_shape": 138, "_with_bia": 138, "8979": 138, "3198": 138, "0196": 138, "3126": 138, "3717": 138, "9687": 138, "6958": 138, "5122": 138, "3902": 138, "8800": 138, "5613": 138, "1982": 138, "nightmar": 138, "overcom": 138, "fc": 138, "9563": 138, "v0": 138, "v1": 138, "6440": 138, "key0": 138, "1823": 138, "8075": 138, "linear3": 138, "v2": 138, "2346": 138, "counter": 138, "hidden": [138, 739, 753, 1044, 1053], "fed": [138, 317, 358], "1300": 138, "decoupl": 138, "scheme": 138, "weight_initi": [138, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054], "glorotuniform": [138, 1038, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054], "bias_initi": [138, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054], "_w_init": 138, "_b_init": 138, "create_vari": [138, 1038], "var_shap": [138, 1038], "fan_out": [138, 1038], "fan_in": [138, 1038], "fan_mod": [138, 1038], "fan_sum": 138, "slight": 138, "misnom": 138, "saw": 138, "vanilla": [138, 904, 906], "descent": [138, 701, 712, 714, 1060, 1065], "lar": [138, 701, 721, 723, 725, 727, 1060], "lamb": [138, 701, 721, 723, 1060], "compile_on_next_step": [138, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065], "_beta1": 138, "_beta2": 138, "_epsilon": 138, "_mw": 138, "_vw": 138, "_first_pass": 138, "_should_compil": 138, "_step": [138, 1060, 1064], "new_v": 138, "_lr": 138, "isinst": [138, 139, 607, 689], "_inplac": 138, "_stop_gradi": 138, "set_stat": [138, 1060, 1061, 1062, 1063, 1064, 1065], "pre": [139, 151, 317], "captur": 139, "sparse_funct": 139, "num_class": [139, 932, 933], "num_dim": 139, "new_axi": 139, "_linear": 139, "to_backend": 139, "jax_graph": 139, "to_ivy_modul": [139, 1036], "thinli": 139, "whilst": 139, "to_haiku_modul": 139, "hk": 139, "loss_fn_t": 139, "transform": [139, 150, 739, 751, 752], "without_apply_rng": 139, "rng": 139, "prngkei": 139, "init": 139, "update_rul": 139, "tree_multimap": 139, "vision": [149, 1025], "robot": [149, 1025], "focus": 150, "perfect": 150, "3d": [150, 1044, 1049, 1050], "differenti": 150, "demo": [150, 1025], "orient": 150, "pose": 150, "euler": [150, 176], "quaternion": 150, "rotat": 150, "ivy_mech": 150, "target_facing_rotation_matrix": 150, "polar_to_cartesian_coord": 150, "ordin": [150, 756, 804, 806], "warp": 150, "optic": 150, "voxel": 150, "ivy_vis": 150, "coords_to_voxel_grid": 150, "render_pixel_coord": 150, "neural": [150, 739, 1025, 1033, 1044], "radianc": 150, "nerf": 150, "trajectori": 150, "motion": 150, "plan": [150, 1025], "mobil": 150, "ivy_robot": 150, "sample_spline_path": 150, "rigidmobil": 150, "sample_bodi": 150, "drone": 150, "sample_link": 150, "openai": 150, "swimmer": 150, "cumul": [150, 607, 625, 626], "reward": 150, "supervis": 150, "reinforc": 150, "door": [150, 151], "intersect": 150, "cartpol": 150, "mountain_car": 150, "pendulum": 150, "reacher": 150, "condit": [150, 174, 175, 908, 918, 919, 944, 948], "learnt": 150, "ture": 150, "ntm": 150, "egospher": 150, "spatial": 150, "esm": 150, "ivy_memori": 150, "egocentr": 150, "room": 150, "inspir": 150, "doubt": 151, "grate": 151, "probe": 151, "undergo": 151, "remark": 151, "surpris": 151, "lock": 151, "contunu": 151, "minor": 151, "xla": 151, "buffer": 151, "gold": 151, "dex": 151, "lax": 151, "scan": 151, "tricki": 151, "predictor": 151, "tight": 151, "driver": 151, "schedul": 151, "dispatch": 151, "Will": 151, "ast": 151, "dynamic": 151, "cond": 151, "jacobian": 151, "checkpoint": 151, "autodiff": 151, "shine": 151, "merci": 151, "superset": 151, "cluster": 151, "compet": 151, "paradigm": 151, "parallelis": [151, 317, 324, 325], "spmd": 151, "mixtur": [151, 701, 702, 705], "expert": 151, "sophist": 151, "depart": 151, "routin": 151, "hundr": 151, "thousand": 151, "deepli": [151, 908, 910], "broadli": 151, "heavili": 151, "supplementari": 151, "reusabl": 151, "fanci": 151, "fusion": 151, "lose": 151, "vmap": 151, "pmap": 151, "overhead": 151, "ineffici": 151, "eventu": 151, "supplement": 151, "backdoor": 151, "callback": 151, "record": 151, "metric": 151, "somewhat": 151, "outsourc": 151, "inputs_to_ivy_arrai": 152, "gaussian": [162, 163], "leaki": [162, 163, 164], "rectifi": [162, 164, 165], "slope": [162, 164], "39": [162, 164, 364, 387, 390, 454, 457, 701, 702, 705, 756, 794, 796, 981, 982, 985], "85": [162, 164, 364, 424, 427], "48": [162, 164, 364, 580, 583, 701, 702, 705, 756, 794, 796, 981, 982, 985], "88": [162, 164, 364, 424, 427, 756, 794, 796, 981, 982, 985], "269": [162, 166], "731": [162, 166], "214": [162, 166], "978": [162, 166], "422": [162, 167], "155": [162, 167], "0768": [162, 167], "231": [162, 167], "693": [162, 167, 364, 387, 390, 828, 839, 842], "49": [162, 167, 364, 580, 583, 981, 982, 985], "147": [162, 167], "363": [162, 167], "3461": [162, 168, 171], "6491": [162, 168, 171], "535": [162, 168, 171], "55": [162, 173, 739, 745, 756, 794, 796, 981, 982, 985], "501": [162, 173], "array_method": [168, 169, 181, 182, 187, 188, 195, 196, 201, 202, 212, 213, 217, 218, 225, 226, 230, 232, 235, 237, 243, 245, 251, 252, 256, 257, 261, 262, 266, 267, 275, 276, 280, 281, 287, 288, 293, 294, 298, 299, 304, 305, 365, 366, 370, 371, 374, 375, 378, 379, 383, 384, 387, 388, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 437, 438, 441, 442, 446, 447, 450, 451, 454, 455, 458, 459, 462, 463, 466, 467, 470, 471, 474, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 522, 523, 526, 527, 530, 531, 536, 537, 541, 542, 545, 546, 549, 550, 553, 554, 557, 558, 561, 562, 565, 566, 570, 571, 575, 576, 580, 581, 584, 585, 588, 590, 593, 595, 598, 600, 603, 604, 608, 609, 648, 649, 691, 693, 702, 703, 716, 717, 746, 747, 757, 758, 762, 763, 765, 766, 768, 769, 771, 772, 774, 775, 777, 778, 780, 781, 784, 785, 788, 789, 791, 792, 794, 795, 797, 798, 800, 801, 804, 805, 807, 808, 810, 811, 813, 814, 816, 817, 819, 820, 822, 823, 825, 826, 829, 830, 834, 835, 839, 840, 845, 846, 850, 851, 854, 855, 858, 859, 862, 863, 866, 867, 870, 871, 874, 875, 878, 879, 884, 885, 888, 889, 892, 893, 896, 897, 900, 901, 927, 928, 950, 952, 955, 957, 960, 962, 965, 967, 971, 972, 976, 977, 982, 983, 986, 987, 990, 991, 994, 995, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1015, 1016, 1020, 1021], "container_method": [168, 170, 172, 178, 180, 181, 183, 185, 187, 189, 191, 192, 194, 195, 197, 199, 201, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 219, 221, 222, 224, 225, 227, 229, 230, 231, 233, 235, 236, 238, 240, 241, 243, 244, 246, 251, 253, 255, 256, 258, 260, 261, 263, 265, 266, 268, 270, 275, 277, 280, 282, 284, 287, 289, 291, 293, 295, 297, 298, 300, 302, 304, 306, 308, 365, 367, 369, 370, 372, 374, 376, 378, 380, 382, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 437, 439, 441, 443, 445, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 536, 538, 540, 541, 543, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 570, 572, 574, 575, 577, 579, 580, 582, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 605, 608, 610, 612, 620, 621, 629, 630, 632, 633, 634, 636, 637, 638, 640, 644, 645, 647, 648, 650, 652, 691, 692, 694, 702, 704, 706, 707, 708, 710, 712, 713, 715, 716, 718, 720, 721, 722, 724, 725, 726, 728, 729, 730, 732, 746, 748, 750, 757, 759, 761, 780, 782, 829, 831, 833, 834, 836, 838, 839, 841, 843, 845, 847, 849, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 927, 929, 931, 934, 936, 938, 939, 941, 950, 951, 953, 955, 956, 958, 960, 961, 963, 965, 966, 968, 971, 973, 975, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1015, 1017, 1019, 1020, 1022, 1024], "faster": [174, 175], "invoc": [174, 175], "718281828459045": 176, "newaxi": 176, "alia": 176, "pi": 176, "141592653589793": 176, "mathemat": [176, 364, 378, 381, 396, 399, 458, 461, 536, 539, 756, 822, 824], "chosen": [177, 178, 179, 364, 396, 399, 944, 948], "distanc": [177, 178, 179], "adjac": [177, 178, 179], "creation_funct": [177, 178, 179, 181, 184, 186, 187, 190, 192, 193, 195, 198, 200, 201, 204, 206, 207, 222, 223, 225, 228, 230, 234, 235, 239, 240, 242, 243, 247], "elsewher": [177, 192, 193, 944, 948], "row": [177, 192, 193, 756, 804, 806, 807, 809, 932, 933, 944, 947], "column": [177, 192, 193, 756, 771, 773, 800, 802, 804, 806, 807, 809], "__dlpack__": [177, 195, 198, 317, 359], "interchang": [177, 195, 198, 844, 892, 895], "coordin": [177, 212, 215, 364, 396, 399], "cartesian": [177, 212, 215], "ij": [177, 212, 215, 981, 982, 985], "ni": [177, 212, 215], "xi": [177, 212, 215], "n1": [177, 212, 215], "n2": [177, 212, 215], "n3": [177, 212, 215], "xv": [177, 212, 215], "yv": [177, 212, 215], "y1": [177, 243, 247], "y2": [177, 243, 247], "x3": [177, 243, 247, 317, 352], "y3": [177, 243, 247], "intdtyp": [177, 243, 247, 248, 274], "defaultdtyp": 248, "defaultfloatdtyp": 248, "float_dtyp": [248, 273, 310], "defaultintdtyp": 248, "incompat": [248, 261, 264], "data_type_funct": [248, 266, 269], "floatdtyp": [248, 273], "int_dtyp": [248, 274, 311], "followng": [248, 280, 283], "occupi": [248, 280, 283, 287, 290, 607, 675, 676], "ep": [248, 280, 283, 756, 788, 790, 797, 799], "smallest_norm": [248, 280, 283], "encapsul": [248, 287, 290], "type1": [248, 303], "type2": [248, 303], "ret1": [248, 312], "ret2": [248, 312], "native_bool": [248, 316], "native_float16": [248, 316], "native_float64": [248, 316], "native_int8": [248, 316], "native_int16": [248, 316], "native_int32": [248, 316], "native_int64": [248, 316], "native_uint8": [248, 316], "native_uint64": [248, 316], "defaultdevic": 317, "__enter__": 317, "_dev": 317, "__exit__": 317, "exc_typ": 317, "exc_val": 317, "exc_tb": 317, "exit": 317, "devcloneditem": [317, 336], "multidevitem": [317, 318, 321], "devclonedit": 317, "multidevit": [317, 319, 322, 324, 325, 328], "devclonednest": 317, "multidevnest": [317, 320, 323], "devdistitem": 317, "devdistit": 317, "devdistnest": 317, "devmanag": 317, "dev_mapp": 317, "da_dim_s": 317, "safety_factor": 317, "min_dev_dim_s": 317, "max_dev_dim_step_ratio": 317, "min_unit_dev_tune_step": 317, "min_sf_tune_step": 317, "starting_split_factor": 317, "max_split_factor_step_s": 317, "tune_dev_alloc": 317, "tune_dev_split": 317, "mapper": [317, 324, 325], "receivess": 317, "ratio": [317, 701, 721, 723, 1060, 1062], "safe": [317, 324], "oom": 317, "tune": 317, "da_tune_step": 317, "ds_tune_step": 317, "to_clon": 317, "to_distribut": 317, "multidevic": [317, 324], "parallel": [317, 324, 325], "mutlidevic": [317, 324], "repeated_config_check": 317, "tune_step": 317, "devmapp": [317, 325], "ret_fn": [317, 324, 325], "queue_class": [317, 324, 325], "worker_class": [317, 324, 325], "worker": [317, 324, 325], "used_dev": [317, 324], "sf": [317, 324], "devmappermultiproc": 317, "multidev": [317, 326, 327, 346], "profil": 317, "save_dir": [317, 329], "deviceic": [317, 335], "spread": [317, 346], "139740789224448": [317, 348], "physic": [317, 350], "x4": [317, 352], "process_specif": [317, 353, 363], "percentag": [317, 353], "ram": [317, 353, 360, 363], "attr_onli": [317, 354], "chunk": [317, 356, 357, 358], "max_chunk_s": [317, 358], "chunk_siz": [317, 358], "input_ax": [317, 358], "output_ax": [317, 358], "feed": [317, 358], "fist": [317, 358], "stream": [317, 359], "caveat": [317, 359], "portabl": [317, 359, 1025], "gb": [317, 360, 363], "reset": [317, 362, 607, 698], "magnitud": [364, 365, 368, 378, 381, 536, 539, 756, 807, 809, 810, 812], "princip": [364, 370, 373, 383, 386, 392, 395], "x1_i": [364, 378, 381, 396, 399, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 588, 592], "x2_i": [364, 378, 381, 396, 399, 404, 407, 412, 415, 416, 419, 420, 423, 424, 427, 441, 444, 446, 449, 466, 469, 470, 473, 474, 477, 490, 493, 494, 497, 514, 517, 518, 521, 526, 529, 530, 533, 536, 539, 545, 548, 553, 556, 557, 560, 588, 592], "finit": [364, 378, 381, 396, 399, 478, 481, 536, 539, 553, 556, 557, 560], "nor": [364, 378, 381, 536, 539, 701, 738], "nearest": [364, 378, 381, 536, 539, 561, 564], "2019": [364, 378, 381, 458, 461, 536, 539], "commut": [364, 378, 381], "57": [364, 383, 386, 387, 390, 424, 427, 437, 440], "524": [364, 383, 386], "644": [364, 383, 386], "201": [364, 383, 386, 561, 564], "305": [364, 383, 386], "412": [364, 383, 386], "44": [364, 387, 390, 561, 564, 580, 583, 584, 587, 756, 794, 796, 944, 948, 981, 982, 985], "809": [364, 387, 390], "569": [364, 387, 390], "733": [364, 387, 390], "68": [364, 387, 390, 926, 927, 930], "quotient": [364, 396, 399], "notat": [364, 396, 399, 981, 982, 985], "denot": [364, 396, 399, 701, 738], "pair": [364, 396, 399, 739, 755, 756, 762, 764], "quadrant": [364, 396, 399], "3\u03c0": [364, 396, 399], "549": [364, 400, 403], "bitwis": [364, 404, 407, 416, 419, 424, 427, 530, 533], "invert": [364, 408, 411], "arithmet": [364, 420, 423, 981, 990, 993], "propag": [364, 420, 423, 981, 986, 989, 990, 993, 994, 997, 1002, 1005, 1006, 1009, 1010, 1013], "thu": [364, 420, 423, 553, 556, 557, 560, 756, 771, 773], "lh": [364, 420, 423], "rh": [364, 420, 423], "xor": [364, 424, 427, 530, 533], "78": [364, 424, 427, 565, 568, 756, 794, 796, 981, 982, 985], "91": [364, 424, 427, 756, 794, 796, 981, 982, 985], "66": [364, 424, 427, 756, 794, 796, 981, 982, 985], "77": [364, 424, 427, 756, 794, 796, 981, 982, 985], "79": [364, 424, 427], "26": [364, 424, 427, 575, 578, 701, 702, 705, 739, 746, 749, 756, 768, 770, 794, 796, 813, 815, 981, 982, 985], "27": [364, 424, 427, 437, 440, 575, 578, 580, 583, 739, 755, 756, 794, 796, 981, 982, 985], "74": [364, 424, 427], "59": [364, 424, 427], "654": [364, 432, 435], "122": [364, 437, 440], "368": [364, 437, 440], "670": [364, 437, 440], "202": [364, 437, 440, 561, 564], "548": [364, 437, 440, 575, 578], "1490": [364, 437, 440], "dividend": [364, 441, 444, 557, 560], "gauss": [364, 450, 453], "exponenti": [364, 450, 453, 454, 457, 514, 517, 553, 556], "logarithm": [364, 454, 457, 498, 501, 502, 505, 506, 509, 510, 513, 514, 517, 756, 803], "72": [364, 454, 457, 701, 702, 705, 756, 794, 796, 981, 982, 985], "accur": [364, 458, 461], "fdlibm": [364, 458, 461], "compliant": [364, 458, 461, 522, 525, 526, 529, 981, 986, 989, 990, 993, 994, 997], "greatest": [364, 462, 465, 466, 469], "out_i": [364, 478, 481, 482, 485, 486, 489], "threshold": [364, 534, 535], "y_i": [364, 541, 544], "expon": [364, 553, 556, 607, 685], "versu": [364, 553, 556], "odd": [364, 553, 556], "modulu": [364, 557, 560], "primarili": [364, 557, 560], "5654": [364, 561, 564], "034": [364, 561, 564], "433": [364, 561, 564], "343": [364, 561, 564], "30": [364, 561, 564, 756, 794, 796, 981, 982, 985, 1038, 1042], "81": [364, 561, 564, 584, 587, 981, 982, 985], "527": [364, 561, 564], "301": [364, 561, 564], "124": [364, 565, 568], "46": [364, 565, 568], "932": [364, 570, 573], "746": [364, 570, 573], "443": [364, 570, 573], "657": [364, 570, 573], "253": [364, 575, 578], "indistinguish": [364, 580, 583], "infinit": [364, 580, 583], "83": [364, 580, 583], "32455532": [364, 580, 583], "89897949": [364, 580, 583], "50": [364, 580, 583, 756, 794, 796, 944, 947, 981, 982, 985], "31": [364, 580, 583], "169": [364, 580, 583], "47": [364, 580, 583], "93": [364, 580, 583], "35": [364, 580, 583, 739, 755, 756, 762, 764, 944, 948, 981, 982, 985], "09": [364, 584, 587, 739, 755], "546": [364, 593, 597], "842": [364, 593, 597], "916": [364, 593, 597, 828, 829, 832], "996": [364, 593, 597], "328": [364, 593, 597], "462": [364, 598, 602], "604": [364, 598, 602], "984": [364, 598, 602], "997": [364, 598, 602], "decim": [364, 603, 606], "inspect": [607, 613, 1029, 1030], "downscal": [607, 619, 620, 622], "60": [607, 625, 756, 794, 796, 981, 982, 985], "default_v": [607, 628], "catch_except": [607, 628], "rev": [607, 628], "with_cal": [607, 628], "arrang": [607, 629, 631], "mod": [607, 642], "max_freq": [607, 643], "num_band": [607, 643], "fourier": [607, 643], "band": [607, 643], "linearli": [607, 643, 756, 804, 806], "oppos": [607, 643], "geometr": [607, 643], "seen_set": [607, 657], "local_set": [607, 657], "decrement": [607, 661], "allow_dupl": [607, 669], "forkserv": [607, 670], "spawn": [607, 670], "hot": [607, 672], "scatter": [607, 672, 675, 676], "overrid": [607, 672], "tmp_dr": [607, 681], "temporari": [607, 681], "min_denomin": [607, 684], "stabil": [607, 684, 685, 970, 971, 974, 976, 979], "_min_denomin": [607, 684], "min_bas": [607, 685], "100000023841858": [607, 689], "200000047683716": [607, 689], "299999952316284": [607, 689], "400000095367432": [607, 689], "599999904632568": [607, 689], "gradienttrack": 701, "en": [701, 702, 705, 707, 709], "wikipedia": [701, 702, 705, 707, 709], "wiki": [701, 702, 705, 707, 709], "stochastic_gradient_desc": [701, 702, 705, 707, 709], "004": [701, 702, 705], "009": [701, 702, 705], "86": [701, 702, 705], "28": [701, 702, 705, 739, 742, 745, 746, 749, 756, 794, 796, 981, 982, 985], "0125": [701, 702, 705], "601": [701, 702, 705], "025": [701, 702, 705], "992": [701, 702, 705], "209": [701, 702, 705, 949, 950, 954], "271": [701, 702, 705], "0717": [701, 702, 705], "142": [701, 702, 705], "182": [701, 702, 705], "624": [701, 702, 705, 932, 938, 940], "744": [701, 702, 705], "626": [701, 702, 705], "65": [701, 702, 705, 756, 794, 796, 981, 982, 985], "024": [701, 702, 705], "096": [701, 702, 705], "216": [701, 702, 705], "384": [701, 702, 705], "rate": [701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731, 904, 905, 906, 907, 1044, 1055, 1060, 1061, 1062, 1063, 1064, 1065], "ws_new": [701, 707, 709, 712, 714, 721, 723, 725, 727, 729, 731], "retain": [701, 711], "trust": [701, 721, 723, 1060, 1062], "decai": [701, 721, 723, 725, 727, 1060, 1062, 1063], "layerwis": [701, 725, 727, 1060, 1063], "with_grads_stack": [701, 738], "nwc": [739, 740, 741, 1044, 1045, 1046], "d_out": [739, 740, 741, 742, 743, 744, 745], "ncw": [739, 740, 741, 1044, 1045, 1046], "wio": [739, 740], "output_shap": [739, 741, 743, 745, 1044, 1046, 1048, 1050], "hwio": [739, 742], "unequ": [739, 742], "unsqueez": [739, 742, 746, 749], "ndhwc": [739, 744, 745, 1044, 1049, 1050], "volum": [739, 744], "fd": [739, 744, 745], "ncdhw": [739, 744, 745, 1044, 1049, 1050], "dhwio": [739, 744], "258": [739, 745], "depthwis": [739, 746, 749, 1044, 1051], "hwi": [739, 746, 749], "333": [739, 746, 749], "prob": [739, 751, 932, 933, 1044, 1052], "randomli": [739, 751, 1044, 1052], "bernoulli": [739, 751], "out_featur": [739, 751, 752], "incom": [739, 752], "outer_batch_shap": [739, 752], "inner_batch_shap": [739, 752], "in_featur": [739, 752], "cell": [739, 753, 1044, 1053], "num_queri": [739, 754, 755], "x_feat_dim": [739, 754], "num_kei": [739, 754, 755], "cont_feat_dim": [739, 754], "numhead": [739, 754], "feat_dim": [739, 754, 755], "out_feat_dim": [739, 754], "score": [739, 755], "03": [739, 755, 926, 927, 930], "decomposit": [756, 757, 760, 800, 802, 807, 809], "vif": [756, 762, 764], "92": [756, 765, 767], "293": [756, 765, 767], "46997": [756, 765, 767], "eigendecomposit": [756, 771, 773], "qlq\u1d40": [756, 771, 773], "orthogon": [756, 771, 773], "eig": [756, 771, 773], "eigenvalu": [756, 771, 773, 774, 776], "eigenvector": [756, 771, 773], "prepend": [756, 780, 783], "singular": [756, 788, 790, 797, 799, 807, 809, 810, 812], "toler": [756, 788, 790, 797, 799], "largest_singular_valu": [756, 788, 790, 797, 799], "array_lik": [756, 794, 796], "84": [756, 794, 796, 981, 982, 985], "105": [756, 794, 796, 828, 829, 832], "112": [756, 794, 796, 981, 982, 985], "104": [756, 794, 796, 981, 982, 985], "120": [756, 794, 796], "moor": [756, 797, 799], "penros": [756, 797, 799], "pseudo": [756, 797, 799], "orthonorm": [756, 800, 802, 807, 809], "2d": [756, 803, 1044, 1047, 1048, 1051], "logdet": [756, 803], "coeffici": [756, 804, 806], "usvh": [756, 807, 809], "vh": [756, 807, 809], "hermitian": [756, 807, 809], "et": [756, 807, 809], "cetera": [756, 807, 809], "adjoint": [756, 807, 809], "reconstruct": [756, 807, 809, 949, 950, 954, 960, 964], "reconstructed_x": [756, 807, 809], "contract": [756, 813, 815, 981, 982, 985], "doubl": [756, 813, 815], "manhattan": [756, 822, 824], "l2": [756, 822, 824], "euclidean": [756, 822, 824], "mathbf": [756, 825, 827], "mathbb": [756, 825, 827], "skew": [756, 825, 827], "discret": [828, 834, 837], "35667497": [828, 834, 837], "793291": [828, 839, 842], "512926": [828, 839, 842], "before_1": [844, 854, 857, 900, 903], "after_1": [844, 854, 857, 900, 903], "before_n": [844, 854, 857, 900, 903], "after_n": [844, 854, 857, 900, 903], "insert": [844, 858, 861, 908, 913, 944, 945], "manipulation_funct": [844, 858, 861], "reorder": [844, 862, 865], "permut": [844, 866, 869, 892, 895], "repetit": [844, 870, 873, 896, 899], "famili": [844, 888, 891], "intxx": [844, 888, 891], "floatxx": [844, 888, 891], "fomaml_step": 904, "inner_cost_fn": [904, 905, 906], "outer_cost_fn": [904, 905, 906], "inner_grad_step": [904, 905, 906, 907], "inner_learning_r": [904, 905, 906, 907], "inner_optimization_step": [904, 905, 906, 907], "inner_batch_fn": [904, 905, 906], "outer_batch_fn": [904, 905, 906], "average_across_step": [904, 905, 906], "inner_v": [904, 905, 906], "keep_inner_v": [904, 905, 906], "outer_v": [904, 905, 906], "keep_outer_v": [904, 905, 906], "return_inner_v": [904, 905, 906, 907], "num_task": [904, 905, 906, 907], "maml": [904, 905, 906], "recev": [904, 905, 906], "0x7fefee8e6d30": [904, 905, 906, 907], "maml_step": 904, "rece": [904, 906], "reptile_step": 904, "cost_fn": [904, 907], "reptil": [904, 907], "receivng": [904, 907], "all_nested_indic": 908, "include_nest": [908, 909], "_index": [908, 909, 919], "_base": [908, 909, 918, 919], "copy_nest": 908, "to_mut": [908, 910, 920], "mutabl": [908, 910, 920], "insert_into_nest_at_index": 908, "insert_into_nest_at_indic": 908, "map_nest_at_index": 908, "map_nest_at_indic": 908, "multi_index_nest": 908, "nested_ani": 908, "check_nest": [908, 918, 919], "conditon": [908, 918, 919], "nested_indices_wher": 908, "stop_after_n_found": [908, 919], "_depth": [908, 920], "_tuple_check_fn": [908, 920], "_list_check_fn": [908, 920], "_dict_check_fn": [908, 920], "nested_multi_map": 908, "nest0": [908, 921], "ivy_arrai": [908, 921], "funciton": [908, 921], "prune_nest_at_index": 908, "prune_nest_at_indic": 908, "set_nest_at_index": 908, "set_nest_at_indic": 908, "mini": [926, 927, 930, 1058, 1059], "894": [926, 927, 930], "772": [926, 927, 930], "796": [926, 927, 930], "population_s": [932, 933], "num_sampl": [932, 933], "home": [932, 933, 937], "uniformli": [932, 934, 935, 938, 940], "parameter": [932, 937, 938, 940], "6444774682897879": [932, 937], "811": [932, 937], "508": [932, 937], "564": [932, 937], "7268672": [932, 937], "968": [932, 937], "175": [932, 937, 949, 950, 954], "064": [932, 937], "40935726": [932, 937], "556": [932, 937], "26431865": [932, 938, 940], "475": [932, 938, 940], "878": [932, 938, 940], "861": [932, 938, 940], "89150229": [932, 938, 940], "89629126": [932, 938, 940], "94198485": [932, 938, 940], "91405606": [932, 938, 940], "72848724": [932, 938, 940], "7550739": [932, 938, 940], "00109": [932, 938, 940], "occurr": [944, 945, 946, 949, 950, 954], "43": [944, 948], "x_j": [949, 950, 954, 955, 959, 965, 969], "impli": [949, 950, 954, 955, 959, 965, 969], "inverse_indic": [949, 950, 954, 960, 964], "aggreg": [949, 950, 954], "fourth": [949, 950, 954], "607": [949, 950, 954], "735": [949, 950, 954], "667": [949, 950, 954], "381": [949, 950, 954], "857": [949, 950, 954], "0396": [949, 950, 954], "166": [949, 950, 954], "58": [949, 950, 954], "828": [949, 950, 954], "144": [949, 950, 954], "40501155": [949, 950, 954], "77361575": [949, 950, 954], "97776199": [949, 950, 954], "36831157": [949, 950, 954], "89148434": [949, 950, 954], "9512272": [949, 950, 954], "67542176": [949, 950, 954], "41985657": [949, 950, 954], "23478023": [949, 950, 954], "1141": [949, 950, 954], "8101": [949, 950, 954], "9298": [949, 950, 954], "8460": [949, 950, 954], "2119": [949, 950, 954], "3519": [949, 950, 954], "6252": [949, 950, 954], "4033": [949, 950, 954], "7443": [949, 950, 954], "2577": [949, 950, 954], "3707": [949, 950, 954], "0545": [949, 950, 954], "3238": [949, 950, 954], "5944": [949, 950, 954], "0775": [949, 950, 954], "4327": [949, 950, 954], "176": [949, 950, 954], "889": [949, 950, 954], "763": [949, 950, 954], "071": [949, 950, 954], "262": [949, 950, 954], "456": [949, 950, 954], "114": [949, 950, 954], "349": [949, 950, 954], "615": [949, 950, 954], "594": [949, 950, 954], "335": [949, 950, 954], "212": [949, 950, 954], "457": [949, 950, 954], "827": [949, 950, 954], "set_funct": [949, 955, 959], "ascend": [970, 971, 974], "einstein": [981, 982, 985], "summat": [981, 982, 985], "seq": [981, 982, 985], "jk": [981, 982, 985], "ik": [981, 982, 985], "126": [981, 982, 985], "510": [981, 982, 985], "108": [981, 982, 985], "117": [981, 982, 985], "sentinel": [981, 986, 989, 994, 997], "unsign": [981, 998, 1001, 1006, 1009], "degre": [981, 1002, 1005, 1010, 1013], "bessel": [981, 1002, 1005, 1010, 1013], "8164966": [981, 1002, 1005], "varianc": [981, 1010, 1013], "unbias": [981, 1010, 1013], "simplicit": [1014, 1015, 1018], "grow": 1025, "ai": 1025, "got": 1025, "colab": 1025, "sharp": 1025, "weekli": 1025, "immedi": 1025, "favorit": 1025, "jax_concat": 1025, "tf_concat": 1025, "np_concat": 1025, "mx_concat": 1025, "torch_concat": 1025, "prompt": 1025, "get_devic": 1025, "reduce_prod": 1025, "gradient_imag": 1025, "linalg": 1025, "bilinear_resampl": 1025, "stack_imag": 1025, "neural_net": 1025, "ecosystem": [1025, 1031], "popular": [1025, 1031], "acceler": 1025, "articl": 1025, "lenton2021ivi": 1025, "inter": 1025, "lenton": 1025, "daniel": 1025, "pardo": 1025, "fabio": 1025, "falck": 1025, "fabian": 1025, "jame": 1025, "stephen": 1025, "clark": 1025, "ronald": 1025, "journal": 1025, "arxiv": 1025, "preprint": 1025, "2102": 1025, "02886": 1025, "2021": 1025, "add_array_spec": 1028, "fn_array_spec": 1028, "geglu": 1033, "native_modul": [1036, 1037], "native_module_class": [1036, 1037], "firstlayersiren": 1038, "kaimingnorm": 1038, "negative_slop": 1038, "Ones": 1038, "siren": 1038, "w0": [1038, 1042], "filter_s": [1044, 1045, 1046], "1d": [1044, 1045, 1046], "conv1dtranspos": 1044, "filter_shap": [1044, 1047, 1048, 1049, 1050, 1051], "conv2dtranspos": 1044, "conv3dtranspos": 1044, "depthwiseconv2d": 1044, "num_channel": [1044, 1051], "bernoul": [1044, 1052], "num_lay": [1044, 1053], "return_sequ": [1044, 1053], "return_st": [1044, 1053], "get_initial_st": [1044, 1053], "dens": [1044, 1054], "multiheadattent": 1044, "query_dim": [1044, 1055], "head_dim": [1044, 1055], "dropout_r": [1044, 1055], "context_dim": [1044, 1055], "with_to_q_fn": [1044, 1055], "with_to_kv_fn": [1044, 1055], "with_to_out_fn": [1044, 1055], "build_mod": [1044, 1055, 1056, 1057], "on_init": [1044, 1055, 1056, 1057], "__call__": [1044, 1055, 1056, 1057], "store_var": [1056, 1057], "arg_stateful_idx": [1056, 1057], "kwarg_stateful_idx": [1056, 1057], "fallback_to_non_compil": [1056, 1057, 1060, 1064], "with_partial_v": [1056, 1057], "initialz": [1056, 1057], "from_cal": [1056, 1057], "check_submod_ret": [1056, 1057], "get_mod_kei": [1056, 1057], "top_mod": [1056, 1057], "mod_depth": [1056, 1057], "mod_height": [1056, 1057], "mod_with_top_mod_key_chain": [1056, 1057], "save_weight": [1056, 1057], "weights_path": [1056, 1057], "show_mod_in_top_mod": [1056, 1057], "upper_depth": [1056, 1057], "lower_depth": [1056, 1057], "show_structur": [1056, 1057], "show_v_in_top_v": [1056, 1057], "sub_mod": [1056, 1057], "show_v": [1056, 1057], "track_submod_call_ord": [1056, 1057], "track_submod_ret": [1056, 1057], "v_with_top_v_key_chain": [1056, 1057], "layernorm": 1058, "normalized_shap": [1058, 1059], "elementwise_affin": [1058, 1059], "trail": [1058, 1059], "affin": [1058, 1059], "init_on_first_step": [1060, 1064], "ignore_miss": [1060, 1064], "overriden": [1060, 1064], "sgd": 1060, "stochast": [1060, 1065], "sub_modul": [1066, 1067]}, "objects": {"ivy.array": [[23, 0, 0, "-", "activations"], [25, 0, 0, "-", "array"], [28, 0, 0, "-", "conversions"], [33, 0, 0, "-", "creation"], [35, 0, 0, "-", "data_type"], [37, 0, 0, "-", "device"], [39, 0, 0, "-", "elementwise"], [41, 0, 0, "-", "general"], [43, 0, 0, "-", "gradients"], [45, 0, 0, "-", "image"], [47, 0, 0, "-", "layers"], [49, 0, 0, "-", "linear_algebra"], [51, 0, 0, "-", "losses"], [53, 0, 0, "-", "manipulation"], [55, 0, 0, "-", "norms"], [57, 0, 0, "-", "random"], [59, 0, 0, "-", "searching"], [61, 0, 0, "-", "set"], [63, 0, 0, "-", "sorting"], [65, 0, 0, "-", "statistical"], [67, 0, 0, "-", "utility"], [69, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[24, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[24, 2, 1, "", "softplus"]], "ivy.array.array": [[26, 1, 1, "", "Array"], [27, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[26, 3, 1, "", "T"], [26, 2, 1, "", "__add__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__le__"], [26, 2, 1, "", "__radd__"], [26, 2, 1, "", "adam_update"], [26, 2, 1, "", "arange"], [26, 2, 1, "", "arg_info"], [26, 2, 1, "", "arg_names"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "array"], [26, 2, 1, "", "array_equal"], [26, 2, 1, "", "arrays_equal"], [26, 2, 1, "", "as_ivy_dev"], [26, 2, 1, "", "as_ivy_dtype"], [26, 2, 1, "", "as_native_dev"], [26, 2, 1, "", "as_native_dtype"], [26, 2, 1, "", "assert_supports_inplace"], [26, 2, 1, "", "cache_fn"], [26, 2, 1, "", "clear_mem_on_dev"], [26, 2, 1, "", "clip_matrix_norm"], [26, 2, 1, "", "clip_vector_norm"], [26, 2, 1, "", "closest_valid_dtype"], [26, 2, 1, "", "container_types"], [26, 2, 1, "", "conv1d"], [26, 2, 1, "", "conv1d_transpose"], [26, 2, 1, "", "conv2d"], [26, 2, 1, "", "conv2d_transpose"], [26, 2, 1, "", "conv3d"], [26, 2, 1, "", "conv3d_transpose"], [26, 2, 1, "", "copy_array"], [26, 2, 1, "", "cumprod"], [26, 2, 1, "", "cumsum"], [26, 2, 1, "", "current_backend"], [26, 2, 1, "", "current_backend_str"], [26, 3, 1, "", "data"], [26, 2, 1, "", "default"], [26, 2, 1, "", "default_device"], [26, 2, 1, "", "default_dtype"], [26, 2, 1, "", "default_float_dtype"], [26, 2, 1, "", "default_int_dtype"], [26, 2, 1, "", "dev"], [26, 2, 1, "", "dev_clone"], [26, 2, 1, "", "dev_clone_array"], [26, 2, 1, "", "dev_clone_iter"], [26, 2, 1, "", "dev_clone_nest"], [26, 2, 1, "", "dev_dist"], [26, 2, 1, "", "dev_dist_array"], [26, 2, 1, "", "dev_dist_iter"], [26, 2, 1, "", "dev_dist_nest"], [26, 2, 1, "", "dev_unify"], [26, 2, 1, "", "dev_unify_array"], [26, 2, 1, "", "dev_unify_iter"], [26, 2, 1, "", "dev_unify_nest"], [26, 2, 1, "", "dev_util"], [26, 3, 1, "", "device"], [26, 2, 1, "", "dropout"], [26, 3, 1, "", "dtype"], [26, 2, 1, "", "dtype_bits"], [26, 2, 1, "", "einops_rearrange"], [26, 2, 1, "", "einops_reduce"], [26, 2, 1, "", "einops_repeat"], [26, 2, 1, "", "empty"], [26, 2, 1, "", "execute_with_gradients"], [26, 2, 1, "", "exists"], [26, 2, 1, "", "eye"], [26, 2, 1, "", "floormod"], [26, 2, 1, "", "fourier_encode"], [26, 2, 1, "", "full"], [26, 2, 1, "", "function_supported_dtypes"], [26, 2, 1, "", "function_unsupported_dtypes"], [26, 2, 1, "", "gather"], [26, 2, 1, "", "gelu"], [26, 2, 1, "", "get_all_arrays_in_memory"], [26, 2, 1, "", "get_all_ivy_arrays_on_dev"], [26, 2, 1, "", "get_min_base"], [26, 2, 1, "", "get_min_denominator"], [26, 2, 1, "", "get_num_dims"], [26, 2, 1, "", "get_referrers_recursive"], [26, 2, 1, "", "gpu_is_available"], [26, 2, 1, "", "gradient_descent_update"], [26, 2, 1, "", "handle_nestable"], [26, 2, 1, "", "handle_out_argument"], [26, 2, 1, "", "has_nans"], [26, 2, 1, "", "indices_where"], [26, 2, 1, "", "infer_device"], [26, 2, 1, "", "infer_dtype"], [26, 2, 1, "", "inplace_arrays_supported"], [26, 2, 1, "", "inplace_decrement"], [26, 2, 1, "", "inplace_increment"], [26, 2, 1, "", "inplace_update"], [26, 2, 1, "", "inplace_variables_supported"], [26, 2, 1, "", "inputs_to_native_arrays"], [26, 2, 1, "", "invalid_dtype"], [26, 2, 1, "", "is_array"], [26, 2, 1, "", "is_ivy_array"], [26, 2, 1, "", "is_ivy_container"], [26, 2, 1, "", "is_native_array"], [26, 3, 1, "", "is_variable"], [26, 2, 1, "", "lamb_update"], [26, 2, 1, "", "lars_update"], [26, 2, 1, "", "leaky_relu"], [26, 2, 1, "", "linear"], [26, 2, 1, "", "linspace"], [26, 2, 1, "", "logspace"], [26, 2, 1, "", "lstm_update"], [26, 3, 1, "", "mT"], [26, 2, 1, "", "match_kwargs"], [26, 2, 1, "", "matrix_power"], [26, 2, 1, "", "maximum"], [26, 2, 1, "", "minimum"], [26, 2, 1, "", "multi_head_attention"], [26, 2, 1, "", "multinomial"], [26, 2, 1, "", "multiprocessing"], [26, 3, 1, "", "ndim"], [26, 2, 1, "", "nonzero"], [26, 2, 1, "", "num_arrays_in_memory"], [26, 2, 1, "", "num_cpu_cores"], [26, 2, 1, "", "num_gpus"], [26, 2, 1, "", "num_ivy_arrays_on_dev"], [26, 2, 1, "", "one_hot"], [26, 2, 1, "", "ones"], [26, 2, 1, "", "optimizer_update"], [26, 2, 1, "", "outputs_to_ivy_arrays"], [26, 2, 1, "", "percent_used_mem_on_dev"], [26, 2, 1, "", "print_all_arrays_in_memory"], [26, 2, 1, "", "print_all_ivy_arrays_on_dev"], [26, 2, 1, "", "promote_types"], [26, 2, 1, "", "queue_timeout"], [26, 2, 1, "", "randint"], [26, 2, 1, "", "random_normal"], [26, 2, 1, "", "random_uniform"], [26, 2, 1, "", "relu"], [26, 2, 1, "", "scaled_dot_product_attention"], [26, 2, 1, "", "scatter_flat"], [26, 2, 1, "", "scatter_nd"], [26, 2, 1, "", "seed"], [26, 2, 1, "", "set_default_device"], [26, 2, 1, "", "set_default_dtype"], [26, 2, 1, "", "set_default_float_dtype"], [26, 2, 1, "", "set_default_int_dtype"], [26, 2, 1, "", "set_min_base"], [26, 2, 1, "", "set_min_denominator"], [26, 2, 1, "", "set_queue_timeout"], [26, 2, 1, "", "set_shape_array_mode"], [26, 2, 1, "", "set_split_factor"], [26, 2, 1, "", "set_tmp_dir"], [26, 2, 1, "", "set_with_grads"], [26, 3, 1, "", "shape"], [26, 2, 1, "", "shape_array_mode"], [26, 2, 1, "", "shuffle"], [26, 2, 1, "", "sigmoid"], [26, 3, 1, "", "size"], [26, 2, 1, "", "slogdet"], [26, 2, 1, "", "softmax"], [26, 2, 1, "", "split"], [26, 2, 1, "", "split_factor"], [26, 2, 1, "", "split_func_call"], [26, 2, 1, "", "stable_divide"], [26, 2, 1, "", "stable_pow"], [26, 2, 1, "", "stop_gradient"], [26, 2, 1, "", "supports_inplace"], [26, 2, 1, "", "tmp_dir"], [26, 2, 1, "", "to_device"], [26, 2, 1, "", "to_ivy_shape"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_native_arrays_and_back"], [26, 2, 1, "", "to_native_shape"], [26, 2, 1, "", "to_scalar"], [26, 2, 1, "", "total_mem_on_dev"], [26, 2, 1, "", "tpu_is_available"], [26, 2, 1, "", "try_else_none"], [26, 2, 1, "", "type_promote_arrays"], [26, 2, 1, "", "unset_default_device"], [26, 2, 1, "", "unset_default_dtype"], [26, 2, 1, "", "unset_default_float_dtype"], [26, 2, 1, "", "unset_default_int_dtype"], [26, 2, 1, "", "unset_shape_array_mode"], [26, 2, 1, "", "unset_with_grads"], [26, 2, 1, "", "unstack"], [26, 2, 1, "", "used_mem_on_dev"], [26, 2, 1, "", "valid_dtype"], [26, 2, 1, "", "value_is_nan"], [26, 2, 1, "", "variable"], [26, 2, 1, "", "variable_data"], [26, 2, 1, "", "where"], [26, 2, 1, "", "with_grads"], [26, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[27, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[366, 4, 1, "", "abs"], [371, 4, 1, "", "acos"], [375, 4, 1, "", "acosh"], [703, 4, 1, "", "adam_step"], [379, 4, 1, "", "add"], [1016, 4, 1, "", "all"], [609, 4, 1, "", "all_equal"], [1021, 4, 1, "", "any"], [972, 4, 1, "", "argsort"], [182, 4, 1, "", "asarray"], [384, 4, 1, "", "asin"], [388, 4, 1, "", "asinh"], [252, 4, 1, "", "astype"], [393, 4, 1, "", "atan"], [397, 4, 1, "", "atan2"], [401, 4, 1, "", "atanh"], [830, 4, 1, "", "binary_cross_entropy"], [405, 4, 1, "", "bitwise_and"], [409, 4, 1, "", "bitwise_invert"], [413, 4, 1, "", "bitwise_left_shift"], [417, 4, 1, "", "bitwise_or"], [421, 4, 1, "", "bitwise_right_shift"], [425, 4, 1, "", "bitwise_xor"], [257, 4, 1, "", "broadcast_arrays"], [262, 4, 1, "", "broadcast_to"], [267, 4, 1, "", "can_cast"], [429, 4, 1, "", "ceil"], [758, 4, 1, "", "cholesky"], [846, 4, 1, "", "clip"], [851, 4, 1, "", "concat"], [855, 4, 1, "", "constant_pad"], [433, 4, 1, "", "cos"], [438, 4, 1, "", "cosh"], [763, 4, 1, "", "cross"], [835, 4, 1, "", "cross_entropy"], [747, 4, 1, "", "depthwise_conv2d"], [766, 4, 1, "", "det"], [769, 4, 1, "", "diagonal"], [442, 4, 1, "", "divide"], [276, 4, 1, "", "dtype"], [772, 4, 1, "", "eigh"], [775, 4, 1, "", "eigvalsh"], [983, 4, 1, "", "einsum"], [188, 4, 1, "", "empty_like"], [447, 4, 1, "", "equal"], [451, 4, 1, "", "erf"], [455, 4, 1, "", "exp"], [859, 4, 1, "", "expand_dims"], [459, 4, 1, "", "expm1"], [281, 4, 1, "", "finfo"], [863, 4, 1, "", "flip"], [463, 4, 1, "", "floor"], [467, 4, 1, "", "floor_divide"], [196, 4, 1, "", "from_dlpack"], [202, 4, 1, "", "full_like"], [649, 4, 1, "", "gather_nd"], [471, 4, 1, "", "greater"], [475, 4, 1, "", "greater_equal"], [288, 4, 1, "", "iinfo"], [778, 4, 1, "", "inv"], [294, 4, 1, "", "is_float_dtype"], [299, 4, 1, "", "is_int_dtype"], [717, 4, 1, "", "is_variable"], [479, 4, 1, "", "isfinite"], [483, 4, 1, "", "isinf"], [487, 4, 1, "", "isnan"], [928, 4, 1, "", "layer_norm"], [491, 4, 1, "", "less"], [495, 4, 1, "", "less_equal"], [499, 4, 1, "", "log"], [503, 4, 1, "", "log10"], [507, 4, 1, "", "log1p"], [511, 4, 1, "", "log2"], [515, 4, 1, "", "logaddexp"], [519, 4, 1, "", "logical_and"], [523, 4, 1, "", "logical_not"], [527, 4, 1, "", "logical_or"], [531, 4, 1, "", "logical_xor"], [781, 4, 1, "", "matmul"], [785, 4, 1, "", "matrix_norm"], [789, 4, 1, "", "matrix_rank"], [792, 4, 1, "", "matrix_transpose"], [987, 4, 1, "", "max"], [991, 4, 1, "", "mean"], [213, 4, 1, "", "meshgrid"], [995, 4, 1, "", "min"], [537, 4, 1, "", "multiply"], [218, 4, 1, "", "native_array"], [542, 4, 1, "", "negative"], [546, 4, 1, "", "not_equal"], [226, 4, 1, "", "ones_like"], [795, 4, 1, "", "outer"], [867, 4, 1, "", "permute_dims"], [798, 4, 1, "", "pinv"], [550, 4, 1, "", "positive"], [554, 4, 1, "", "pow"], [999, 4, 1, "", "prod"], [801, 4, 1, "", "qr"], [558, 4, 1, "", "remainder"], [871, 4, 1, "", "repeat"], [875, 4, 1, "", "reshape"], [305, 4, 1, "", "result_type"], [879, 4, 1, "", "roll"], [562, 4, 1, "", "round"], [566, 4, 1, "", "sign"], [571, 4, 1, "", "sin"], [576, 4, 1, "", "sinh"], [169, 4, 1, "", "softplus"], [805, 4, 1, "", "solve"], [977, 4, 1, "", "sort"], [840, 4, 1, "", "sparse_cross_entropy"], [581, 4, 1, "", "sqrt"], [585, 4, 1, "", "square"], [885, 4, 1, "", "squeeze"], [889, 4, 1, "", "stack"], [1003, 4, 1, "", "std"], [590, 4, 1, "", "subtract"], [1007, 4, 1, "", "sum"], [808, 4, 1, "", "svd"], [811, 4, 1, "", "svdvals"], [893, 4, 1, "", "swapaxes"], [595, 4, 1, "", "tan"], [600, 4, 1, "", "tanh"], [814, 4, 1, "", "tensordot"], [897, 4, 1, "", "tile"], [693, 4, 1, "", "to_numpy"], [817, 4, 1, "", "trace"], [232, 4, 1, "", "tril"], [237, 4, 1, "", "triu"], [604, 4, 1, "", "trunc"], [952, 4, 1, "", "unique_all"], [957, 4, 1, "", "unique_counts"], [962, 4, 1, "", "unique_inverse"], [967, 4, 1, "", "unique_values"], [1011, 4, 1, "", "var"], [820, 4, 1, "", "vecdot"], [823, 4, 1, "", "vector_norm"], [826, 4, 1, "", "vector_to_skew_symmetric_matrix"], [901, 4, 1, "", "zero_pad"], [245, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[29, 4, 1, "", "args_to_ivy"], [30, 4, 1, "", "args_to_native"], [31, 4, 1, "", "to_ivy"], [32, 4, 1, "", "to_native"]], "ivy.array.creation": [[34, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[34, 2, 1, "", "asarray"], [34, 2, 1, "", "empty_like"], [34, 2, 1, "", "from_dlpack"], [34, 2, 1, "", "full_like"], [34, 2, 1, "", "meshgrid"], [34, 2, 1, "", "native_array"], [34, 2, 1, "", "ones_like"], [34, 2, 1, "", "tril"], [34, 2, 1, "", "triu"], [34, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[36, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[36, 2, 1, "", "astype"], [36, 2, 1, "", "broadcast_arrays"], [36, 2, 1, "", "broadcast_to"], [36, 2, 1, "", "can_cast"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "finfo"], [36, 2, 1, "", "iinfo"], [36, 2, 1, "", "is_float_dtype"], [36, 2, 1, "", "is_int_dtype"], [36, 2, 1, "", "result_type"]], "ivy.array.device": [[38, 1, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[40, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[40, 2, 1, "", "abs"], [40, 2, 1, "", "acos"], [40, 2, 1, "", "acosh"], [40, 2, 1, "", "add"], [40, 2, 1, "", "asin"], [40, 2, 1, "", "asinh"], [40, 2, 1, "", "atan"], [40, 2, 1, "", "atan2"], [40, 2, 1, "", "atanh"], [40, 2, 1, "", "bitwise_and"], [40, 2, 1, "", "bitwise_invert"], [40, 2, 1, "", "bitwise_left_shift"], [40, 2, 1, "", "bitwise_or"], [40, 2, 1, "", "bitwise_right_shift"], [40, 2, 1, "", "bitwise_xor"], [40, 2, 1, "", "ceil"], [40, 2, 1, "", "cos"], [40, 2, 1, "", "cosh"], [40, 2, 1, "", "divide"], [40, 2, 1, "", "equal"], [40, 2, 1, "", "erf"], [40, 2, 1, "", "exp"], [40, 2, 1, "", "expm1"], [40, 2, 1, "", "floor"], [40, 2, 1, "", "floor_divide"], [40, 2, 1, "", "greater"], [40, 2, 1, "", "greater_equal"], [40, 2, 1, "", "isfinite"], [40, 2, 1, "", "isinf"], [40, 2, 1, "", "isnan"], [40, 2, 1, "", "less"], [40, 2, 1, "", "less_equal"], [40, 2, 1, "", "log"], [40, 2, 1, "", "log10"], [40, 2, 1, "", "log1p"], [40, 2, 1, "", "log2"], [40, 2, 1, "", "logaddexp"], [40, 2, 1, "", "logical_and"], [40, 2, 1, "", "logical_not"], [40, 2, 1, "", "logical_or"], [40, 2, 1, "", "logical_xor"], [40, 2, 1, "", "multiply"], [40, 2, 1, "", "negative"], [40, 2, 1, "", "not_equal"], [40, 2, 1, "", "positive"], [40, 2, 1, "", "pow"], [40, 2, 1, "", "remainder"], [40, 2, 1, "", "round"], [40, 2, 1, "", "sign"], [40, 2, 1, "", "sin"], [40, 2, 1, "", "sinh"], [40, 2, 1, "", "sqrt"], [40, 2, 1, "", "square"], [40, 2, 1, "", "subtract"], [40, 2, 1, "", "tan"], [40, 2, 1, "", "tanh"], [40, 2, 1, "", "trunc"]], "ivy.array.general": [[42, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[42, 2, 1, "", "all_equal"], [42, 2, 1, "", "gather_nd"], [42, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[44, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[44, 2, 1, "", "adam_step"], [44, 2, 1, "", "is_variable"]], "ivy.array.image": [[46, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[48, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[48, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[50, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[50, 2, 1, "", "cholesky"], [50, 2, 1, "", "cross"], [50, 2, 1, "", "det"], [50, 2, 1, "", "diagonal"], [50, 2, 1, "", "eigh"], [50, 2, 1, "", "eigvalsh"], [50, 2, 1, "", "inv"], [50, 2, 1, "", "matmul"], [50, 2, 1, "", "matrix_norm"], [50, 2, 1, "", "matrix_rank"], [50, 2, 1, "", "matrix_transpose"], [50, 2, 1, "", "outer"], [50, 2, 1, "", "pinv"], [50, 2, 1, "", "qr"], [50, 2, 1, "", "solve"], [50, 2, 1, "", "svd"], [50, 2, 1, "", "svdvals"], [50, 2, 1, "", "tensordot"], [50, 2, 1, "", "trace"], [50, 2, 1, "", "vecdot"], [50, 2, 1, "", "vector_norm"], [50, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[52, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[52, 2, 1, "", "binary_cross_entropy"], [52, 2, 1, "", "cross_entropy"], [52, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[54, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[54, 2, 1, "", "clip"], [54, 2, 1, "", "concat"], [54, 2, 1, "", "constant_pad"], [54, 2, 1, "", "expand_dims"], [54, 2, 1, "", "flip"], [54, 2, 1, "", "permute_dims"], [54, 2, 1, "", "repeat"], [54, 2, 1, "", "reshape"], [54, 2, 1, "", "roll"], [54, 2, 1, "", "squeeze"], [54, 2, 1, "", "stack"], [54, 2, 1, "", "swapaxes"], [54, 2, 1, "", "tile"], [54, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[56, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[56, 2, 1, "", "layer_norm"]], "ivy.array.random": [[58, 1, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[60, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[62, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[62, 2, 1, "", "unique_all"], [62, 2, 1, "", "unique_counts"], [62, 2, 1, "", "unique_inverse"], [62, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[64, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[64, 2, 1, "", "argsort"], [64, 2, 1, "", "sort"]], "ivy.array.statistical": [[66, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[66, 2, 1, "", "einsum"], [66, 2, 1, "", "max"], [66, 2, 1, "", "mean"], [66, 2, 1, "", "min"], [66, 2, 1, "", "prod"], [66, 2, 1, "", "std"], [66, 2, 1, "", "sum"], [66, 2, 1, "", "var"]], "ivy.array.utility": [[68, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[68, 2, 1, "", "all"], [68, 2, 1, "", "any"]], "ivy.array.wrapping": [[70, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [152, 0, 0, "-", "func_wrapper"], [1028, 0, 0, "-", "inspection"], [1032, 0, 0, "-", "stateful"], [1069, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [1, 4, 1, "", "choose_random_backend"], [2, 4, 1, "", "clear_backend_stack"], [3, 4, 1, "", "current_backend"], [4, 4, 1, "", "get_backend"], [5, 4, 1, "", "set_backend"], [6, 4, 1, "", "try_import_ivy_jax"], [7, 4, 1, "", "try_import_ivy_mxnet"], [8, 4, 1, "", "try_import_ivy_numpy"], [9, 4, 1, "", "try_import_ivy_tf"], [10, 4, 1, "", "try_import_ivy_torch"], [11, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[72, 0, 0, "-", "activations"], [74, 0, 0, "-", "base"], [76, 0, 0, "-", "container"], [79, 0, 0, "-", "creation"], [81, 0, 0, "-", "data_type"], [83, 0, 0, "-", "device"], [85, 0, 0, "-", "elementwise"], [87, 0, 0, "-", "general"], [89, 0, 0, "-", "gradients"], [91, 0, 0, "-", "image"], [93, 0, 0, "-", "layers"], [95, 0, 0, "-", "linear_algebra"], [97, 0, 0, "-", "losses"], [99, 0, 0, "-", "manipulation"], [101, 0, 0, "-", "norms"], [103, 0, 0, "-", "random"], [105, 0, 0, "-", "searching"], [107, 0, 0, "-", "set"], [109, 0, 0, "-", "sorting"], [111, 0, 0, "-", "statistical"], [113, 0, 0, "-", "utility"], [115, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[73, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[73, 2, 1, "", "softplus"], [73, 2, 1, "", "static_softplus"]], "ivy.container.base": [[75, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[75, 2, 1, "", "__getitem__"], [75, 2, 1, "", "__init__"], [75, 2, 1, "", "__setitem__"], [75, 2, 1, "", "all_false"], [75, 2, 1, "", "all_key_chains"], [75, 2, 1, "", "all_true"], [75, 2, 1, "", "arrays_as_lists"], [75, 2, 1, "", "as_arrays"], [75, 2, 1, "", "as_bools"], [75, 2, 1, "", "as_ones"], [75, 2, 1, "", "as_random_uniform"], [75, 2, 1, "", "as_variables"], [75, 2, 1, "", "as_zeros"], [75, 2, 1, "", "assert_contains_sub_container"], [75, 2, 1, "", "assert_contains_sub_structure"], [75, 2, 1, "", "assert_identical"], [75, 2, 1, "", "assert_identical_structure"], [75, 2, 1, "", "at_key_chain"], [75, 2, 1, "", "at_key_chains"], [75, 2, 1, "", "at_keys"], [75, 2, 1, "", "clip"], [75, 2, 1, "", "combine"], [75, 2, 1, "", "common_key_chains"], [75, 3, 1, "", "config"], [75, 2, 1, "", "contains_sub_container"], [75, 2, 1, "", "contains_sub_structure"], [75, 2, 1, "", "copy"], [75, 2, 1, "", "create_if_absent"], [75, 2, 1, "", "cutoff_at_depth"], [75, 2, 1, "", "cutoff_at_height"], [75, 2, 1, "", "deep_copy"], [75, 3, 1, "", "dev"], [75, 2, 1, "", "dev_clone"], [75, 2, 1, "", "dev_dist"], [75, 3, 1, "", "dev_str"], [75, 2, 1, "", "diff"], [75, 2, 1, "", "dtype"], [75, 2, 1, "", "find_sub_container"], [75, 2, 1, "", "find_sub_structure"], [75, 2, 1, "", "flatten_key_chain"], [75, 2, 1, "", "flatten_key_chains"], [75, 2, 1, "", "format_key_chains"], [75, 2, 1, "", "from_disk_as_hdf5"], [75, 2, 1, "", "from_disk_as_json"], [75, 2, 1, "", "from_disk_as_pickled"], [75, 2, 1, "", "from_flat_list"], [75, 2, 1, "", "from_numpy"], [75, 2, 1, "", "h5_file_size"], [75, 2, 1, "", "handle_inplace"], [75, 2, 1, "", "has_key"], [75, 2, 1, "", "has_key_chain"], [75, 2, 1, "", "has_nans"], [75, 2, 1, "", "identical"], [75, 2, 1, "", "identical_array_shapes"], [75, 2, 1, "", "identical_configs"], [75, 2, 1, "", "identical_structure"], [75, 2, 1, "", "if_exists"], [75, 2, 1, "", "inplace_update"], [75, 3, 1, "", "ivy"], [75, 2, 1, "", "key_chains_containing"], [75, 2, 1, "", "list_join"], [75, 2, 1, "", "list_stack"], [75, 2, 1, "", "map"], [75, 2, 1, "", "map_conts"], [75, 2, 1, "", "matrix_norm"], [75, 3, 1, "", "max_depth"], [75, 2, 1, "", "maximum"], [75, 2, 1, "", "minimum"], [75, 2, 1, "", "multi_map"], [75, 2, 1, "", "multi_map_in_static_method"], [75, 2, 1, "", "num_arrays"], [75, 2, 1, "", "overwrite_at_key_chain"], [75, 2, 1, "", "overwrite_at_key_chains"], [75, 2, 1, "", "prune_empty"], [75, 2, 1, "", "prune_key_chain"], [75, 2, 1, "", "prune_key_chains"], [75, 2, 1, "", "prune_key_from_key_chains"], [75, 2, 1, "", "prune_keys"], [75, 2, 1, "", "prune_keys_from_key_chains"], [75, 2, 1, "", "reduce"], [75, 2, 1, "", "remove_key_length_limit"], [75, 2, 1, "", "remove_print_limit"], [75, 2, 1, "", "reshape_like"], [75, 2, 1, "", "restructure"], [75, 2, 1, "", "restructure_key_chains"], [75, 2, 1, "", "set_at_key_chain"], [75, 2, 1, "", "set_at_key_chains"], [75, 2, 1, "", "set_at_keys"], [75, 2, 1, "", "set_framework"], [75, 2, 1, "", "set_ivy_backend"], [75, 3, 1, "", "shape"], [75, 3, 1, "", "shapes"], [75, 2, 1, "", "show"], [75, 2, 1, "", "show_sub_container"], [75, 2, 1, "", "shuffle"], [75, 2, 1, "", "shuffle_h5_file"], [75, 2, 1, "", "size_ordered_arrays"], [75, 2, 1, "", "slice_keys"], [75, 2, 1, "", "slice_via_key"], [75, 2, 1, "", "sort_by_key"], [75, 2, 1, "", "split"], [75, 2, 1, "", "stop_gradients"], [75, 2, 1, "", "structural_diff"], [75, 2, 1, "", "to_device"], [75, 2, 1, "", "to_dict"], [75, 2, 1, "", "to_disk_as_hdf5"], [75, 2, 1, "", "to_disk_as_json"], [75, 2, 1, "", "to_disk_as_pickled"], [75, 2, 1, "", "to_flat_list"], [75, 2, 1, "", "to_iterator"], [75, 2, 1, "", "to_iterator_keys"], [75, 2, 1, "", "to_iterator_values"], [75, 2, 1, "", "to_ivy"], [75, 2, 1, "", "to_jsonable"], [75, 2, 1, "", "to_list"], [75, 2, 1, "", "to_multi_dev"], [75, 2, 1, "", "to_native"], [75, 2, 1, "", "to_numpy"], [75, 2, 1, "", "to_raw"], [75, 2, 1, "", "trim_key"], [75, 2, 1, "", "try_kc"], [75, 2, 1, "", "unify"], [75, 2, 1, "", "unstack"], [75, 2, 1, "", "update_config"], [75, 2, 1, "", "vector_norm"], [75, 2, 1, "", "with_default_key_color"], [75, 2, 1, "", "with_entries_as_lists"], [75, 2, 1, "", "with_ivy_backend"], [75, 2, 1, "", "with_key_length_limit"], [75, 2, 1, "", "with_print_indent"], [75, 2, 1, "", "with_print_limit"], [75, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[77, 1, 1, "", "Container"], [78, 1, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[77, 2, 1, "", "__add__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__radd__"], [77, 2, 1, "", "arange"], [77, 2, 1, "", "arg_info"], [77, 2, 1, "", "arg_names"], [77, 2, 1, "", "argmax"], [77, 2, 1, "", "argmin"], [77, 2, 1, "", "array"], [77, 2, 1, "", "array_equal"], [77, 2, 1, "", "arrays_equal"], [77, 2, 1, "", "as_ivy_dev"], [77, 2, 1, "", "as_ivy_dtype"], [77, 2, 1, "", "as_native_dev"], [77, 2, 1, "", "as_native_dtype"], [77, 2, 1, "", "assert_supports_inplace"], [77, 2, 1, "", "cache_fn"], [77, 2, 1, "", "clear_mem_on_dev"], [77, 2, 1, "", "clip_matrix_norm"], [77, 2, 1, "", "closest_valid_dtype"], [77, 2, 1, "", "container_types"], [77, 2, 1, "", "conv1d"], [77, 2, 1, "", "conv1d_transpose"], [77, 2, 1, "", "conv2d"], [77, 2, 1, "", "conv2d_transpose"], [77, 2, 1, "", "conv3d"], [77, 2, 1, "", "conv3d_transpose"], [77, 2, 1, "", "copy_array"], [77, 2, 1, "", "cross"], [77, 2, 1, "", "cumprod"], [77, 2, 1, "", "cumsum"], [77, 2, 1, "", "current_backend"], [77, 2, 1, "", "current_backend_str"], [77, 2, 1, "", "default"], [77, 2, 1, "", "default_device"], [77, 2, 1, "", "default_dtype"], [77, 2, 1, "", "default_float_dtype"], [77, 2, 1, "", "default_int_dtype"], [77, 2, 1, "", "det"], [77, 2, 1, "", "dev_clone_array"], [77, 2, 1, "", "dev_clone_iter"], [77, 2, 1, "", "dev_clone_nest"], [77, 2, 1, "", "dev_dist_array"], [77, 2, 1, "", "dev_dist_iter"], [77, 2, 1, "", "dev_dist_nest"], [77, 2, 1, "", "dev_unify"], [77, 2, 1, "", "dev_unify_array"], [77, 2, 1, "", "dev_unify_iter"], [77, 2, 1, "", "dev_unify_nest"], [77, 2, 1, "", "dev_util"], [77, 2, 1, "", "diagonal"], [77, 2, 1, "", "dropout"], [77, 2, 1, "", "dtype_bits"], [77, 2, 1, "", "eigh"], [77, 2, 1, "", "eigvalsh"], [77, 2, 1, "", "empty"], [77, 2, 1, "", "execute_with_gradients"], [77, 2, 1, "", "exists"], [77, 2, 1, "", "eye"], [77, 2, 1, "", "floormod"], [77, 2, 1, "", "fourier_encode"], [77, 2, 1, "", "full"], [77, 2, 1, "", "function_supported_dtypes"], [77, 2, 1, "", "function_unsupported_dtypes"], [77, 2, 1, "", "gelu"], [77, 2, 1, "", "get_all_arrays_in_memory"], [77, 2, 1, "", "get_all_ivy_arrays_on_dev"], [77, 2, 1, "", "get_min_base"], [77, 2, 1, "", "get_min_denominator"], [77, 2, 1, "", "get_num_dims"], [77, 2, 1, "", "get_referrers_recursive"], [77, 2, 1, "", "gpu_is_available"], [77, 2, 1, "", "handle_nestable"], [77, 2, 1, "", "handle_out_argument"], [77, 2, 1, "", "indices_where"], [77, 2, 1, "", "infer_device"], [77, 2, 1, "", "infer_dtype"], [77, 2, 1, "", "inplace_arrays_supported"], [77, 2, 1, "", "inplace_decrement"], [77, 2, 1, "", "inplace_increment"], [77, 2, 1, "", "inplace_variables_supported"], [77, 2, 1, "", "inputs_to_native_arrays"], [77, 2, 1, "", "inv"], [77, 2, 1, "", "invalid_dtype"], [77, 2, 1, "", "is_ivy_container"], [77, 2, 1, "", "leaky_relu"], [77, 2, 1, "", "linear"], [77, 2, 1, "", "linspace"], [77, 2, 1, "", "logspace"], [77, 2, 1, "", "lstm_update"], [77, 2, 1, "", "match_kwargs"], [77, 2, 1, "", "matrix_power"], [77, 2, 1, "", "matrix_rank"], [77, 2, 1, "", "matrix_transpose"], [77, 2, 1, "", "multi_head_attention"], [77, 2, 1, "", "multinomial"], [77, 2, 1, "", "multiprocessing"], [77, 2, 1, "", "nonzero"], [77, 2, 1, "", "num_arrays_in_memory"], [77, 2, 1, "", "num_cpu_cores"], [77, 2, 1, "", "num_gpus"], [77, 2, 1, "", "num_ivy_arrays_on_dev"], [77, 2, 1, "", "one_hot"], [77, 2, 1, "", "ones"], [77, 2, 1, "", "outer"], [77, 2, 1, "", "outputs_to_ivy_arrays"], [77, 2, 1, "", "percent_used_mem_on_dev"], [77, 2, 1, "", "pinv"], [77, 2, 1, "", "print_all_arrays_in_memory"], [77, 2, 1, "", "print_all_ivy_arrays_on_dev"], [77, 2, 1, "", "promote_types"], [77, 2, 1, "", "qr"], [77, 2, 1, "", "queue_timeout"], [77, 2, 1, "", "randint"], [77, 2, 1, "", "random_normal"], [77, 2, 1, "", "relu"], [77, 2, 1, "", "scaled_dot_product_attention"], [77, 2, 1, "", "scatter_flat"], [77, 2, 1, "", "scatter_nd"], [77, 2, 1, "", "seed"], [77, 2, 1, "", "set_default_device"], [77, 2, 1, "", "set_default_dtype"], [77, 2, 1, "", "set_default_float_dtype"], [77, 2, 1, "", "set_default_int_dtype"], [77, 2, 1, "", "set_min_base"], [77, 2, 1, "", "set_min_denominator"], [77, 2, 1, "", "set_queue_timeout"], [77, 2, 1, "", "set_shape_array_mode"], [77, 2, 1, "", "set_split_factor"], [77, 2, 1, "", "set_tmp_dir"], [77, 2, 1, "", "set_with_grads"], [77, 2, 1, "", "shape_array_mode"], [77, 2, 1, "", "sigmoid"], [77, 2, 1, "", "slogdet"], [77, 2, 1, "", "softmax"], [77, 2, 1, "", "solve"], [77, 2, 1, "", "split_factor"], [77, 2, 1, "", "split_func_call"], [77, 2, 1, "", "stable_divide"], [77, 2, 1, "", "stable_pow"], [77, 2, 1, "", "static_acos"], [77, 2, 1, "", "static_acosh"], [77, 2, 1, "", "static_arg_info"], [77, 2, 1, "", "static_arg_names"], [77, 2, 1, "", "static_argmax"], [77, 2, 1, "", "static_argmin"], [77, 2, 1, "", "static_array"], [77, 2, 1, "", "static_array_equal"], [77, 2, 1, "", "static_arrays_equal"], [77, 2, 1, "", "static_as_ivy_dev"], [77, 2, 1, "", "static_as_ivy_dtype"], [77, 2, 1, "", "static_as_native_dev"], [77, 2, 1, "", "static_as_native_dtype"], [77, 2, 1, "", "static_asin"], [77, 2, 1, "", "static_assert_supports_inplace"], [77, 2, 1, "", "static_atan"], [77, 2, 1, "", "static_atan2"], [77, 2, 1, "", "static_atanh"], [77, 2, 1, "", "static_bitwise_and"], [77, 2, 1, "", "static_bitwise_invert"], [77, 2, 1, "", "static_bitwise_left_shift"], [77, 2, 1, "", "static_bitwise_or"], [77, 2, 1, "", "static_bitwise_right_shift"], [77, 2, 1, "", "static_bitwise_xor"], [77, 2, 1, "", "static_cache_fn"], [77, 2, 1, "", "static_ceil"], [77, 2, 1, "", "static_clear_mem_on_dev"], [77, 2, 1, "", "static_clip_matrix_norm"], [77, 2, 1, "", "static_clip_vector_norm"], [77, 2, 1, "", "static_closest_valid_dtype"], [77, 2, 1, "", "static_concat"], [77, 2, 1, "", "static_constant_pad"], [77, 2, 1, "", "static_container_types"], [77, 2, 1, "", "static_conv1d"], [77, 2, 1, "", "static_conv1d_transpose"], [77, 2, 1, "", "static_conv2d"], [77, 2, 1, "", "static_conv2d_transpose"], [77, 2, 1, "", "static_conv3d"], [77, 2, 1, "", "static_conv3d_transpose"], [77, 2, 1, "", "static_copy_array"], [77, 2, 1, "", "static_cosh"], [77, 2, 1, "", "static_cross"], [77, 2, 1, "", "static_cumprod"], [77, 2, 1, "", "static_cumsum"], [77, 2, 1, "", "static_current_backend"], [77, 2, 1, "", "static_current_backend_str"], [77, 2, 1, "", "static_default"], [77, 2, 1, "", "static_default_device"], [77, 2, 1, "", "static_default_dtype"], [77, 2, 1, "", "static_default_float_dtype"], [77, 2, 1, "", "static_default_int_dtype"], [77, 2, 1, "", "static_det"], [77, 2, 1, "", "static_dev"], [77, 2, 1, "", "static_dev_clone"], [77, 2, 1, "", "static_dev_clone_array"], [77, 2, 1, "", "static_dev_clone_iter"], [77, 2, 1, "", "static_dev_clone_nest"], [77, 2, 1, "", "static_dev_dist"], [77, 2, 1, "", "static_dev_dist_array"], [77, 2, 1, "", "static_dev_dist_iter"], [77, 2, 1, "", "static_dev_dist_nest"], [77, 2, 1, "", "static_dev_unify"], [77, 2, 1, "", "static_dev_unify_array"], [77, 2, 1, "", "static_dev_unify_iter"], [77, 2, 1, "", "static_dev_unify_nest"], [77, 2, 1, "", "static_dev_util"], [77, 2, 1, "", "static_diagonal"], [77, 2, 1, "", "static_dropout"], [77, 2, 1, "", "static_dtype"], [77, 2, 1, "", "static_dtype_bits"], [77, 2, 1, "", "static_eigh"], [77, 2, 1, "", "static_eigvalsh"], [77, 2, 1, "", "static_einsum"], [77, 2, 1, "", "static_empty"], [77, 2, 1, "", "static_equal"], [77, 2, 1, "", "static_erf"], [77, 2, 1, "", "static_execute_with_gradients"], [77, 2, 1, "", "static_exists"], [77, 2, 1, "", "static_exp"], [77, 2, 1, "", "static_expand_dims"], [77, 2, 1, "", "static_expm1"], [77, 2, 1, "", "static_flip"], [77, 2, 1, "", "static_floor"], [77, 2, 1, "", "static_floor_divide"], [77, 2, 1, "", "static_floormod"], [77, 2, 1, "", "static_fourier_encode"], [77, 2, 1, "", "static_full"], [77, 2, 1, "", "static_function_supported_dtypes"], [77, 2, 1, "", "static_function_unsupported_dtypes"], [77, 2, 1, "", "static_gelu"], [77, 2, 1, "", "static_get_all_arrays_in_memory"], [77, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [77, 2, 1, "", "static_get_min_base"], [77, 2, 1, "", "static_get_min_denominator"], [77, 2, 1, "", "static_get_num_dims"], [77, 2, 1, "", "static_get_referrers_recursive"], [77, 2, 1, "", "static_gpu_is_available"], [77, 2, 1, "", "static_greater"], [77, 2, 1, "", "static_greater_equal"], [77, 2, 1, "", "static_handle_nestable"], [77, 2, 1, "", "static_handle_out_argument"], [77, 2, 1, "", "static_has_nans"], [77, 2, 1, "", "static_indices_where"], [77, 2, 1, "", "static_infer_device"], [77, 2, 1, "", "static_infer_dtype"], [77, 2, 1, "", "static_inplace_arrays_supported"], [77, 2, 1, "", "static_inplace_decrement"], [77, 2, 1, "", "static_inplace_increment"], [77, 2, 1, "", "static_inplace_update"], [77, 2, 1, "", "static_inplace_variables_supported"], [77, 2, 1, "", "static_inputs_to_native_arrays"], [77, 2, 1, "", "static_inv"], [77, 2, 1, "", "static_invalid_dtype"], [77, 2, 1, "", "static_is_array"], [77, 2, 1, "", "static_is_ivy_array"], [77, 2, 1, "", "static_is_ivy_container"], [77, 2, 1, "", "static_is_native_array"], [77, 2, 1, "", "static_isfinite"], [77, 2, 1, "", "static_isinf"], [77, 2, 1, "", "static_isnan"], [77, 2, 1, "", "static_leaky_relu"], [77, 2, 1, "", "static_less"], [77, 2, 1, "", "static_less_equal"], [77, 2, 1, "", "static_linear"], [77, 2, 1, "", "static_log"], [77, 2, 1, "", "static_log10"], [77, 2, 1, "", "static_log1p"], [77, 2, 1, "", "static_log2"], [77, 2, 1, "", "static_logaddexp"], [77, 2, 1, "", "static_logical_and"], [77, 2, 1, "", "static_logical_not"], [77, 2, 1, "", "static_logical_or"], [77, 2, 1, "", "static_logical_xor"], [77, 2, 1, "", "static_lstm_update"], [77, 2, 1, "", "static_match_kwargs"], [77, 2, 1, "", "static_matmul"], [77, 2, 1, "", "static_matrix_norm"], [77, 2, 1, "", "static_matrix_power"], [77, 2, 1, "", "static_matrix_rank"], [77, 2, 1, "", "static_matrix_transpose"], [77, 2, 1, "", "static_max"], [77, 2, 1, "", "static_maximum"], [77, 2, 1, "", "static_mean"], [77, 2, 1, "", "static_min"], [77, 2, 1, "", "static_minimum"], [77, 2, 1, "", "static_multi_head_attention"], [77, 2, 1, "", "static_multinomial"], [77, 2, 1, "", "static_multiprocessing"], [77, 2, 1, "", "static_negative"], [77, 2, 1, "", "static_nonzero"], [77, 2, 1, "", "static_not_equal"], [77, 2, 1, "", "static_num_arrays_in_memory"], [77, 2, 1, "", "static_num_cpu_cores"], [77, 2, 1, "", "static_num_gpus"], [77, 2, 1, "", "static_num_ivy_arrays_on_dev"], [77, 2, 1, "", "static_one_hot"], [77, 2, 1, "", "static_outer"], [77, 2, 1, "", "static_outputs_to_ivy_arrays"], [77, 2, 1, "", "static_percent_used_mem_on_dev"], [77, 2, 1, "", "static_permute_dims"], [77, 2, 1, "", "static_pinv"], [77, 2, 1, "", "static_positive"], [77, 2, 1, "", "static_pow"], [77, 2, 1, "", "static_print_all_arrays_in_memory"], [77, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [77, 2, 1, "", "static_prod"], [77, 2, 1, "", "static_promote_types"], [77, 2, 1, "", "static_qr"], [77, 2, 1, "", "static_queue_timeout"], [77, 2, 1, "", "static_random_normal"], [77, 2, 1, "", "static_relu"], [77, 2, 1, "", "static_remainder"], [77, 2, 1, "", "static_repeat"], [77, 2, 1, "", "static_reshape"], [77, 2, 1, "", "static_round"], [77, 2, 1, "", "static_scaled_dot_product_attention"], [77, 2, 1, "", "static_scatter_flat"], [77, 2, 1, "", "static_scatter_nd"], [77, 2, 1, "", "static_seed"], [77, 2, 1, "", "static_set_default_device"], [77, 2, 1, "", "static_set_default_dtype"], [77, 2, 1, "", "static_set_default_float_dtype"], [77, 2, 1, "", "static_set_default_int_dtype"], [77, 2, 1, "", "static_set_min_base"], [77, 2, 1, "", "static_set_min_denominator"], [77, 2, 1, "", "static_set_queue_timeout"], [77, 2, 1, "", "static_set_shape_array_mode"], [77, 2, 1, "", "static_set_split_factor"], [77, 2, 1, "", "static_set_tmp_dir"], [77, 2, 1, "", "static_set_with_grads"], [77, 2, 1, "", "static_shape"], [77, 2, 1, "", "static_shape_array_mode"], [77, 2, 1, "", "static_shuffle"], [77, 2, 1, "", "static_sigmoid"], [77, 2, 1, "", "static_slogdet"], [77, 2, 1, "", "static_softmax"], [77, 2, 1, "", "static_solve"], [77, 2, 1, "", "static_split"], [77, 2, 1, "", "static_split_factor"], [77, 2, 1, "", "static_split_func_call"], [77, 2, 1, "", "static_sqrt"], [77, 2, 1, "", "static_square"], [77, 2, 1, "", "static_squeeze"], [77, 2, 1, "", "static_stable_divide"], [77, 2, 1, "", "static_stable_pow"], [77, 2, 1, "", "static_stack"], [77, 2, 1, "", "static_std"], [77, 2, 1, "", "static_stop_gradient"], [77, 2, 1, "", "static_sum"], [77, 2, 1, "", "static_supports_inplace"], [77, 2, 1, "", "static_svd"], [77, 2, 1, "", "static_svdvals"], [77, 2, 1, "", "static_swapaxes"], [77, 2, 1, "", "static_tensordot"], [77, 2, 1, "", "static_tile"], [77, 2, 1, "", "static_tmp_dir"], [77, 2, 1, "", "static_to_device"], [77, 2, 1, "", "static_to_ivy_shape"], [77, 2, 1, "", "static_to_list"], [77, 2, 1, "", "static_to_native_arrays_and_back"], [77, 2, 1, "", "static_to_native_shape"], [77, 2, 1, "", "static_to_scalar"], [77, 2, 1, "", "static_total_mem_on_dev"], [77, 2, 1, "", "static_tpu_is_available"], [77, 2, 1, "", "static_trace"], [77, 2, 1, "", "static_trunc"], [77, 2, 1, "", "static_try_else_none"], [77, 2, 1, "", "static_type_promote_arrays"], [77, 2, 1, "", "static_unset_default_device"], [77, 2, 1, "", "static_unset_default_dtype"], [77, 2, 1, "", "static_unset_default_float_dtype"], [77, 2, 1, "", "static_unset_default_int_dtype"], [77, 2, 1, "", "static_unset_shape_array_mode"], [77, 2, 1, "", "static_unset_with_grads"], [77, 2, 1, "", "static_unstack"], [77, 2, 1, "", "static_used_mem_on_dev"], [77, 2, 1, "", "static_valid_dtype"], [77, 2, 1, "", "static_value_is_nan"], [77, 2, 1, "", "static_var"], [77, 2, 1, "", "static_variable"], [77, 2, 1, "", "static_variable_data"], [77, 2, 1, "", "static_vecdot"], [77, 2, 1, "", "static_vector_norm"], [77, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [77, 2, 1, "", "static_where"], [77, 2, 1, "", "static_with_grads"], [77, 2, 1, "", "static_zero_pad"], [77, 2, 1, "", "stop_gradient"], [77, 2, 1, "", "supports_inplace"], [77, 2, 1, "", "svd"], [77, 2, 1, "", "svdvals"], [77, 2, 1, "", "tensordot"], [77, 2, 1, "", "tmp_dir"], [77, 2, 1, "", "to_ivy_shape"], [77, 2, 1, "", "to_native_arrays_and_back"], [77, 2, 1, "", "to_native_shape"], [77, 2, 1, "", "to_scalar"], [77, 2, 1, "", "total_mem_on_dev"], [77, 2, 1, "", "tpu_is_available"], [77, 2, 1, "", "trace"], [77, 2, 1, "", "try_else_none"], [77, 2, 1, "", "type_promote_arrays"], [77, 2, 1, "", "unset_default_device"], [77, 2, 1, "", "unset_default_dtype"], [77, 2, 1, "", "unset_default_float_dtype"], [77, 2, 1, "", "unset_default_int_dtype"], [77, 2, 1, "", "unset_shape_array_mode"], [77, 2, 1, "", "unset_with_grads"], [77, 2, 1, "", "used_mem_on_dev"], [77, 2, 1, "", "valid_dtype"], [77, 2, 1, "", "value_is_nan"], [77, 2, 1, "", "variable"], [77, 2, 1, "", "variable_data"], [77, 2, 1, "", "vecdot"], [77, 2, 1, "", "vector_to_skew_symmetric_matrix"], [77, 2, 1, "", "where"], [77, 2, 1, "", "with_grads"], [77, 2, 1, "", "zeros"]], "ivy.container.container.MultiDevContainer": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "at_dev"], [78, 2, 1, "", "at_devs"]], "ivy.container.container_methods": [[367, 4, 1, "", "abs"], [372, 4, 1, "", "acos"], [376, 4, 1, "", "acosh"], [704, 4, 1, "", "adam_step"], [708, 4, 1, "", "adam_update"], [380, 4, 1, "", "add"], [1017, 4, 1, "", "all"], [610, 4, 1, "", "all_equal"], [1022, 4, 1, "", "any"], [973, 4, 1, "", "argsort"], [183, 4, 1, "", "asarray"], [385, 4, 1, "", "asin"], [389, 4, 1, "", "asinh"], [253, 4, 1, "", "astype"], [394, 4, 1, "", "atan"], [398, 4, 1, "", "atan2"], [402, 4, 1, "", "atanh"], [831, 4, 1, "", "binary_cross_entropy"], [406, 4, 1, "", "bitwise_and"], [410, 4, 1, "", "bitwise_invert"], [414, 4, 1, "", "bitwise_left_shift"], [418, 4, 1, "", "bitwise_or"], [422, 4, 1, "", "bitwise_right_shift"], [426, 4, 1, "", "bitwise_xor"], [258, 4, 1, "", "broadcast_arrays"], [263, 4, 1, "", "broadcast_to"], [268, 4, 1, "", "can_cast"], [430, 4, 1, "", "ceil"], [759, 4, 1, "", "cholesky"], [847, 4, 1, "", "clip"], [621, 4, 1, "", "clip_vector_norm"], [852, 4, 1, "", "concat"], [856, 4, 1, "", "constant_pad"], [434, 4, 1, "", "cos"], [439, 4, 1, "", "cosh"], [836, 4, 1, "", "cross_entropy"], [748, 4, 1, "", "depthwise_conv2d"], [443, 4, 1, "", "divide"], [277, 4, 1, "", "dtype"], [630, 4, 1, "", "einops_rearrange"], [634, 4, 1, "", "einops_reduce"], [638, 4, 1, "", "einops_repeat"], [984, 4, 1, "", "einsum"], [189, 4, 1, "", "empty_like"], [448, 4, 1, "", "equal"], [452, 4, 1, "", "erf"], [456, 4, 1, "", "exp"], [860, 4, 1, "", "expand_dims"], [460, 4, 1, "", "expm1"], [282, 4, 1, "", "finfo"], [864, 4, 1, "", "flip"], [464, 4, 1, "", "floor"], [468, 4, 1, "", "floor_divide"], [197, 4, 1, "", "from_dlpack"], [203, 4, 1, "", "full_like"], [645, 4, 1, "", "gather"], [650, 4, 1, "", "gather_nd"], [713, 4, 1, "", "gradient_descent_update"], [472, 4, 1, "", "greater"], [476, 4, 1, "", "greater_equal"], [289, 4, 1, "", "iinfo"], [295, 4, 1, "", "is_float_dtype"], [300, 4, 1, "", "is_int_dtype"], [718, 4, 1, "", "is_variable"], [480, 4, 1, "", "isfinite"], [484, 4, 1, "", "isinf"], [488, 4, 1, "", "isnan"], [722, 4, 1, "", "lamb_update"], [726, 4, 1, "", "lars_update"], [929, 4, 1, "", "layer_norm"], [492, 4, 1, "", "less"], [496, 4, 1, "", "less_equal"], [500, 4, 1, "", "log"], [504, 4, 1, "", "log10"], [508, 4, 1, "", "log1p"], [512, 4, 1, "", "log2"], [516, 4, 1, "", "logaddexp"], [520, 4, 1, "", "logical_and"], [524, 4, 1, "", "logical_not"], [528, 4, 1, "", "logical_or"], [532, 4, 1, "", "logical_xor"], [782, 4, 1, "", "matmul"], [988, 4, 1, "", "max"], [992, 4, 1, "", "mean"], [214, 4, 1, "", "meshgrid"], [996, 4, 1, "", "min"], [538, 4, 1, "", "multiply"], [219, 4, 1, "", "native_array"], [543, 4, 1, "", "negative"], [547, 4, 1, "", "not_equal"], [227, 4, 1, "", "ones_like"], [730, 4, 1, "", "optimizer_update"], [868, 4, 1, "", "permute_dims"], [551, 4, 1, "", "positive"], [555, 4, 1, "", "pow"], [1000, 4, 1, "", "prod"], [939, 4, 1, "", "random_uniform"], [559, 4, 1, "", "remainder"], [872, 4, 1, "", "repeat"], [876, 4, 1, "", "reshape"], [306, 4, 1, "", "result_type"], [880, 4, 1, "", "roll"], [563, 4, 1, "", "round"], [567, 4, 1, "", "sign"], [572, 4, 1, "", "sin"], [577, 4, 1, "", "sinh"], [170, 4, 1, "", "softplus"], [978, 4, 1, "", "sort"], [841, 4, 1, "", "sparse_cross_entropy"], [582, 4, 1, "", "sqrt"], [586, 4, 1, "", "square"], [886, 4, 1, "", "squeeze"], [890, 4, 1, "", "stack"], [369, 4, 1, "", "static_abs"], [706, 4, 1, "", "static_adam_step"], [710, 4, 1, "", "static_adam_update"], [382, 4, 1, "", "static_add"], [1019, 4, 1, "", "static_all"], [612, 4, 1, "", "static_all_equal"], [1024, 4, 1, "", "static_any"], [180, 4, 1, "", "static_arange"], [975, 4, 1, "", "static_argsort"], [185, 4, 1, "", "static_asarray"], [391, 4, 1, "", "static_asinh"], [255, 4, 1, "", "static_astype"], [833, 4, 1, "", "static_binary_cross_entropy"], [260, 4, 1, "", "static_broadcast_arrays"], [265, 4, 1, "", "static_broadcast_to"], [270, 4, 1, "", "static_can_cast"], [761, 4, 1, "", "static_cholesky"], [849, 4, 1, "", "static_clip"], [436, 4, 1, "", "static_cos"], [838, 4, 1, "", "static_cross_entropy"], [750, 4, 1, "", "static_depthwise_conv2d"], [445, 4, 1, "", "static_divide"], [632, 4, 1, "", "static_einops_rearrange"], [636, 4, 1, "", "static_einops_reduce"], [640, 4, 1, "", "static_einops_repeat"], [191, 4, 1, "", "static_empty_like"], [194, 4, 1, "", "static_eye"], [284, 4, 1, "", "static_finfo"], [199, 4, 1, "", "static_from_dlpack"], [205, 4, 1, "", "static_full_like"], [647, 4, 1, "", "static_gather"], [652, 4, 1, "", "static_gather_nd"], [715, 4, 1, "", "static_gradient_descent_update"], [291, 4, 1, "", "static_iinfo"], [297, 4, 1, "", "static_is_float_dtype"], [302, 4, 1, "", "static_is_int_dtype"], [720, 4, 1, "", "static_is_variable"], [724, 4, 1, "", "static_lamb_update"], [728, 4, 1, "", "static_lars_update"], [931, 4, 1, "", "static_layer_norm"], [208, 4, 1, "", "static_linspace"], [211, 4, 1, "", "static_logspace"], [216, 4, 1, "", "static_meshgrid"], [540, 4, 1, "", "static_multiply"], [221, 4, 1, "", "static_native_array"], [224, 4, 1, "", "static_ones"], [229, 4, 1, "", "static_ones_like"], [732, 4, 1, "", "static_optimizer_update"], [936, 4, 1, "", "static_randint"], [941, 4, 1, "", "static_random_uniform"], [308, 4, 1, "", "static_result_type"], [882, 4, 1, "", "static_roll"], [569, 4, 1, "", "static_sign"], [574, 4, 1, "", "static_sin"], [579, 4, 1, "", "static_sinh"], [172, 4, 1, "", "static_softplus"], [980, 4, 1, "", "static_sort"], [843, 4, 1, "", "static_sparse_cross_entropy"], [589, 4, 1, "", "static_subtract"], [594, 4, 1, "", "static_tan"], [599, 4, 1, "", "static_tanh"], [692, 4, 1, "", "static_to_numpy"], [231, 4, 1, "", "static_tril"], [236, 4, 1, "", "static_triu"], [951, 4, 1, "", "static_unique_all"], [956, 4, 1, "", "static_unique_counts"], [961, 4, 1, "", "static_unique_inverse"], [966, 4, 1, "", "static_unique_values"], [241, 4, 1, "", "static_zeros"], [244, 4, 1, "", "static_zeros_like"], [1004, 4, 1, "", "std"], [591, 4, 1, "", "subtract"], [1008, 4, 1, "", "sum"], [894, 4, 1, "", "swapaxes"], [596, 4, 1, "", "tan"], [601, 4, 1, "", "tanh"], [898, 4, 1, "", "tile"], [694, 4, 1, "", "to_numpy"], [233, 4, 1, "", "tril"], [238, 4, 1, "", "triu"], [605, 4, 1, "", "trunc"], [953, 4, 1, "", "unique_all"], [958, 4, 1, "", "unique_counts"], [963, 4, 1, "", "unique_inverse"], [968, 4, 1, "", "unique_values"], [1012, 4, 1, "", "var"], [902, 4, 1, "", "zero_pad"], [246, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[80, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[80, 2, 1, "", "asarray"], [80, 2, 1, "", "empty_like"], [80, 2, 1, "", "from_dlpack"], [80, 2, 1, "", "full_like"], [80, 2, 1, "", "meshgrid"], [80, 2, 1, "", "native_array"], [80, 2, 1, "", "ones_like"], [80, 2, 1, "", "static_arange"], [80, 2, 1, "", "static_asarray"], [80, 2, 1, "", "static_empty_like"], [80, 2, 1, "", "static_eye"], [80, 2, 1, "", "static_from_dlpack"], [80, 2, 1, "", "static_full_like"], [80, 2, 1, "", "static_linspace"], [80, 2, 1, "", "static_logspace"], [80, 2, 1, "", "static_meshgrid"], [80, 2, 1, "", "static_native_array"], [80, 2, 1, "", "static_ones"], [80, 2, 1, "", "static_ones_like"], [80, 2, 1, "", "static_tril"], [80, 2, 1, "", "static_triu"], [80, 2, 1, "", "static_zeros"], [80, 2, 1, "", "static_zeros_like"], [80, 2, 1, "", "tril"], [80, 2, 1, "", "triu"], [80, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[82, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[82, 2, 1, "", "astype"], [82, 2, 1, "", "broadcast_arrays"], [82, 2, 1, "", "broadcast_to"], [82, 2, 1, "", "can_cast"], [82, 2, 1, "", "dtype"], [82, 2, 1, "", "finfo"], [82, 2, 1, "", "iinfo"], [82, 2, 1, "", "is_float_dtype"], [82, 2, 1, "", "is_int_dtype"], [82, 2, 1, "", "result_type"], [82, 2, 1, "", "static_astype"], [82, 2, 1, "", "static_broadcast_arrays"], [82, 2, 1, "", "static_broadcast_to"], [82, 2, 1, "", "static_can_cast"], [82, 2, 1, "", "static_finfo"], [82, 2, 1, "", "static_iinfo"], [82, 2, 1, "", "static_is_float_dtype"], [82, 2, 1, "", "static_is_int_dtype"], [82, 2, 1, "", "static_result_type"]], "ivy.container.device": [[84, 1, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[86, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[86, 2, 1, "", "abs"], [86, 2, 1, "", "acos"], [86, 2, 1, "", "acosh"], [86, 2, 1, "", "add"], [86, 2, 1, "", "asin"], [86, 2, 1, "", "asinh"], [86, 2, 1, "", "atan"], [86, 2, 1, "", "atan2"], [86, 2, 1, "", "atanh"], [86, 2, 1, "", "bitwise_and"], [86, 2, 1, "", "bitwise_invert"], [86, 2, 1, "", "bitwise_left_shift"], [86, 2, 1, "", "bitwise_or"], [86, 2, 1, "", "bitwise_right_shift"], [86, 2, 1, "", "bitwise_xor"], [86, 2, 1, "", "ceil"], [86, 2, 1, "", "cos"], [86, 2, 1, "", "cosh"], [86, 2, 1, "", "divide"], [86, 2, 1, "", "equal"], [86, 2, 1, "", "erf"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "expm1"], [86, 2, 1, "", "floor"], [86, 2, 1, "", "floor_divide"], [86, 2, 1, "", "greater"], [86, 2, 1, "", "greater_equal"], [86, 2, 1, "", "isfinite"], [86, 2, 1, "", "isinf"], [86, 2, 1, "", "isnan"], [86, 2, 1, "", "less"], [86, 2, 1, "", "less_equal"], [86, 2, 1, "", "log"], [86, 2, 1, "", "log10"], [86, 2, 1, "", "log1p"], [86, 2, 1, "", "log2"], [86, 2, 1, "", "logaddexp"], [86, 2, 1, "", "logical_and"], [86, 2, 1, "", "logical_not"], [86, 2, 1, "", "logical_or"], [86, 2, 1, "", "logical_xor"], [86, 2, 1, "", "multiply"], [86, 2, 1, "", "negative"], [86, 2, 1, "", "not_equal"], [86, 2, 1, "", "positive"], [86, 2, 1, "", "pow"], [86, 2, 1, "", "remainder"], [86, 2, 1, "", "round"], [86, 2, 1, "", "sign"], [86, 2, 1, "", "sin"], [86, 2, 1, "", "sinh"], [86, 2, 1, "", "sqrt"], [86, 2, 1, "", "square"], [86, 2, 1, "", "static_abs"], [86, 2, 1, "", "static_add"], [86, 2, 1, "", "static_asinh"], [86, 2, 1, "", "static_cos"], [86, 2, 1, "", "static_divide"], [86, 2, 1, "", "static_multiply"], [86, 2, 1, "", "static_sign"], [86, 2, 1, "", "static_sin"], [86, 2, 1, "", "static_sinh"], [86, 2, 1, "", "static_subtract"], [86, 2, 1, "", "static_tan"], [86, 2, 1, "", "static_tanh"], [86, 2, 1, "", "subtract"], [86, 2, 1, "", "tan"], [86, 2, 1, "", "tanh"], [86, 2, 1, "", "trunc"]], "ivy.container.general": [[88, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[88, 2, 1, "", "all_equal"], [88, 2, 1, "", "clip_vector_norm"], [88, 2, 1, "", "einops_rearrange"], [88, 2, 1, "", "einops_reduce"], [88, 2, 1, "", "einops_repeat"], [88, 2, 1, "", "gather"], [88, 2, 1, "", "gather_nd"], [88, 2, 1, "", "static_all_equal"], [88, 2, 1, "", "static_einops_rearrange"], [88, 2, 1, "", "static_einops_reduce"], [88, 2, 1, "", "static_einops_repeat"], [88, 2, 1, "", "static_gather"], [88, 2, 1, "", "static_gather_nd"], [88, 2, 1, "", "static_to_numpy"], [88, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[90, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[90, 2, 1, "", "adam_step"], [90, 2, 1, "", "adam_update"], [90, 2, 1, "", "gradient_descent_update"], [90, 2, 1, "", "is_variable"], [90, 2, 1, "", "lamb_update"], [90, 2, 1, "", "lars_update"], [90, 2, 1, "", "optimizer_update"], [90, 2, 1, "", "static_adam_step"], [90, 2, 1, "", "static_adam_update"], [90, 2, 1, "", "static_gradient_descent_update"], [90, 2, 1, "", "static_is_variable"], [90, 2, 1, "", "static_lamb_update"], [90, 2, 1, "", "static_lars_update"], [90, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[92, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[94, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[94, 2, 1, "", "depthwise_conv2d"], [94, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[96, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[96, 2, 1, "", "cholesky"], [96, 2, 1, "", "matmul"], [96, 2, 1, "", "static_cholesky"]], "ivy.container.losses": [[98, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[98, 2, 1, "", "binary_cross_entropy"], [98, 2, 1, "", "cross_entropy"], [98, 2, 1, "", "sparse_cross_entropy"], [98, 2, 1, "", "static_binary_cross_entropy"], [98, 2, 1, "", "static_cross_entropy"], [98, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[100, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[100, 2, 1, "", "clip"], [100, 2, 1, "", "concat"], [100, 2, 1, "", "constant_pad"], [100, 2, 1, "", "expand_dims"], [100, 2, 1, "", "flip"], [100, 2, 1, "", "permute_dims"], [100, 2, 1, "", "repeat"], [100, 2, 1, "", "reshape"], [100, 2, 1, "", "roll"], [100, 2, 1, "", "squeeze"], [100, 2, 1, "", "stack"], [100, 2, 1, "", "static_clip"], [100, 2, 1, "", "static_roll"], [100, 2, 1, "", "swapaxes"], [100, 2, 1, "", "tile"], [100, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[102, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[102, 2, 1, "", "layer_norm"], [102, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[104, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[104, 2, 1, "", "random_uniform"], [104, 2, 1, "", "static_randint"], [104, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[106, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[108, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[108, 2, 1, "", "static_unique_all"], [108, 2, 1, "", "static_unique_counts"], [108, 2, 1, "", "static_unique_inverse"], [108, 2, 1, "", "static_unique_values"], [108, 2, 1, "", "unique_all"], [108, 2, 1, "", "unique_counts"], [108, 2, 1, "", "unique_inverse"], [108, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[110, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[110, 2, 1, "", "argsort"], [110, 2, 1, "", "sort"], [110, 2, 1, "", "static_argsort"], [110, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[112, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[112, 2, 1, "", "einsum"], [112, 2, 1, "", "max"], [112, 2, 1, "", "mean"], [112, 2, 1, "", "min"], [112, 2, 1, "", "prod"], [112, 2, 1, "", "std"], [112, 2, 1, "", "sum"], [112, 2, 1, "", "var"]], "ivy.container.utility": [[114, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[114, 2, 1, "", "all"], [114, 2, 1, "", "any"], [114, 2, 1, "", "static_all"], [114, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[116, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[153, 4, 1, "", "handle_nestable"], [154, 4, 1, "", "handle_out_argument"], [155, 4, 1, "", "infer_device"], [156, 4, 1, "", "infer_dtype"], [157, 4, 1, "", "inputs_to_ivy_arrays"], [158, 4, 1, "", "inputs_to_native_arrays"], [159, 4, 1, "", "outputs_to_ivy_arrays"], [160, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[162, 0, 0, "-", "activations"], [174, 0, 0, "-", "compilation"], [176, 0, 0, "-", "constants"], [177, 0, 0, "-", "creation"], [248, 0, 0, "-", "data_type"], [317, 0, 0, "-", "device"], [364, 0, 0, "-", "elementwise"], [607, 0, 0, "-", "general"], [701, 0, 0, "-", "gradients"], [739, 0, 0, "-", "layers"], [756, 0, 0, "-", "linear_algebra"], [828, 0, 0, "-", "losses"], [844, 0, 0, "-", "manipulation"], [904, 0, 0, "-", "meta"], [908, 0, 0, "-", "nest"], [926, 0, 0, "-", "norms"], [932, 0, 0, "-", "random"], [944, 0, 0, "-", "searching"], [949, 0, 0, "-", "set"], [970, 0, 0, "-", "sorting"], [981, 0, 0, "-", "statistical"], [1014, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[163, 4, 1, "", "gelu"], [164, 4, 1, "", "leaky_relu"], [165, 4, 1, "", "relu"], [166, 4, 1, "", "sigmoid"], [167, 4, 1, "", "softmax"], [171, 4, 1, "", "softplus"], [173, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[175, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[176, 5, 1, "", "e"], [176, 5, 1, "", "inf"], [176, 5, 1, "", "nan"], [176, 5, 1, "", "newaxis"], [176, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[179, 4, 1, "", "arange"], [177, 4, 1, "", "array"], [184, 4, 1, "", "asarray"], [186, 4, 1, "", "empty"], [190, 4, 1, "", "empty_like"], [193, 4, 1, "", "eye"], [198, 4, 1, "", "from_dlpack"], [200, 4, 1, "", "full"], [204, 4, 1, "", "full_like"], [207, 4, 1, "", "linspace"], [210, 4, 1, "", "logspace"], [215, 4, 1, "", "meshgrid"], [220, 4, 1, "", "native_array"], [223, 4, 1, "", "ones"], [228, 4, 1, "", "ones_like"], [234, 4, 1, "", "tril"], [239, 4, 1, "", "triu"], [242, 4, 1, "", "zeros"], [247, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[248, 1, 1, "", "DefaultDtype"], [248, 1, 1, "", "DefaultFloatDtype"], [248, 1, 1, "", "DefaultIntDtype"], [249, 4, 1, "", "as_ivy_dtype"], [250, 4, 1, "", "as_native_dtype"], [254, 4, 1, "", "astype"], [259, 4, 1, "", "broadcast_arrays"], [264, 4, 1, "", "broadcast_to"], [269, 4, 1, "", "can_cast"], [271, 4, 1, "", "closest_valid_dtype"], [272, 4, 1, "", "default_dtype"], [273, 4, 1, "", "default_float_dtype"], [274, 4, 1, "", "default_int_dtype"], [278, 4, 1, "", "dtype"], [279, 4, 1, "", "dtype_bits"], [283, 4, 1, "", "finfo"], [285, 4, 1, "", "function_supported_dtypes"], [286, 4, 1, "", "function_unsupported_dtypes"], [290, 4, 1, "", "iinfo"], [292, 4, 1, "", "invalid_dtype"], [296, 4, 1, "", "is_float_dtype"], [301, 4, 1, "", "is_int_dtype"], [303, 4, 1, "", "promote_types"], [307, 4, 1, "", "result_type"], [309, 4, 1, "", "set_default_dtype"], [310, 4, 1, "", "set_default_float_dtype"], [311, 4, 1, "", "set_default_int_dtype"], [312, 4, 1, "", "type_promote_arrays"], [313, 4, 1, "", "unset_default_dtype"], [314, 4, 1, "", "unset_default_float_dtype"], [315, 4, 1, "", "unset_default_int_dtype"], [316, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[248, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[248, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[248, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[317, 1, 1, "", "DefaultDevice"], [318, 1, 1, "", "DevClonedItem"], [319, 1, 1, "", "DevClonedIter"], [320, 1, 1, "", "DevClonedNest"], [321, 1, 1, "", "DevDistItem"], [322, 1, 1, "", "DevDistIter"], [323, 1, 1, "", "DevDistNest"], [317, 1, 1, "", "DevManager"], [324, 1, 1, "", "DevMapper"], [325, 1, 1, "", "DevMapperMultiProc"], [317, 1, 1, "", "MultiDev"], [326, 1, 1, "", "MultiDevItem"], [327, 1, 1, "", "MultiDevIter"], [328, 1, 1, "", "MultiDevNest"], [329, 1, 1, "", "Profiler"], [330, 4, 1, "", "as_ivy_dev"], [331, 4, 1, "", "as_native_dev"], [332, 4, 1, "", "clear_mem_on_dev"], [333, 4, 1, "", "default_device"], [334, 4, 1, "", "dev"], [335, 4, 1, "", "dev_clone"], [336, 4, 1, "", "dev_clone_array"], [337, 4, 1, "", "dev_clone_iter"], [338, 4, 1, "", "dev_clone_nest"], [339, 4, 1, "", "dev_dist"], [340, 4, 1, "", "dev_dist_array"], [341, 4, 1, "", "dev_dist_iter"], [342, 4, 1, "", "dev_dist_nest"], [343, 4, 1, "", "dev_unify"], [344, 4, 1, "", "dev_unify_array"], [345, 4, 1, "", "dev_unify_iter"], [346, 4, 1, "", "dev_unify_nest"], [347, 4, 1, "", "dev_util"], [348, 4, 1, "", "get_all_ivy_arrays_on_dev"], [349, 4, 1, "", "gpu_is_available"], [350, 4, 1, "", "num_cpu_cores"], [351, 4, 1, "", "num_gpus"], [352, 4, 1, "", "num_ivy_arrays_on_dev"], [353, 4, 1, "", "percent_used_mem_on_dev"], [354, 4, 1, "", "print_all_ivy_arrays_on_dev"], [355, 4, 1, "", "set_default_device"], [356, 4, 1, "", "set_split_factor"], [357, 4, 1, "", "split_factor"], [358, 4, 1, "", "split_func_call"], [359, 4, 1, "", "to_device"], [360, 4, 1, "", "total_mem_on_dev"], [361, 4, 1, "", "tpu_is_available"], [362, 4, 1, "", "unset_default_device"], [363, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[317, 2, 1, "", "__enter__"], [317, 2, 1, "", "__exit__"], [317, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[317, 2, 1, "", "__init__"], [317, 2, 1, "", "da_tune_step"], [317, 3, 1, "", "dim_size"], [317, 2, 1, "", "ds_tune_step"], [317, 2, 1, "", "map"], [317, 2, 1, "", "repeated_config_check"], [317, 3, 1, "", "tune_step"], [317, 3, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[324, 2, 1, "", "__init__"], [324, 2, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[325, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[317, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[326, 2, 1, "", "__init__"], [326, 2, 1, "", "items"], [326, 2, 1, "", "keys"], [326, 3, 1, "", "shape"], [326, 2, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "at_dev"], [327, 2, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[328, 2, 1, "", "__init__"], [328, 2, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[329, 2, 1, "", "__init__"], [329, 2, 1, "", "start"], [329, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[368, 4, 1, "", "abs"], [373, 4, 1, "", "acos"], [377, 4, 1, "", "acosh"], [381, 4, 1, "", "add"], [386, 4, 1, "", "asin"], [390, 4, 1, "", "asinh"], [395, 4, 1, "", "atan"], [399, 4, 1, "", "atan2"], [403, 4, 1, "", "atanh"], [407, 4, 1, "", "bitwise_and"], [411, 4, 1, "", "bitwise_invert"], [415, 4, 1, "", "bitwise_left_shift"], [419, 4, 1, "", "bitwise_or"], [423, 4, 1, "", "bitwise_right_shift"], [427, 4, 1, "", "bitwise_xor"], [431, 4, 1, "", "ceil"], [435, 4, 1, "", "cos"], [440, 4, 1, "", "cosh"], [444, 4, 1, "", "divide"], [449, 4, 1, "", "equal"], [453, 4, 1, "", "erf"], [457, 4, 1, "", "exp"], [461, 4, 1, "", "expm1"], [465, 4, 1, "", "floor"], [469, 4, 1, "", "floor_divide"], [473, 4, 1, "", "greater"], [477, 4, 1, "", "greater_equal"], [481, 4, 1, "", "isfinite"], [485, 4, 1, "", "isinf"], [489, 4, 1, "", "isnan"], [493, 4, 1, "", "less"], [497, 4, 1, "", "less_equal"], [501, 4, 1, "", "log"], [505, 4, 1, "", "log10"], [509, 4, 1, "", "log1p"], [513, 4, 1, "", "log2"], [517, 4, 1, "", "logaddexp"], [521, 4, 1, "", "logical_and"], [525, 4, 1, "", "logical_not"], [529, 4, 1, "", "logical_or"], [533, 4, 1, "", "logical_xor"], [534, 4, 1, "", "maximum"], [535, 4, 1, "", "minimum"], [539, 4, 1, "", "multiply"], [544, 4, 1, "", "negative"], [548, 4, 1, "", "not_equal"], [552, 4, 1, "", "positive"], [556, 4, 1, "", "pow"], [560, 4, 1, "", "remainder"], [564, 4, 1, "", "round"], [568, 4, 1, "", "sign"], [573, 4, 1, "", "sin"], [578, 4, 1, "", "sinh"], [583, 4, 1, "", "sqrt"], [587, 4, 1, "", "square"], [592, 4, 1, "", "subtract"], [597, 4, 1, "", "tan"], [602, 4, 1, "", "tanh"], [606, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[611, 4, 1, "", "all_equal"], [613, 4, 1, "", "arg_info"], [614, 4, 1, "", "arg_names"], [615, 4, 1, "", "array_equal"], [616, 4, 1, "", "arrays_equal"], [617, 4, 1, "", "assert_supports_inplace"], [618, 4, 1, "", "cache_fn"], [619, 4, 1, "", "clip_matrix_norm"], [622, 4, 1, "", "clip_vector_norm"], [623, 4, 1, "", "container_types"], [624, 4, 1, "", "copy_array"], [625, 4, 1, "", "cumprod"], [626, 4, 1, "", "cumsum"], [627, 4, 1, "", "current_backend_str"], [628, 4, 1, "", "default"], [631, 4, 1, "", "einops_rearrange"], [635, 4, 1, "", "einops_reduce"], [639, 4, 1, "", "einops_repeat"], [641, 4, 1, "", "exists"], [642, 4, 1, "", "floormod"], [643, 4, 1, "", "fourier_encode"], [646, 4, 1, "", "gather"], [651, 4, 1, "", "gather_nd"], [653, 4, 1, "", "get_all_arrays_in_memory"], [654, 4, 1, "", "get_min_base"], [655, 4, 1, "", "get_min_denominator"], [656, 4, 1, "", "get_num_dims"], [657, 4, 1, "", "get_referrers_recursive"], [658, 4, 1, "", "has_nans"], [659, 4, 1, "", "indices_where"], [660, 4, 1, "", "inplace_arrays_supported"], [661, 4, 1, "", "inplace_decrement"], [662, 4, 1, "", "inplace_increment"], [663, 4, 1, "", "inplace_update"], [664, 4, 1, "", "inplace_variables_supported"], [665, 4, 1, "", "is_array"], [666, 4, 1, "", "is_ivy_array"], [667, 4, 1, "", "is_ivy_container"], [668, 4, 1, "", "is_native_array"], [669, 4, 1, "", "match_kwargs"], [670, 4, 1, "", "multiprocessing"], [671, 4, 1, "", "num_arrays_in_memory"], [672, 4, 1, "", "one_hot"], [673, 4, 1, "", "print_all_arrays_in_memory"], [674, 4, 1, "", "queue_timeout"], [675, 4, 1, "", "scatter_flat"], [676, 4, 1, "", "scatter_nd"], [677, 4, 1, "", "set_min_base"], [678, 4, 1, "", "set_min_denominator"], [679, 4, 1, "", "set_queue_timeout"], [680, 4, 1, "", "set_shape_array_mode"], [681, 4, 1, "", "set_tmp_dir"], [682, 4, 1, "", "shape"], [683, 4, 1, "", "shape_array_mode"], [684, 4, 1, "", "stable_divide"], [685, 4, 1, "", "stable_pow"], [686, 4, 1, "", "supports_inplace"], [687, 4, 1, "", "tmp_dir"], [688, 4, 1, "", "to_ivy_shape"], [689, 4, 1, "", "to_list"], [690, 4, 1, "", "to_native_shape"], [695, 4, 1, "", "to_numpy"], [696, 4, 1, "", "to_scalar"], [697, 4, 1, "", "try_else_none"], [698, 4, 1, "", "unset_shape_array_mode"], [699, 4, 1, "", "unstack"], [700, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[701, 1, 1, "", "GradientTracking"], [705, 4, 1, "", "adam_step"], [709, 4, 1, "", "adam_update"], [711, 4, 1, "", "execute_with_gradients"], [714, 4, 1, "", "gradient_descent_update"], [719, 4, 1, "", "is_variable"], [723, 4, 1, "", "lamb_update"], [727, 4, 1, "", "lars_update"], [731, 4, 1, "", "optimizer_update"], [733, 4, 1, "", "set_with_grads"], [734, 4, 1, "", "stop_gradient"], [735, 4, 1, "", "unset_with_grads"], [736, 4, 1, "", "variable"], [737, 4, 1, "", "variable_data"], [738, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[701, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[740, 4, 1, "", "conv1d"], [741, 4, 1, "", "conv1d_transpose"], [742, 4, 1, "", "conv2d"], [743, 4, 1, "", "conv2d_transpose"], [744, 4, 1, "", "conv3d"], [745, 4, 1, "", "conv3d_transpose"], [749, 4, 1, "", "depthwise_conv2d"], [751, 4, 1, "", "dropout"], [752, 4, 1, "", "linear"], [753, 4, 1, "", "lstm_update"], [754, 4, 1, "", "multi_head_attention"], [755, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[760, 4, 1, "", "cholesky"], [764, 4, 1, "", "cross"], [767, 4, 1, "", "det"], [770, 4, 1, "", "diagonal"], [773, 4, 1, "", "eigh"], [776, 4, 1, "", "eigvalsh"], [779, 4, 1, "", "inv"], [783, 4, 1, "", "matmul"], [786, 4, 1, "", "matrix_norm"], [787, 4, 1, "", "matrix_power"], [790, 4, 1, "", "matrix_rank"], [793, 4, 1, "", "matrix_transpose"], [796, 4, 1, "", "outer"], [799, 4, 1, "", "pinv"], [802, 4, 1, "", "qr"], [803, 4, 1, "", "slogdet"], [806, 4, 1, "", "solve"], [809, 4, 1, "", "svd"], [812, 4, 1, "", "svdvals"], [815, 4, 1, "", "tensordot"], [818, 4, 1, "", "trace"], [821, 4, 1, "", "vecdot"], [824, 4, 1, "", "vector_norm"], [827, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[832, 4, 1, "", "binary_cross_entropy"], [837, 4, 1, "", "cross_entropy"], [842, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[848, 4, 1, "", "clip"], [853, 4, 1, "", "concat"], [857, 4, 1, "", "constant_pad"], [861, 4, 1, "", "expand_dims"], [865, 4, 1, "", "flip"], [869, 4, 1, "", "permute_dims"], [873, 4, 1, "", "repeat"], [877, 4, 1, "", "reshape"], [881, 4, 1, "", "roll"], [883, 4, 1, "", "split"], [887, 4, 1, "", "squeeze"], [891, 4, 1, "", "stack"], [895, 4, 1, "", "swapaxes"], [899, 4, 1, "", "tile"], [903, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[905, 4, 1, "", "fomaml_step"], [906, 4, 1, "", "maml_step"], [907, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[909, 4, 1, "", "all_nested_indices"], [910, 4, 1, "", "copy_nest"], [911, 4, 1, "", "index_nest"], [912, 4, 1, "", "insert_into_nest_at_index"], [913, 4, 1, "", "insert_into_nest_at_indices"], [914, 4, 1, "", "map"], [915, 4, 1, "", "map_nest_at_index"], [916, 4, 1, "", "map_nest_at_indices"], [917, 4, 1, "", "multi_index_nest"], [918, 4, 1, "", "nested_any"], [919, 4, 1, "", "nested_indices_where"], [920, 4, 1, "", "nested_map"], [921, 4, 1, "", "nested_multi_map"], [922, 4, 1, "", "prune_nest_at_index"], [923, 4, 1, "", "prune_nest_at_indices"], [924, 4, 1, "", "set_nest_at_index"], [925, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[930, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[933, 4, 1, "", "multinomial"], [935, 4, 1, "", "randint"], [937, 4, 1, "", "random_normal"], [940, 4, 1, "", "random_uniform"], [942, 4, 1, "", "seed"], [943, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[945, 4, 1, "", "argmax"], [946, 4, 1, "", "argmin"], [947, 4, 1, "", "nonzero"], [948, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[954, 4, 1, "", "unique_all"], [959, 4, 1, "", "unique_counts"], [964, 4, 1, "", "unique_inverse"], [969, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[974, 4, 1, "", "argsort"], [979, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[985, 4, 1, "", "einsum"], [989, 4, 1, "", "max"], [993, 4, 1, "", "mean"], [997, 4, 1, "", "min"], [1001, 4, 1, "", "prod"], [1005, 4, 1, "", "std"], [1009, 4, 1, "", "sum"], [1013, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1018, 4, 1, "", "all"], [1023, 4, 1, "", "any"]], "ivy.inspection": [[1029, 4, 1, "", "add_array_specs"], [1030, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1033, 0, 0, "-", "activations"], [1036, 0, 0, "-", "converters"], [1038, 0, 0, "-", "initializers"], [1044, 0, 0, "-", "layers"], [1056, 0, 0, "-", "module"], [1058, 0, 0, "-", "norms"], [1060, 0, 0, "-", "optimizers"], [1066, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1034, 1, 1, "", "GEGLU"], [1035, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1034, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1035, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1037, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1038, 1, 1, "", "Constant"], [1039, 1, 1, "", "FirstLayerSiren"], [1040, 1, 1, "", "GlorotUniform"], [1038, 1, 1, "", "KaimingNormal"], [1041, 1, 1, "", "Ones"], [1042, 1, 1, "", "Siren"], [1038, 1, 1, "", "Uniform"], [1043, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1038, 2, 1, "", "__init__"], [1038, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1039, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1040, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1038, 2, 1, "", "__init__"], [1038, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1041, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1042, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1038, 2, 1, "", "__init__"], [1038, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1043, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1045, 1, 1, "", "Conv1D"], [1046, 1, 1, "", "Conv1DTranspose"], [1047, 1, 1, "", "Conv2D"], [1048, 1, 1, "", "Conv2DTranspose"], [1049, 1, 1, "", "Conv3D"], [1050, 1, 1, "", "Conv3DTranspose"], [1051, 1, 1, "", "DepthwiseConv2D"], [1052, 1, 1, "", "Dropout"], [1053, 1, 1, "", "LSTM"], [1054, 1, 1, "", "Linear"], [1055, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1045, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1046, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1047, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1048, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1049, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1050, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1051, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1052, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1053, 2, 1, "", "__init__"], [1053, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1054, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1055, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1057, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1057, 2, 1, "", "__init__"], [1057, 2, 1, "", "build"], [1057, 3, 1, "", "build_mode"], [1057, 3, 1, "", "built"], [1057, 2, 1, "", "check_submod_rets"], [1057, 2, 1, "", "get_mod_key"], [1057, 2, 1, "", "mod_depth"], [1057, 2, 1, "", "mod_height"], [1057, 2, 1, "", "mod_with_top_mod_key_chain"], [1057, 2, 1, "", "save_weights"], [1057, 2, 1, "", "show_mod_in_top_mod"], [1057, 2, 1, "", "show_structure"], [1057, 2, 1, "", "show_v_in_top_v"], [1057, 2, 1, "", "sub_mods"], [1057, 2, 1, "", "track_submod_call_order"], [1057, 2, 1, "", "track_submod_rets"], [1057, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1059, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1059, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1061, 1, 1, "", "Adam"], [1062, 1, 1, "", "LAMB"], [1063, 1, 1, "", "LARS"], [1064, 1, 1, "", "Optimizer"], [1065, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1061, 2, 1, "", "__init__"], [1061, 2, 1, "", "set_state"], [1061, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1062, 2, 1, "", "__init__"], [1062, 2, 1, "", "set_state"], [1062, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1063, 2, 1, "", "__init__"], [1063, 2, 1, "", "set_state"], [1063, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1064, 2, 1, "", "__init__"], [1064, 2, 1, "", "set_state"], [1064, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1065, 2, 1, "", "__init__"], [1065, 2, 1, "", "set_state"], [1065, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1067, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1067, 2, 1, "", "__init__"]], "ivy.verbosity": [[1070, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 118, 125, 134, 151], "handler": [0, 134], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 1025], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 151], "competit": 14, "do": [14, 123], "work": [14, 20], "The": [14, 18, 136, 151], "arrai": [14, 22, 25, 119, 122, 127, 136, 169, 182, 188, 196, 202, 213, 218, 226, 232, 237, 245, 252, 257, 262, 267, 276, 281, 288, 294, 299, 305, 366, 371, 375, 379, 384, 388, 393, 397, 401, 405, 409, 413, 417, 421, 425, 429, 433, 438, 442, 447, 451, 455, 459, 463, 467, 471, 475, 479, 483, 487, 491, 495, 499, 503, 507, 511, 515, 519, 523, 527, 531, 537, 542, 546, 550, 554, 558, 562, 566, 571, 576, 581, 585, 590, 595, 600, 604, 609, 649, 693, 703, 717, 747, 758, 763, 766, 769, 772, 775, 778, 781, 785, 789, 792, 795, 798, 801, 805, 808, 811, 814, 817, 820, 823, 826, 830, 835, 840, 846, 851, 855, 859, 863, 867, 871, 875, 879, 885, 889, 893, 897, 901, 928, 952, 957, 962, 967, 972, 977, 983, 987, 991, 995, 999, 1003, 1007, 1011, 1016, 1021], "api": [14, 19, 118, 122, 128, 134, 136, 138, 139], "why": [15, 123], "unifi": [15, 136], "No": [15, 17], "more": 15, "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 1025], "set": [17, 61, 107, 125, 949], "up": 17, "clone": 17, "ivi": [17, 118, 121, 123, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 169, 170, 171, 172, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 276, 277, 278, 281, 282, 283, 284, 288, 289, 290, 291, 294, 295, 296, 297, 299, 300, 301, 302, 305, 306, 307, 308, 366, 367, 368, 369, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 401, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 463, 464, 465, 467, 468, 469, 471, 472, 473, 475, 476, 477, 479, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 519, 520, 521, 523, 524, 525, 527, 528, 529, 531, 532, 533, 537, 538, 539, 540, 542, 543, 544, 546, 547, 548, 550, 551, 552, 554, 555, 556, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 609, 610, 611, 612, 621, 622, 630, 631, 632, 634, 635, 636, 638, 639, 640, 645, 646, 647, 649, 650, 651, 652, 692, 693, 694, 695, 703, 704, 705, 706, 708, 709, 710, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 730, 731, 732, 747, 748, 749, 750, 758, 759, 760, 761, 763, 764, 766, 767, 769, 770, 772, 773, 775, 776, 778, 779, 781, 782, 783, 785, 786, 789, 790, 792, 793, 795, 796, 798, 799, 801, 802, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 820, 821, 823, 824, 826, 827, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 846, 847, 848, 849, 851, 852, 853, 855, 856, 857, 859, 860, 861, 863, 864, 865, 867, 868, 869, 871, 872, 873, 875, 876, 877, 879, 880, 881, 882, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 901, 902, 903, 928, 929, 930, 931, 935, 936, 939, 940, 941, 951, 952, 953, 954, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 972, 973, 974, 975, 977, 978, 979, 980, 983, 984, 985, 987, 988, 989, 991, 992, 993, 995, 996, 997, 999, 1000, 1001, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024], "pycharm": 17, "virtual": 17, "environ": 17, "docker": [17, 18, 20], "us": [17, 20, 137], "miniconda": [17, 20], "venv": [17, 20], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "github": 17, "codespac": 17, "pre": [17, 132], "commit": [17, 18, 132], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "who": 18, "To": 18, "ask": 18, "With": 18, "command": 18, "line": 18, "browser": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "run": 18, "test": [18, 122, 123], "local": 18, "open": 19, "task": 19, "function": [19, 119, 123, 124, 126, 128, 129, 130, 134, 139, 151], "format": [19, 132], "frontend": [19, 139], "build": [20, 134], "doc": 20, "dockerless": 20, "document": 20, "pipelin": [20, 151], "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "data": [21, 35, 81, 123, 129, 137, 151, 248, 949, 950, 954, 955, 959, 965, 969], "class": [21, 136, 1032], "activ": [23, 72, 162, 1033], "arraywithactiv": 24, "convers": 28, "args_to_ivi": 29, "args_to_n": 30, "to_ivi": 31, "to_n": 32, "creation": [33, 79, 177], "arraywithcr": 34, "type": [35, 81, 124, 129, 151, 248], "arraywithdatatyp": 36, "devic": [37, 83, 119, 130, 317], "arraywithdevic": 38, "elementwis": [39, 85, 364], "arraywithelementwis": 40, "gener": [41, 87, 123, 607], "arraywithgener": 42, "gradient": [43, 89, 701], "arraywithgradi": 44, "imag": [45, 91], "arraywithimag": 46, "layer": [47, 93, 739, 1044], "arraywithlay": 48, "linear": [49, 95, 752, 756, 1054], "algebra": [49, 95, 756], "arraywithlinearalgebra": 50, "loss": [51, 97, 828], "arraywithloss": 52, "manipul": [53, 99, 844], "arraywithmanipul": 54, "norm": [55, 101, 926, 1058], "arraywithnorm": 56, "random": [57, 103, 932], "arraywithrandom": 58, "search": [59, 105, 944], "arraywithsearch": 60, "arraywithset": 62, "sort": [63, 109, 970, 976, 977, 978, 979], "arraywithsort": 64, "statist": [65, 111, 981], "arraywithstatist": 66, "util": [67, 113, 1014], "arraywithutil": 68, "wrap": [69, 115, 126], "add_ivy_array_instance_method": 70, "contain": [71, 76, 128, 137, 170, 172, 180, 183, 185, 189, 191, 194, 197, 199, 203, 205, 208, 211, 214, 216, 219, 221, 224, 227, 229, 231, 233, 236, 238, 241, 244, 246, 253, 255, 258, 260, 263, 265, 268, 270, 277, 282, 284, 289, 291, 295, 297, 300, 302, 306, 308, 367, 369, 372, 376, 380, 382, 385, 389, 391, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 436, 439, 443, 445, 448, 452, 456, 460, 464, 468, 472, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 520, 524, 528, 532, 538, 540, 543, 547, 551, 555, 559, 563, 567, 569, 572, 574, 577, 579, 582, 586, 589, 591, 594, 596, 599, 601, 605, 610, 612, 621, 630, 632, 634, 636, 638, 640, 645, 647, 650, 652, 692, 694, 704, 706, 708, 710, 713, 715, 718, 720, 722, 724, 726, 728, 730, 732, 748, 750, 759, 761, 782, 831, 833, 836, 838, 841, 843, 847, 849, 852, 856, 860, 864, 868, 872, 876, 880, 882, 886, 890, 894, 898, 902, 929, 931, 936, 939, 941, 951, 953, 956, 958, 961, 963, 966, 968, 973, 975, 978, 980, 984, 988, 992, 996, 1000, 1004, 1008, 1012, 1017, 1019, 1022, 1024], "containerwithactiv": 73, "base": 74, "containerbas": 75, "containerwithcr": 80, "containerwithdatatyp": 82, "containerwithdevic": 84, "containerwithelementwis": 86, "containerwithgener": 88, "containerwithgradi": 90, "containerwithimag": 92, "containerwithlay": 94, "containerwithlinearalgebra": 96, "containerwithloss": 98, "containerwithmanipul": 100, "containerwithnorm": 102, "containerwithrandom": 104, "containerwithsearch": 106, "containerwithset": 108, "containerwithsort": 110, "containerwithstatist": 112, "containerwithutil": 114, "add_ivy_container_instance_method": 116, "deep": 117, "dive": 117, "navig": 118, "code": 118, "categor": 118, "submodul": 118, "design": [118, 133, 1025], "argument": [119, 129, 130, 131], "exampl": [119, 121, 132], "out": [119, 131], "dtype": [119, 275, 276, 277, 278], "number": 119, "oper": [119, 136, 151], "integ": 119, "sequenc": 119, "nestabl": [119, 124, 128], "docstr": [120, 121], "tan": [121, 593, 595, 596, 597], "roll": [121, 878, 879, 880, 881], "add": [121, 378, 379, 380, 381], "hypothesi": 123, "import": 123, "strategi": 123, "integr": 123, "we": 123, "need": 123, "helper": 123, "how": 123, "write": 123, "effect": 123, "bonu": 123, "extend": 123, "featur": 123, "self": 123, "consist": 123, "explicit": 123, "test_array_funct": 123, "primari": 124, "composit": 124, "mix": 124, "standalon": 124, "conveni": 124, "nativ": 127, "handl": 127, "instanc": [128, 136], "method": [128, 136, 137], "static": 128, "special": 128, "modul": [129, 130, 138, 1056, 1057], "other": [129, 130], "unsupport": 129, "inplac": 131, "updat": 131, "copi": 131, "lint": 132, "check": [132, 151], "hook": 132, "automat": 132, "reformat": 132, "befor": 132, "block": 134, "framework": [134, 135, 1032], "graph": [134, 139], "compil": [134, 139, 174, 175], "monkei": 136, "patch": 136, "construct": 137, "represent": 137, "recurs": 137, "built": 137, "ins": 137, "access": 137, "save": 137, "load": 137, "comparison": 137, "custom": [137, 151], "case": 137, "compartment": 137, "configur": 137, "network": [137, 139], "weight": 137, "state": [138, 151], "initi": [138, 1038], "optim": [138, 1060, 1064], "transpil": 139, "role": 139, "convert": [139, 1036], "model": [139, 146, 151], "builder": 141, "ecosystem": 142, "gym": [143, 150], "mech": 144, "memori": [145, 150], "robot": [147, 150], "vision": [148, 150], "extens": [149, 1025], "appli": 150, "librari": 150, "mechan": 150, "faq": 151, "maintain": 151, "version": 151, "dynam": 151, "size": 151, "shape": [151, 682, 949, 950, 954, 955, 959, 965, 969], "control": 151, "flow": 151, "auto": 151, "differenti": 151, "replica": 151, "parallel": 151, "support": 151, "altern": 151, "structur": 151, "func": 152, "wrapper": 152, "handle_nest": 153, "handle_out_argu": 154, "infer_devic": 155, "infer_dtyp": 156, "inputs_to_ivy_arrai": 157, "inputs_to_native_arrai": 158, "outputs_to_ivy_arrai": 159, "to_native_arrays_and_back": 160, "gelu": [163, 1035], "leaky_relu": 164, "relu": 165, "sigmoid": 166, "softmax": 167, "softplu": [168, 169, 170, 171], "static_softplu": 172, "tanh": [173, 598, 600, 601, 602], "constant": 176, "note": [177, 195, 198], "arang": [178, 179], "static_arang": 180, "asarrai": [181, 182, 183, 184], "static_asarrai": 185, "empti": 186, "empty_lik": [187, 188, 189, 190], "static_empty_lik": 191, "ey": [192, 193], "static_ey": 194, "from_dlpack": [195, 196, 197, 198], "static_from_dlpack": 199, "full": 200, "full_lik": [201, 202, 203, 204], "static_full_lik": 205, "linspac": [206, 207], "static_linspac": 208, "logspac": [209, 210], "static_logspac": 211, "meshgrid": [212, 213, 214, 215], "static_meshgrid": 216, "native_arrai": [217, 218, 219, 220], "static_native_arrai": 221, "ones": [222, 223], "static_on": 224, "ones_lik": [225, 226, 227, 228], "static_ones_lik": 229, "tril": [230, 232, 233, 234], "static_tril": 231, "triu": [235, 237, 238, 239], "static_triu": 236, "zero": [240, 242, 1043], "static_zero": 241, "zeros_lik": [243, 245, 246, 247], "static_zeros_lik": 244, "as_ivy_dtyp": 249, "as_native_dtyp": 250, "astyp": [251, 252, 253, 254], "static_astyp": 255, "broadcast_arrai": [256, 257, 258, 259], "static_broadcast_arrai": 260, "broadcast_to": [261, 262, 263, 264], "static_broadcast_to": 265, "can_cast": [266, 267, 268, 269], "static_can_cast": 270, "closest_valid_dtyp": 271, "default_dtyp": 272, "default_float_dtyp": 273, "default_int_dtyp": 274, "dtype_bit": 279, "finfo": [280, 281, 282, 283], "static_finfo": 284, "function_supported_dtyp": 285, "function_unsupported_dtyp": 286, "iinfo": [287, 288, 289, 290], "static_iinfo": 291, "invalid_dtyp": 292, "is_float_dtyp": [293, 294, 295, 296], "static_is_float_dtyp": 297, "is_int_dtyp": [298, 299, 300, 301], "static_is_int_dtyp": 302, "promote_typ": 303, "result_typ": [304, 305, 306, 307], "static_result_typ": 308, "set_default_dtyp": 309, "set_default_float_dtyp": 310, "set_default_int_dtyp": 311, "type_promote_arrai": 312, "unset_default_dtyp": 313, "unset_default_float_dtyp": 314, "unset_default_int_dtyp": 315, "valid_dtyp": 316, "devcloneditem": 318, "devclonedit": 319, "devclonednest": 320, "devdistitem": 321, "devdistit": 322, "devdistnest": 323, "devmapp": 324, "devmappermultiproc": 325, "multidevitem": 326, "multidevit": 327, "multidevnest": 328, "profil": 329, "as_ivy_dev": 330, "as_native_dev": 331, "clear_mem_on_dev": 332, "default_devic": 333, "dev": 334, "dev_clon": 335, "dev_clone_arrai": 336, "dev_clone_it": 337, "dev_clone_nest": 338, "dev_dist": 339, "dev_dist_arrai": 340, "dev_dist_it": 341, "dev_dist_nest": 342, "dev_unifi": 343, "dev_unify_arrai": 344, "dev_unify_it": 345, "dev_unify_nest": 346, "dev_util": 347, "get_all_ivy_arrays_on_dev": 348, "gpu_is_avail": 349, "num_cpu_cor": 350, "num_gpu": 351, "num_ivy_arrays_on_dev": 352, "percent_used_mem_on_dev": 353, "print_all_ivy_arrays_on_dev": 354, "set_default_devic": 355, "set_split_factor": 356, "split_factor": 357, "split_func_cal": 358, "to_devic": 359, "total_mem_on_dev": 360, "tpu_is_avail": 361, "unset_default_devic": 362, "used_mem_on_dev": 363, "ab": [365, 366, 367, 368], "static_ab": 369, "aco": [370, 371, 372, 373], "acosh": [374, 375, 376, 377], "static_add": 382, "asin": [383, 384, 385, 386], "asinh": [387, 388, 389, 390], "static_asinh": 391, "atan": [392, 393, 394, 395], "atan2": [396, 397, 398, 399], "atanh": [400, 401, 402, 403], "bitwise_and": [404, 405, 406, 407], "bitwise_invert": [408, 409, 410, 411], "bitwise_left_shift": [412, 413, 414, 415], "bitwise_or": [416, 417, 418, 419], "bitwise_right_shift": [420, 421, 422, 423], "bitwise_xor": [424, 425, 426, 427], "ceil": [428, 429, 430, 431], "co": [432, 433, 434, 435], "static_co": 436, "cosh": [437, 438, 439, 440], "divid": [441, 442, 443, 444], "static_divid": 445, "equal": [446, 447, 448, 449], "erf": [450, 451, 452, 453], "exp": [454, 455, 456, 457], "expm1": [458, 459, 460, 461], "floor": [462, 463, 464, 465], "floor_divid": [466, 467, 468, 469], "greater": [470, 471, 472, 473], "greater_equ": [474, 475, 476, 477], "isfinit": [478, 479, 480, 481], "isinf": [482, 483, 484, 485], "isnan": [486, 487, 488, 489], "less": [490, 491, 492, 493], "less_equ": [494, 495, 496, 497], "log": [498, 499, 500, 501], "log10": [502, 503, 504, 505], "log1p": [506, 507, 508, 509], "log2": [510, 511, 512, 513], "logaddexp": [514, 515, 516, 517], "logical_and": [518, 519, 520, 521], "logical_not": [522, 523, 524, 525], "logical_or": [526, 527, 528, 529], "logical_xor": [530, 531, 532, 533], "maximum": 534, "minimum": 535, "multipli": [536, 537, 538, 539], "static_multipli": 540, "neg": [541, 542, 543, 544], "not_equ": [545, 546, 547, 548], "posit": [549, 550, 551, 552], "pow": [553, 554, 555, 556], "remaind": [557, 558, 559, 560], "round": [561, 562, 563, 564], "sign": [565, 566, 567, 568], "static_sign": 569, "sin": [570, 571, 572, 573], "static_sin": 574, "sinh": [575, 576, 577, 578], "static_sinh": 579, "sqrt": [580, 581, 582, 583], "squar": [584, 585, 586, 587], "subtract": [588, 590, 591, 592], "static_subtract": 589, "static_tan": 594, "static_tanh": 599, "trunc": [603, 604, 605, 606], "all_equ": [608, 609, 610, 611], "static_all_equ": 612, "arg_info": 613, "arg_nam": 614, "array_equ": 615, "arrays_equ": 616, "assert_supports_inplac": 617, "cache_fn": 618, "clip_matrix_norm": 619, "clip_vector_norm": [620, 621, 622], "container_typ": 623, "copy_arrai": 624, "cumprod": 625, "cumsum": 626, "current_backend_str": 627, "default": 628, "einops_rearrang": [629, 630, 631], "static_einops_rearrang": 632, "einops_reduc": [633, 634, 635], "static_einops_reduc": 636, "einops_repeat": [637, 638, 639], "static_einops_repeat": 640, "exist": 641, "floormod": 642, "fourier_encod": 643, "gather": [644, 645, 646], "static_gath": 647, "gather_nd": [648, 649, 650, 651], "static_gather_nd": 652, "get_all_arrays_in_memori": 653, "get_min_bas": 654, "get_min_denomin": 655, "get_num_dim": 656, "get_referrers_recurs": 657, "has_nan": 658, "indices_wher": 659, "inplace_arrays_support": 660, "inplace_decr": 661, "inplace_incr": 662, "inplace_upd": 663, "inplace_variables_support": 664, "is_arrai": 665, "is_ivy_arrai": 666, "is_ivy_contain": 667, "is_native_arrai": 668, "match_kwarg": 669, "multiprocess": 670, "num_arrays_in_memori": 671, "one_hot": 672, "print_all_arrays_in_memori": 673, "queue_timeout": 674, "scatter_flat": 675, "scatter_nd": 676, "set_min_bas": 677, "set_min_denomin": 678, "set_queue_timeout": 679, "set_shape_array_mod": 680, "set_tmp_dir": 681, "shape_array_mod": 683, "stable_divid": 684, "stable_pow": 685, "supports_inplac": 686, "tmp_dir": 687, "to_ivy_shap": 688, "to_list": 689, "to_native_shap": 690, "to_numpi": [691, 693, 694, 695], "static_to_numpi": 692, "to_scalar": 696, "try_else_non": 697, "unset_shape_array_mod": 698, "unstack": 699, "value_is_nan": 700, "adam_step": [702, 703, 704, 705], "static_adam_step": 706, "adam_upd": [707, 708, 709], "static_adam_upd": 710, "execute_with_gradi": 711, "gradient_descent_upd": [712, 713, 714], "static_gradient_descent_upd": 715, "is_vari": [716, 717, 718, 719], "static_is_vari": 720, "lamb_upd": [721, 722, 723], "static_lamb_upd": 724, "lars_upd": [725, 726, 727], "static_lars_upd": 728, "optimizer_upd": [729, 730, 731], "static_optimizer_upd": 732, "set_with_grad": 733, "stop_gradi": 734, "unset_with_grad": 735, "variabl": 736, "variable_data": 737, "with_grad": 738, "conv1d": [740, 1045], "conv1d_transpos": 741, "conv2d": [742, 1047], "conv2d_transpos": 743, "conv3d": [744, 1049], "conv3d_transpos": 745, "depthwise_conv2d": [746, 747, 748, 749], "static_depthwise_conv2d": 750, "dropout": [751, 1052], "lstm_updat": 753, "multi_head_attent": 754, "scaled_dot_product_attent": 755, "choleski": [757, 758, 759, 760], "static_choleski": 761, "cross": [762, 763, 764], "det": [765, 766, 767], "diagon": [768, 769, 770], "eigh": [771, 772, 773], "eigvalsh": [774, 775, 776], "inv": [777, 778, 779], "matmul": [780, 781, 782, 783], "matrix_norm": [784, 785, 786], "matrix_pow": 787, "matrix_rank": [788, 789, 790], "matrix_transpos": [791, 792, 793], "outer": [794, 795, 796], "pinv": [797, 798, 799], "qr": [800, 801, 802], "slogdet": 803, "solv": [804, 805, 806], "svd": [807, 808, 809], "svdval": [810, 811, 812], "tensordot": [813, 814, 815], "trace": [816, 817, 818], "vecdot": [819, 820, 821], "vector_norm": [822, 823, 824], "vector_to_skew_symmetric_matrix": [825, 826, 827], "binary_cross_entropi": [829, 830, 831, 832], "static_binary_cross_entropi": 833, "cross_entropi": [834, 835, 836, 837], "static_cross_entropi": 838, "sparse_cross_entropi": [839, 840, 841, 842], "static_sparse_cross_entropi": 843, "clip": [845, 846, 847, 848], "static_clip": 849, "concat": [850, 851, 852, 853], "constant_pad": [854, 855, 856, 857], "expand_dim": [858, 859, 860, 861], "flip": [862, 863, 864, 865], "permute_dim": [866, 867, 868, 869], "repeat": [870, 871, 872, 873], "reshap": [874, 875, 876, 877], "static_rol": 882, "split": 883, "squeez": [884, 885, 886, 887], "stack": [888, 889, 890, 891], "swapax": [892, 893, 894, 895], "tile": [896, 897, 898, 899], "zero_pad": [900, 901, 902, 903], "meta": 904, "fomaml_step": 905, "maml_step": 906, "reptile_step": 907, "nest": 908, "all_nested_indic": 909, "copy_nest": 910, "index_nest": 911, "insert_into_nest_at_index": 912, "insert_into_nest_at_indic": 913, "map": 914, "map_nest_at_index": 915, "map_nest_at_indic": 916, "multi_index_nest": 917, "nested_ani": 918, "nested_indices_wher": 919, "nested_map": 920, "nested_multi_map": 921, "prune_nest_at_index": 922, "prune_nest_at_indic": 923, "set_nest_at_index": 924, "set_nest_at_indic": 925, "layer_norm": [927, 928, 929, 930], "static_layer_norm": 931, "multinomi": 933, "randint": [934, 935], "static_randint": 936, "random_norm": 937, "random_uniform": [938, 939, 940], "static_random_uniform": 941, "seed": 942, "shuffl": 943, "argmax": 945, "argmin": 946, "nonzero": 947, "where": 948, "depend": [949, 950, 954, 955, 959, 965, 969], "output": [949, 950, 954, 955, 959, 965, 969], "unique_al": [950, 952, 953, 954], "static_unique_al": 951, "unique_count": [955, 957, 958, 959], "static_unique_count": 956, "unique_invers": [960, 962, 963, 964], "static_unique_invers": 961, "unique_valu": [965, 967, 968, 969], "static_unique_valu": 966, "argsort": [971, 972, 973, 974], "static_argsort": 975, "static_sort": 980, "einsum": [982, 983, 984, 985], "max": [986, 987, 988, 989], "mean": [990, 991, 992, 993], "min": [994, 995, 996, 997], "prod": [998, 999, 1000, 1001], "std": [1002, 1003, 1004, 1005], "sum": [1006, 1007, 1008, 1009], "var": [1010, 1011, 1012, 1013], "all": [1015, 1016, 1017, 1018], "static_al": 1019, "ani": [1020, 1021, 1022, 1023], "static_ani": 1024, "content": 1025, "overview": 1025, "quick": 1025, "start": 1025, "roadmap": [1025, 1031], "citat": 1025, "inspect": 1028, "add_array_spec": 1029, "fn_array_spec": 1030, "geglu": 1034, "to_ivy_modul": 1037, "firstlayersiren": 1039, "glorotuniform": 1040, "Ones": 1041, "siren": 1042, "conv1dtranspos": 1046, "conv2dtranspos": 1048, "conv3dtranspos": 1050, "depthwiseconv2d": 1051, "lstm": 1053, "multiheadattent": 1055, "layernorm": 1059, "adam": 1061, "lamb": 1062, "lar": 1063, "sgd": 1065, "sequenti": [1066, 1067], "verbos": 1069, "cprint": 1070}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})