Search.setIndex({"docnames": ["background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/2_navigating_the_code", "contributing/3_adding_functions", "contributing/4_adding_tests", "contributing/5_type_hints", "contributing/6_docstrings", "contributing/7_docstring_examples", "contributing/building_the_docs", "debugger", "debugger/debug_mode", "debugger/set_breakpoint_debug_mode", "debugger/set_debug_mode", "debugger/set_exception_debug_mode", "debugger/unset_debug_mode", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "framework_handler", "framework_handler/ContextManager:\n    def __init__", "framework_handler/choose_random_framework", "framework_handler/clear_framework_stack", "framework_handler/current_framework", "framework_handler/get_framework", "framework_handler/set_framework", "framework_handler/try_import_ivy_jax", "framework_handler/try_import_ivy_mxnet", "framework_handler/try_import_ivy_numpy", "framework_handler/try_import_ivy_tf", "framework_handler/try_import_ivy_torch", "framework_handler/unset_framework", "func_wrapper", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/convert_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_arrays_on_dev", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_dev", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_framework_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/image", "functional/ivy/image/bilinear_resample", "functional/ivy/image/float_img_to_uint8_img", "functional/ivy/image/gradient_image", "functional/ivy/image/linear_resample", "functional/ivy/image/random_crop", "functional/ivy/image/stack_images", "functional/ivy/image/uint8_img_to_float_img", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slodget", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/2_navigating_the_code.rst", "contributing/3_adding_functions.rst", "contributing/4_adding_tests.rst", "contributing/5_type_hints.rst", "contributing/6_docstrings.rst", "contributing/7_docstring_examples.rst", "contributing/building_the_docs.rst", "debugger.rst", "debugger/debug_mode.rst", "debugger/set_breakpoint_debug_mode.rst", "debugger/set_debug_mode.rst", "debugger/set_exception_debug_mode.rst", "debugger/unset_debug_mode.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "framework_handler.rst", "framework_handler/ContextManager:\n    def __init__.rst", "framework_handler/choose_random_framework.rst", "framework_handler/clear_framework_stack.rst", "framework_handler/current_framework.rst", "framework_handler/get_framework.rst", "framework_handler/set_framework.rst", "framework_handler/try_import_ivy_jax.rst", "framework_handler/try_import_ivy_mxnet.rst", "framework_handler/try_import_ivy_numpy.rst", "framework_handler/try_import_ivy_tf.rst", "framework_handler/try_import_ivy_torch.rst", "framework_handler/unset_framework.rst", "func_wrapper.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/convert_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_arrays_on_dev.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_dev.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_framework_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/image.rst", "functional/ivy/image/bilinear_resample.rst", "functional/ivy/image/float_img_to_uint8_img.rst", "functional/ivy/image/gradient_image.rst", "functional/ivy/image/linear_resample.rst", "functional/ivy/image/random_crop.rst", "functional/ivy/image/stack_images.rst", "functional/ivy/image/uint8_img_to_float_img.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slodget.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting up", "The Basics", "Navigating the Code", "Adding Functions", "Adding Tests", "Type Hints", "Docstrings", "Docstring Examples", "Building the Docs", "Debugger", "debug_mode", "set_breakpoint_debug_mode", "set_debug_mode", "set_exception_debug_mode", "unset_debug_mode", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Framework handler", "&lt;no title&gt;", "choose_random_framework", "clear_framework_stack", "current_framework", "get_framework", "set_framework", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_framework", "Func wrapper", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "closest_valid_dtype", "convert_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_arrays_on_dev", "gpu_is_available", "num_arrays_on_dev", "num_cpu_cores", "num_gpus", "percent_used_mem_on_dev", "print_all_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_dev", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "tan", "tanh", "trunc", "General", "all_equal", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_framework_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "adam_update", "execute_with_gradients", "gradient_descent_update", "is_variable", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Image", "bilinear_resample", "float_img_to_uint8_img", "gradient_image", "linear_resample", "random_crop", "stack_images", "uint8_img_to_float_img", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slodget", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"ml": [0, 2, 3, 4, 20, 21, 22, 24, 25, 26, 37, 425, 431], "explos": [0, 2, 425], "A": [0, 1, 2, 3, 4, 13, 21, 24, 38, 65, 70, 77, 114, 123, 124, 158, 164, 211, 222, 224, 249, 281, 324, 328, 340, 341, 342, 353, 363, 365, 373, 374, 376, 378, 380, 381, 382, 383, 384, 387, 388, 389, 390, 413, 414, 422, 423, 424, 425, 468, 469], "huge": [0, 2, 24, 425], "number": [0, 1, 5, 12, 21, 24, 26, 62, 63, 64, 65, 66, 67, 70, 74, 75, 76, 77, 84, 91, 100, 101, 102, 104, 105, 106, 114, 150, 151, 152, 164, 168, 172, 180, 188, 189, 208, 212, 213, 215, 223, 224, 244, 249, 250, 265, 283, 286, 303, 307, 311, 322, 324, 329, 335, 340, 342, 346, 353, 354, 356, 359, 360, 362, 363, 365, 367, 368, 369, 370, 371, 372, 393, 394, 398, 400, 403, 405, 406, 407, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457], "tool": [0, 3, 22, 26, 37, 38, 425], "have": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 37, 38, 54, 57, 65, 66, 68, 69, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 101, 114, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 223, 224, 232, 239, 240, 241, 243, 287, 293, 301, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 355, 357, 358, 359, 362, 364, 365, 393, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "explod": [0, 1, 425], "onto": [0, 1, 114, 143, 144, 373, 379, 385, 425], "scene": [0, 1, 22, 287, 290, 292, 294, 295, 296, 425], "b": [0, 3, 4, 6, 12, 20, 21, 22, 24, 25, 26, 36, 164, 168, 221, 224, 227, 324, 325, 337, 341, 348, 353, 362, 365, 425, 431], "why": [0, 2, 23, 425], "unifi": [0, 2, 21, 38, 114, 143, 144, 145, 146, 158, 425], "should": [0, 2, 5, 6, 7, 8, 10, 11, 12, 23, 24, 25, 62, 63, 65, 76, 80, 81, 84, 92, 114, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 223, 224, 230, 266, 287, 290, 292, 294, 295, 296, 324, 325, 326, 327, 328, 331, 332, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 353, 361, 393, 399, 400, 401, 402, 405, 406, 409, 413, 414, 415, 416, 418, 419, 420, 421, 425], "we": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 37, 38, 39, 44, 45, 51, 287, 291, 413, 414, 425, 431], "try": [0, 2, 3, 5, 23, 38, 39, 43, 224, 284, 425], "them": [0, 1, 2, 3, 21, 23, 24, 25, 38, 425], "c": [0, 2, 3, 4, 6, 12, 20, 21, 22, 24, 38, 224, 227, 287, 289, 290, 292, 294, 295, 296, 353, 365, 400, 403, 413, 419, 421, 425, 431], "standard": [0, 7, 8, 9, 11, 38, 65, 76, 84, 101, 164, 168, 221, 353, 362, 391, 392, 393, 396, 413, 419, 421, 425, 431, 460, 461], "re": [0, 1, 2, 4, 5, 6, 7, 8, 12, 23, 26, 38, 114, 158, 224, 239, 303, 304, 307, 353, 362, 425], "collabor": [0, 1, 2, 425], "The": [0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 20, 21, 24, 25, 26, 37, 39, 43, 44, 54, 55, 56, 59, 61, 62, 63, 65, 66, 71, 75, 76, 80, 81, 84, 88, 89, 90, 94, 95, 100, 103, 113, 114, 123, 124, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 221, 223, 224, 227, 230, 231, 237, 238, 244, 246, 255, 256, 257, 259, 260, 261, 262, 264, 269, 270, 271, 272, 273, 276, 277, 278, 286, 287, 289, 290, 292, 294, 295, 296, 298, 301, 303, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 435, 436, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466], "consortium": [0, 2, 425, 431], "python": [0, 1, 2, 5, 13, 21, 23, 24, 38, 39, 51, 65, 66, 114, 153, 163, 164, 213, 425, 431], "data": [0, 2, 7, 11, 23, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 130, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 223, 224, 227, 259, 260, 262, 279, 287, 293, 301, 303, 309, 311, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 353, 358, 359, 361, 362, 364, 365, 393, 399, 400, 401, 402, 403, 407, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 431], "api": [0, 1, 8, 11, 20, 22, 24, 38, 65, 76, 164, 168, 221, 353, 362, 425, 431], "open": [1, 2, 3, 4, 5, 37, 65, 66, 393, 395, 397, 425], "sourc": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472], "project": [1, 2, 3, 5, 13, 23, 25, 37, 38, 393, 394, 395, 396, 397], "ha": [1, 2, 3, 6, 7, 8, 11, 12, 21, 23, 25, 26, 37, 38, 39, 43, 44, 65, 76, 164, 165, 208, 212, 324, 332, 340, 341, 342, 345, 353, 357, 364, 405, 406, 407, 409, 413, 416, 418, 419, 420, 421], "grown": 1, "consider": [1, 10, 12], "recent": [1, 2], "year": [1, 3, 425], "especi": 1, "deep": [1, 24, 425], "learn": [1, 2, 26, 37, 164, 190, 287, 290, 292, 294, 295, 296, 369, 370, 371, 372, 425, 462, 463, 464, 465, 466, 467], "can": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 20, 21, 23, 24, 25, 26, 37, 38, 65, 67, 77, 84, 93, 114, 156, 157, 158, 303, 305, 324, 331, 353, 361, 413, 414, 425, 431], "seen": [1, 2, 12, 23, 24], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 21, 23, 24, 25, 26, 37, 38, 39, 43, 44, 45, 65, 66, 67, 69, 71, 72, 73, 76, 77, 79, 83, 84, 93, 95, 106, 114, 123, 124, 158, 164, 190, 218, 224, 238, 245, 246, 281, 287, 290, 294, 303, 308, 311, 319, 322, 324, 328, 342, 346, 353, 358, 361, 364, 369, 370, 371, 372, 373, 375, 385, 386, 393, 394, 395, 396, 397, 400, 404, 405, 406, 408, 413, 418, 419, 420, 421, 422, 423, 424, 425, 431, 435, 436, 446, 454, 457, 462, 466], "rapidli": 1, "increas": [1, 114, 138, 142, 146, 353, 356, 368, 373, 385], "github": 1, "repo": [1, 2, 3, 6, 9, 12, 21, 23, 24, 25, 26, 37, 425, 431], "contain": [1, 5, 8, 10, 11, 12, 13, 20, 21, 22, 25, 26, 38, 54, 57, 58, 60, 65, 66, 69, 71, 78, 80, 81, 82, 114, 135, 139, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 231, 232, 252, 261, 303, 309, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 351, 353, 354, 355, 359, 362, 373, 386, 393, 394, 400, 401, 402, 403, 405, 406, 407, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 462, 466, 468, 469], "term": [1, 6, 311, 321, 446, 456], "over": [1, 3, 10, 12, 23, 38, 39, 43, 324, 333, 344, 346, 347, 391, 392, 393, 397, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 460, 461], "time": [1, 2, 3, 6, 8, 21, 24, 26, 38, 287, 290, 294, 311, 321, 353, 367, 369, 370, 371, 372, 400, 401, 402, 405, 406, 407, 446, 457, 458, 459], "These": [1, 2, 3, 7, 8, 10, 11, 12, 21, 22, 24, 25, 26, 38, 324, 329, 425, 431], "ar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 37, 38, 65, 66, 114, 123, 124, 148, 150, 154, 158, 164, 181, 203, 204, 216, 221, 224, 225, 227, 228, 229, 247, 253, 254, 258, 265, 267, 279, 311, 320, 324, 326, 332, 333, 335, 338, 342, 343, 346, 353, 354, 358, 362, 373, 375, 379, 385, 393, 396, 397, 400, 401, 402, 403, 405, 406, 425, 468, 469], "written": [1, 7, 10, 21, 23, 26, 38], "mani": [1, 2, 3, 6, 9, 10, 11, 12, 21, 23, 24, 38, 353, 363], "differ": [1, 2, 3, 7, 8, 12, 21, 22, 23, 24, 25, 26, 38, 84, 101, 114, 135, 136, 139, 140, 164, 168, 208, 220, 311, 320, 353, 365, 413, 418, 420, 425], "framework": [1, 2, 3, 7, 8, 10, 15, 16, 17, 18, 19, 20, 23, 26, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472], "while": [1, 2, 12, 25, 26, 38, 164, 203, 204, 405, 406, 413, 416], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 37, 38, 65, 66, 67, 76, 77, 114, 138, 142, 146, 153, 158, 163, 164, 165, 168, 178, 187, 203, 204, 213, 221, 224, 244, 257, 268, 273, 287, 290, 292, 293, 294, 295, 296, 301, 311, 320, 324, 333, 340, 353, 357, 361, 362, 365, 373, 379, 385, 386, 400, 401, 405, 406, 409, 413, 416, 419, 421, 425, 431, 458, 459, 462, 463, 464, 465, 466, 467], "wonder": [1, 3, 23], "thing": [1, 2, 3, 6, 8, 23, 24], "research": [1, 37], "develop": [1, 2, 3, 4, 6, 37, 38, 425], "when": [1, 2, 6, 7, 8, 10, 11, 12, 21, 23, 24, 26, 38, 39, 43, 84, 90, 114, 164, 168, 187, 212, 224, 230, 257, 278, 349, 351, 373, 384, 400, 401, 402, 404, 413, 415, 417, 419, 421, 458, 459], "also": [1, 2, 4, 7, 8, 9, 10, 11, 12, 21, 23, 24, 25, 26, 37, 38, 65, 76, 164, 168, 221, 224, 257, 287, 290, 311, 320, 353, 362, 369, 370, 371, 372, 373, 374, 375, 383, 384, 385, 446, 456], "consid": [1, 2, 8, 12, 22, 23, 24, 164, 203, 204, 405, 406, 409], "speed": 1, "which": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 23, 24, 25, 26, 37, 38, 39, 43, 44, 54, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 99, 101, 102, 103, 113, 114, 123, 124, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 156, 157, 158, 164, 213, 224, 235, 236, 238, 245, 246, 247, 253, 265, 266, 267, 269, 270, 285, 287, 290, 291, 292, 294, 295, 296, 298, 300, 301, 303, 305, 307, 311, 322, 323, 324, 326, 328, 333, 341, 342, 346, 347, 349, 351, 353, 355, 358, 360, 362, 363, 365, 373, 378, 379, 380, 381, 386, 387, 388, 389, 390, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 435, 436, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "evolv": 1, "sharabl": 1, "code": [1, 2, 3, 4, 6, 8, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 36, 38, 425, 431], "significantli": 1, "hinder": 1, "librari": [1, 2, 3, 21, 26, 36, 38, 164, 187, 203, 204, 324, 329, 405, 406, 409, 413, 415, 416, 417, 425], "becom": [1, 3, 6, 12, 21, 26, 38, 39, 51, 353, 354], "outdat": 1, "matter": [1, 12, 39, 44], "month": 1, "rigor": 1, "maintain": [1, 6, 410, 411, 412], "against": [1, 84, 91, 324, 332, 333, 335, 338, 400, 401], "newest": 1, "version": [1, 2, 3, 5, 11, 21, 23, 324, 329], "For": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 21, 23, 24, 25, 26, 37, 38, 65, 66, 76, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 287, 293, 301, 324, 342, 345, 353, 354, 365, 405, 406, 409, 413, 415, 417, 420, 435, 436], "softwar": [1, 2], "pipelin": [1, 8, 13, 26], "where": [1, 2, 3, 6, 8, 21, 24, 25, 26, 38, 65, 72, 73, 76, 164, 172, 186, 199, 208, 212, 224, 253, 266, 324, 329, 335, 338, 339, 342, 343, 345, 346, 353, 354, 356, 357, 359, 365, 368, 373, 374, 384, 393, 394, 400, 403, 413, 419, 421, 422, 423, 424, 425], "rapid": [1, 2], "prototyp": 1, "vital": [1, 26], "signific": [1, 2, 38], "bottleneck": 1, "As": [1, 7, 8, 9, 11, 21, 23, 24, 25, 38, 405, 406, 409], "new": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 23, 26, 37, 65, 68, 71, 72, 73, 78, 79, 82, 83, 164, 173, 199, 211, 222, 224, 239, 240, 241, 244, 245, 246, 269, 270, 271, 272, 277, 278, 287, 290, 292, 294, 295, 296, 303, 305, 308, 310, 353, 357, 361, 365, 373, 378, 389, 390, 391, 392, 425, 435, 436, 446, 456, 460, 461, 462, 463, 464, 465, 466, 467], "futur": [1, 3, 6, 23, 324, 329], "avail": [1, 6, 11, 114, 149, 151, 152, 161, 224, 240], "specif": [1, 5, 7, 8, 21, 22, 23, 25, 26, 37, 38, 84, 106, 114, 156, 164, 203, 204, 224, 239, 240, 241, 264, 324, 329, 344, 353, 365, 369, 370, 371, 372, 393, 394, 413, 415, 416, 417, 425, 428, 430, 431, 458, 459], "quickli": [1, 3, 6, 24, 25], "obsolet": [1, 3], "user": [1, 2, 38, 446, 457, 458, 459], "constantli": 1, "invent": 1, "wheel": 1, "If": [1, 4, 5, 6, 7, 8, 11, 12, 13, 23, 24, 26, 38, 39, 43, 44, 45, 65, 66, 68, 69, 70, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 90, 92, 106, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 197, 198, 200, 201, 203, 204, 208, 212, 213, 215, 216, 217, 218, 221, 223, 287, 290, 292, 294, 295, 296, 324, 325, 326, 333, 335, 338, 339, 341, 342, 346, 347, 349, 351, 353, 357, 358, 362, 363, 364, 365, 369, 370, 371, 373, 385, 386, 393, 396, 397, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "our": [1, 2, 4, 6, 9, 12, 23, 24, 25, 26, 38, 425], "desir": [1, 84, 90, 93, 114, 159, 224, 253, 303, 309], "provid": [1, 5, 7, 8, 12, 21, 25, 37, 38, 62, 63, 65, 76, 84, 96, 97, 98, 103, 106, 113, 114, 224, 238, 266, 270, 287, 290, 292, 294, 295, 296, 324, 346, 353, 358, 365, 400, 401, 413, 419, 421, 422, 423, 424, 446, 455, 462, 463, 464, 465, 466, 467], "simultan": [1, 3], "support": [1, 2, 3, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 429, 430, 431, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 472], "all": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21, 23, 24, 25, 26, 37, 38, 62, 63, 65, 66, 80, 81, 114, 123, 148, 154, 224, 225, 227, 228, 247, 267, 282, 311, 321, 324, 341, 344, 347, 353, 358, 362, 369, 370, 371, 372, 373, 374, 375, 384, 385, 386, 393, 394, 397, 422, 425, 428, 430], "modern": [1, 2], "simpl": [1, 6, 7, 8, 12, 21, 23, 25, 26, 38, 224, 242], "scalabl": [1, 21], "manner": [1, 7, 24, 37, 38, 373, 385], "must": [1, 3, 6, 8, 9, 11, 12, 21, 25, 26, 54, 57, 65, 66, 68, 69, 70, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 114, 143, 144, 145, 146, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 223, 224, 232, 243, 270, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 349, 351, 353, 355, 357, 358, 359, 362, 364, 365, 393, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 462, 466], "determin": [1, 8, 11, 84, 93, 94, 100, 103, 104, 105, 113, 114, 149, 151, 152, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 186, 187, 192, 193, 194, 197, 198, 200, 201, 205, 208, 212, 213, 216, 217, 218, 221, 224, 225, 227, 228, 252, 254, 258, 259, 260, 261, 262, 279, 286, 287, 293, 311, 322, 324, 325, 326, 327, 328, 331, 332, 335, 337, 338, 340, 341, 345, 346, 347, 369, 370, 371, 372, 405, 406, 409, 422, 423, 424], "exactli": [1, 3, 8, 12, 425, 431], "common": [1, 8, 38], "ground": 1, "li": 1, "between": [1, 12, 20, 22, 23, 24, 26, 37, 65, 66, 84, 101, 164, 172, 212, 349, 351, 352, 353, 357, 365, 373, 379, 393, 395, 405, 406, 409, 425, 462, 464], "find": [1, 6, 21, 24, 405, 406, 409, 425], "exist": [1, 2, 8, 9, 11, 13, 21, 38, 224, 238, 462, 466], "essenti": [1, 2, 8, 12], "order": [1, 6, 7, 12, 13, 23, 24, 26, 38, 164, 172, 287, 290, 292, 294, 295, 296, 324, 329, 333, 342, 343, 347, 353, 358, 369, 370, 371, 400, 403, 405, 406, 409, 410, 411, 412, 468, 469], "design": [1, 2, 21, 23, 38], "univers": 1, "abstract": [1, 25, 38, 114, 129, 462, 466], "In": [1, 3, 5, 6, 8, 11, 12, 21, 23, 24, 25, 26, 37, 38, 114, 153, 160, 163, 164, 168, 208, 213, 353, 361, 393, 397, 425], "search": [1, 8, 12, 401, 402, 403, 404], "languag": [1, 3, 21], "first": [1, 2, 6, 8, 10, 12, 13, 21, 23, 24, 26, 62, 63, 65, 74, 75, 114, 145, 164, 168, 174, 176, 177, 178, 179, 184, 189, 191, 195, 196, 201, 202, 204, 205, 208, 210, 212, 220, 224, 227, 287, 291, 324, 326, 328, 329, 332, 337, 339, 342, 344, 346, 353, 355, 362, 365, 366, 369, 370, 371, 372, 373, 374, 383, 384, 393, 399, 400, 401, 402, 405, 406, 407, 446, 457, 458, 459, 462, 466], "see": [1, 23, 24, 37, 38, 65, 66, 71, 74, 75, 84, 92, 106, 164, 168, 174, 176, 177, 178, 179, 183, 187, 195, 201, 204, 205, 208, 210, 212, 213, 220, 324, 335, 338, 341, 346, 347, 400, 402, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "clear": [1, 2, 3, 6, 8, 12, 21, 23, 114, 132], "front": [1, 20, 21, 24, 425, 431], "runner": 1, "look": [1, 6, 7, 8, 10, 12, 13, 21, 23, 25, 26], "littl": [1, 23], "deeper": [1, 114, 138, 142, 146, 373, 384, 385], "follow": [1, 2, 7, 8, 10, 11, 12, 13, 20, 21, 23, 24, 25, 26, 38, 84, 102, 114, 158, 164, 213, 224, 255, 256, 257, 277, 278, 287, 290, 292, 294, 295, 296, 311, 322, 323, 324, 339, 347, 373, 379, 385, 405, 406, 409, 413, 414, 425, 446, 456, 462, 466], "same": [1, 3, 5, 8, 10, 12, 21, 23, 25, 26, 65, 66, 69, 73, 76, 79, 80, 81, 83, 84, 90, 91, 92, 114, 123, 124, 158, 164, 165, 168, 175, 180, 188, 208, 213, 214, 215, 223, 224, 243, 245, 246, 266, 269, 270, 287, 293, 298, 311, 312, 313, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 336, 338, 339, 341, 342, 345, 346, 353, 355, 358, 359, 362, 364, 365, 369, 370, 371, 373, 386, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 425, 446, 447, 448, 449, 450, 451, 452, 453], "core": [1, 21, 26, 114, 151, 425], "principl": 1, "oper": [1, 5, 7, 8, 10, 12, 24, 25, 65, 74, 75, 84, 106, 164, 168, 178, 213, 224, 229, 239, 240, 241, 279, 287, 290, 292, 294, 295, 296, 311, 312, 313, 314, 315, 316, 317, 318, 320], "expos": [1, 21, 25, 224, 233], "almost": [1, 9, 22, 24], "ident": [1, 3, 7, 8, 23, 24, 38, 373, 386, 425], "function": [1, 4, 7, 9, 10, 11, 12, 13, 20, 22, 23, 24, 25, 36, 37, 39, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 432, 433, 434, 462, 465, 467], "uniqu": [1, 8, 38, 114, 123, 124, 369, 370, 371, 372, 373, 379, 405, 406, 407, 408, 409], "syntax": [1, 2], "argument": [1, 7, 8, 10, 11, 12, 21, 23, 24, 39, 43, 44, 62, 63, 65, 66, 84, 106, 114, 123, 124, 138, 142, 146, 224, 226, 230, 238, 263, 270, 373, 379, 413, 420, 428, 430, 435, 436, 458, 459], "There": [1, 12, 21, 24, 38], "onli": [1, 4, 5, 7, 8, 9, 12, 21, 23, 24, 25, 26, 36, 38, 114, 164, 203, 204, 324, 332, 339, 353, 358, 373, 374, 375, 383, 384, 400, 401, 402, 413, 416, 425, 462, 463, 464, 465, 466, 467], "so": [1, 2, 6, 7, 8, 10, 11, 12, 21, 22, 23, 24, 25, 26, 38, 373, 374, 384, 425], "wai": [1, 2, 23, 24, 25, 26, 38], "manipul": [1, 8, 26, 37, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "tensor": [1, 7, 8, 10, 21, 23, 24, 25, 26, 38, 39, 51, 65, 74, 75, 84, 99, 164, 206, 207, 224, 266, 269, 270, 311, 319, 321, 324, 344, 353, 361, 363, 393, 394, 425, 446, 454, 456], "unsurprisingli": 1, "fundament": [1, 21], "consist": [1, 114, 146, 324, 329, 413, 414, 458, 459], "each": [1, 2, 3, 6, 8, 9, 11, 12, 20, 21, 23, 24, 26, 37, 54, 57, 58, 60, 65, 76, 84, 91, 114, 123, 124, 135, 136, 137, 138, 139, 140, 141, 145, 157, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 287, 290, 292, 294, 295, 296, 303, 306, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 329, 332, 335, 336, 338, 341, 342, 353, 356, 360, 362, 363, 365, 367, 368, 373, 379, 386, 393, 394, 400, 403, 405, 406, 407, 413, 414, 425, 431, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "veri": [1, 2, 6, 7, 8, 22, 24, 25, 26, 38, 425], "similar": [1, 7, 8, 24, 38, 164, 213, 311, 322, 446, 457], "convent": [1, 37, 324, 332, 413, 414], "those": [1, 6, 8, 21, 26, 65, 66, 287, 301, 324, 339, 342, 353, 354], "numpi": [1, 2, 8, 21, 23, 26, 39, 43, 44, 45, 224, 282, 413, 414, 425], "introduc": [1, 24, 353, 362], "2006": 1, "layer": [1, 8, 21, 22, 25, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 391, 392, 425, 437, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "therefor": [1, 7, 8, 9, 10, 11, 12, 21, 23, 25, 38], "present": [1, 8, 9, 21], "itself": [1, 8, 25, 37, 38, 373, 385], "cut": 1, "cloth": 1, "adher": [1, 2, 7, 9, 11, 21, 26], "set": [1, 4, 8, 21, 23, 24, 39, 43, 44, 45, 51, 114, 143, 144, 156, 157, 158, 164, 172, 224, 225, 271, 272, 273, 274, 287, 290, 292, 293, 294, 295, 296, 324, 326, 333, 335, 338, 341, 373, 374, 383, 384, 385, 389, 390, 393, 398, 400, 401, 406, 407, 408, 409, 410, 411, 412, 413, 419, 421, 446, 455, 462, 463, 464, 465, 466, 467], "semant": [1, 21, 26, 164, 213], "round": [1, 2, 3, 12, 21, 23, 24, 25, 26, 37, 164, 168, 180, 188, 189, 208, 218, 223, 425], "up": [1, 2, 3, 4, 6, 12, 21, 22, 23, 24, 25, 26, 37, 38], "hopefulli": [1, 2, 3, 21, 23, 24, 25, 26, 37], "paint": [1, 21], "pictur": [1, 21], "how": [1, 3, 4, 8, 12, 22, 23, 24, 25, 26, 37, 38, 425, 431, 446, 457, 458, 459], "pleas": [1, 2, 3, 6, 12, 21, 23, 24, 25, 26, 37], "check": [1, 2, 3, 6, 8, 12, 21, 23, 24, 25, 26, 37, 84, 94, 103, 113, 114, 153, 163, 224, 229, 242, 252, 259, 260, 261, 262, 279, 286, 287, 293, 324, 329, 373, 374, 383, 384, 385, 425], "out": [1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 21, 23, 24, 25, 26, 37, 54, 57, 65, 66, 114, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 235, 236, 243, 245, 311, 319, 321, 324, 327, 345, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 400, 401, 402, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 446, 454], "discuss": [1, 2, 3, 4, 6, 8, 12, 21, 23, 24, 25, 26, 37, 38, 425], "faq": [1, 2, 3, 12, 21, 23, 24, 25, 26, 37], "reach": [1, 2, 3, 6, 12, 21, 23, 24, 25, 26, 37, 114, 138, 142, 146, 373, 385], "discord": [1, 2, 3, 6, 12, 21, 23, 24, 25, 26, 37], "you": [1, 2, 3, 4, 5, 6, 8, 12, 21, 23, 24, 25, 26, 37, 38, 425, 431], "ani": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 21, 23, 24, 25, 26, 37, 38, 39, 43, 51, 62, 63, 65, 67, 77, 164, 184, 191, 196, 224, 225, 238, 239, 240, 241, 242, 252, 259, 260, 261, 262, 277, 278, 287, 291, 373, 379, 383, 393, 397, 422, 425], "question": [1, 2, 3, 12, 21, 23, 24, 25, 26, 37, 38], "With": [2, 3, 12, 21, 65, 76, 164, 168, 221, 324, 325, 333, 353, 362, 393, 394, 400, 401], "central": 2, "goal": 2, "being": [2, 3, 6, 7, 8, 12, 21, 24, 37, 38, 65, 66, 224, 268, 273, 405, 408, 425], "would": [2, 6, 7, 10, 11, 12, 21, 23, 25, 26, 38, 54, 59], "entir": [2, 3, 9, 12, 23, 24, 25, 26, 114, 158, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 455], "forgiven": 2, "rais": [2, 21, 23, 84, 92, 164, 186, 212, 224, 229, 248, 271, 278, 284, 324, 332, 334, 346, 353, 364, 365, 400, 403, 413, 415, 417, 422, 423, 424, 458, 459, 462, 466], "an": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 21, 23, 24, 25, 26, 37, 38, 54, 57, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 101, 104, 105, 106, 114, 136, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 230, 231, 232, 234, 243, 244, 253, 259, 260, 261, 262, 282, 283, 284, 287, 293, 298, 300, 301, 303, 305, 309, 310, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 373, 379, 393, 395, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 435, 436, 458, 459, 462, 463, 464, 466], "eyebrow": 2, "want": [2, 4, 6, 24, 25, 26, 38, 39, 44], "somehow": 2, "tensorflow": [2, 3, 8, 21, 26, 38, 39, 44, 51, 425], "pytorch": [2, 3, 8, 21, 23, 26, 38, 287, 290, 292, 294, 295, 296, 425, 462, 463, 464, 465, 466, 467], "jax": [2, 3, 8, 21, 23, 26, 38, 39, 43, 44, 45, 287, 293, 405, 406, 409, 425], "mxnet": [2, 8, 21, 26, 39, 44, 425], "other": [2, 6, 7, 8, 10, 12, 21, 23, 25, 26, 36, 37, 38, 62, 63, 65, 66, 164, 187, 224, 225, 287, 291, 393, 397, 405, 408, 413, 419, 421, 425], "strong": 2, "industri": 2, "back": [2, 8, 20, 21, 23, 38, 425, 431, 458, 459, 462, 466], "momentum": 2, "won": [2, 3, 8, 26], "t": [2, 3, 5, 6, 8, 12, 21, 23, 24, 25, 26, 38, 39, 44, 311, 320, 321], "ad": [2, 4, 6, 7, 10, 11, 12, 21, 25, 38, 224, 277, 278, 324, 329, 353, 357, 468, 469], "just": [2, 3, 6, 7, 8, 12, 21, 23, 24, 38, 446, 455], "make": [2, 3, 5, 6, 7, 8, 9, 11, 12, 21, 23, 24, 26, 114], "problem": [2, 6, 23], "even": [2, 3, 6, 8, 23, 24, 25, 26, 38, 164, 212], "wors": 2, "rather": [2, 8, 26, 38, 65, 66, 114, 158, 224, 259, 260, 262, 287, 293], "funni": 2, "comic": 2, "strip": 2, "s": [2, 3, 4, 5, 6, 8, 10, 12, 13, 21, 23, 24, 25, 26, 37, 38, 39, 43, 44, 45, 51, 64, 65, 76, 80, 81, 164, 213, 287, 290, 292, 294, 296, 324, 342, 343, 373, 379, 385, 413, 419, 421, 425, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "easi": 2, "feasibl": 2, "space": [2, 65, 66, 74, 75, 224, 244], "howev": [2, 7, 8, 10, 12, 23, 24, 25, 26, 38, 39, 51], "import": [2, 7, 8, 12, 21, 23, 24, 26, 38, 39, 43, 303, 309, 425, 431], "case": [2, 6, 7, 8, 9, 10, 11, 12, 21, 23, 25, 26, 38, 65, 76, 114, 153, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 215, 216, 217, 218, 221, 223, 224, 269, 270, 324, 333, 353, 361, 373, 376, 382, 413, 415, 416, 417, 419, 420, 421, 446, 457, 458, 459, 462, 466], "ivi": [2, 3, 5, 6, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472], "unlik": [2, 12, 114], "charger": 2, "charact": 2, "encod": [2, 24, 224, 244, 303, 305], "instant": [2, 425], "messag": [2, 21, 23, 471, 472], "much": [2, 6, 21, 23, 24], "one": [2, 3, 6, 8, 10, 12, 20, 23, 24, 26, 38, 39, 44, 65, 66, 76, 84, 91, 93, 95, 114, 143, 144, 145, 146, 158, 224, 263, 266, 269, 270, 324, 332, 333, 337, 339, 346, 347, 353, 357, 358, 364, 400, 401, 403, 405, 406, 407, 408, 409, 413, 414, 425], "doe": [2, 6, 7, 8, 12, 13, 21, 23, 24, 38, 353, 363], "mandat": [2, 9], "adopt": 2, "continu": [2, 3, 9, 38], "own": [2, 3, 9, 21, 38], "call": [2, 7, 8, 12, 13, 21, 23, 24, 25, 26, 38, 39, 45, 51, 114, 158, 224, 268, 273, 284, 287, 291, 373, 374, 379, 383, 384, 446, 457, 458, 459, 462, 466], "signatur": [2, 7, 8, 11, 12], "replac": [2, 7, 10, 13, 21, 23, 26, 38, 224, 269, 270, 353, 354, 393, 394], "your": [2, 3, 4, 5, 8, 24, 25, 38, 425], "1": [2, 3, 8, 12, 13, 20, 21, 23, 24, 25, 26, 38, 39, 45, 51, 54, 57, 58, 59, 65, 66, 73, 74, 75, 76, 78, 79, 83, 84, 90, 101, 114, 118, 121, 123, 128, 134, 138, 142, 146, 152, 157, 159, 164, 166, 167, 168, 169, 172, 175, 178, 180, 181, 182, 186, 187, 190, 195, 197, 198, 199, 200, 212, 215, 216, 221, 224, 227, 234, 245, 246, 266, 269, 270, 275, 278, 281, 282, 283, 285, 303, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 331, 335, 337, 341, 342, 345, 346, 347, 349, 351, 352, 353, 354, 355, 357, 359, 361, 362, 363, 364, 365, 373, 385, 391, 392, 393, 394, 395, 396, 397, 399, 410, 411, 412, 413, 414, 419, 420, 421, 422, 423, 424, 425, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "10": [2, 12, 13, 21, 23, 24, 65, 72, 75, 114, 164, 175, 198, 224, 268, 273, 287, 294, 393, 394, 395, 462, 464], "100": [2, 3, 24, 25, 26, 38, 425], "despit": [2, 8], "distinct": [2, 8, 20, 405, 406, 409, 425], "still": [2, 23, 25, 38], "believ": [2, 6], "share": [2, 5, 21], "bring": [2, 21, 22], "benefit": [2, 3, 8, 23, 24, 38], "unrel": 2, "what": [2, 3, 12, 21, 23, 24, 25, 26, 37, 38, 425], "again": [2, 3, 6, 8, 11, 12, 24, 26, 38], "contrari": 2, "bumpi": 2, "road": [2, 425], "allud": [2, 24], "most": [2, 5, 8, 21, 23, 24, 25, 38, 324, 329], "technolog": 2, "sector": [2, 164, 167, 170, 173], "full": [2, 3, 6, 8, 10, 21, 38, 65, 84, 101, 324, 339, 341, 342], "success": 2, "reason": [2, 8, 9, 10, 12, 21, 23, 164, 213], "build": [2, 4, 8, 20, 22, 25, 26, 405, 406, 409, 425, 446, 457, 458, 459], "custom": [2, 25], "comput": [2, 3, 21, 24, 38, 114, 158, 164, 168, 174, 177, 179, 184, 185, 190, 191, 195, 196, 202, 203, 204, 205, 208, 209, 210, 224, 231, 232, 235, 236, 287, 289, 290, 291, 292, 294, 295, 296, 298, 300, 303, 306, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 329, 330, 331, 332, 333, 339, 340, 341, 342, 346, 347, 349, 350, 351, 352, 373, 379, 405, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421], "thank": [2, 24], "interoper": 2, "compon": [2, 21], "bio": 2, "hardwar": 2, "initi": [2, 6, 114, 311, 321, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 462, 466], "pcie": 2, "interfac": [2, 26, 38], "motherboard": 2, "raid": 2, "storag": [2, 24], "virtual": 2, "bluetooth": 2, "wireless": 2, "exchang": 2, "btx": 2, "form": [2, 4, 25, 26, 65, 67, 77, 80, 81, 287, 290, 292, 294, 295, 296, 311, 324, 325, 327, 328, 329, 330, 331, 335, 336, 338, 339, 341, 342, 343, 345, 373, 375, 385], "factor": [2, 114, 123, 156, 157, 158, 287, 289, 290, 294, 295, 311, 312, 313, 314, 315, 316, 317, 318, 324, 325, 446, 447, 448, 449, 450, 451, 452, 453, 462, 463, 464, 465], "sata": 2, "connect": [2, 25, 26, 446, 456, 457], "host": [2, 38], "bu": 2, "adapt": [2, 287, 295, 462, 465], "devic": [2, 7, 23, 24, 38, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 224, 245, 246, 266, 269, 270, 393, 394, 395, 396, 397, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "html": [2, 11, 13], "enabl": [2, 6, 20, 21, 22, 24, 26, 38], "anyon": [2, 4, 38], "websit": 2, "tcp": 2, "ip": 2, "node": [2, 8, 373, 374, 383, 384], "commun": [2, 4, 5, 6, 38, 425, 431], "network": [2, 21, 25, 37, 311, 320, 425, 432, 446, 458, 459], "smtp": 2, "possibl": [2, 4, 5, 6, 12, 21, 24, 37, 38, 224, 263, 281, 303, 309, 413, 415, 417], "send": 2, "gmail": 2, "outlook": 2, "pop": 2, "us": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 23, 25, 26, 37, 38, 39, 44, 51, 64, 84, 100, 114, 123, 124, 149, 153, 156, 157, 158, 161, 163, 164, 168, 221, 224, 248, 249, 263, 269, 270, 271, 272, 277, 278, 287, 289, 290, 294, 295, 311, 319, 320, 322, 323, 324, 328, 333, 353, 360, 362, 369, 370, 371, 372, 373, 374, 376, 382, 383, 384, 386, 391, 392, 405, 406, 413, 414, 425, 446, 454, 457, 458, 459, 460, 461, 462, 464, 465], "email": 2, "ieee": [2, 64, 84, 101, 164, 168, 187, 208, 213, 218], "754": [2, 64, 84, 101, 164, 168, 187, 208, 213, 218], "allow": [2, 21, 38, 65, 74, 75, 224, 263, 458, 459], "calcul": [2, 11, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 182, 183, 186, 187, 197, 198, 199, 200, 201, 208, 212, 216, 217, 218, 220, 221, 349, 351, 413, 415, 416, 417, 418, 419, 420, 421], "live": [2, 3], "depend": [2, 8, 10, 11, 21, 38, 84, 90, 164, 165, 166, 167, 169, 170, 171, 172, 181, 182, 186, 187, 197, 198, 199, 200, 212, 216, 217, 221, 324, 329, 339, 341, 342, 400, 404, 410, 411, 412], "did": [2, 11, 26], "aris": [2, 38], "until": [2, 6, 38], "wa": [2, 12, 21, 23, 39, 51, 224, 284, 373, 386, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "substanti": 2, "innov": 2, "growth": 2, "usag": [2, 21, 114, 158], "relev": [2, 8, 10, 12, 24, 462, 463, 464, 465, 466, 467], "area": [2, 36, 164, 167, 170, 173, 425], "necess": 2, "parti": [2, 38], "could": [2, 3, 8, 10, 12, 21, 23, 24, 25, 405, 406, 409], "easili": [2, 24, 25, 26, 38, 425], "engag": [2, 4, 6], "regard": [2, 114], "effect": [2, 10, 38, 65, 76, 287, 296, 413, 419, 421], "2015": 2, "sinc": 2, "alongsid": 2, "machin": [2, 37, 84, 101, 102, 164, 190, 324, 335, 338], "given": [2, 3, 6, 8, 11, 21, 23, 25, 26, 37, 65, 66, 68, 74, 75, 114, 147, 153, 156, 157, 158, 160, 163, 224, 235, 236, 246, 269, 270, 285, 287, 289, 290, 292, 294, 295, 296, 311, 312, 313, 314, 315, 316, 317, 318, 324, 348, 349, 351, 353, 354, 357, 358, 360, 362, 363, 367, 373, 380, 381, 393, 395, 396, 397, 399, 410, 412, 435, 436], "frame": [2, 37], "less": [2, 7, 12, 21, 164, 166, 167, 169, 172, 180, 197, 198, 200, 212, 213, 215, 218, 324, 335, 338, 347, 393, 397, 413, 421], "matur": [2, 38], "state": [2, 20, 21, 22, 24, 37, 164, 208, 311, 321, 425, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "than": [2, 8, 12, 21, 24, 25, 26, 38, 65, 66, 84, 101, 114, 158, 164, 166, 167, 169, 172, 176, 178, 180, 188, 189, 197, 198, 200, 206, 212, 213, 215, 218, 223, 224, 259, 260, 262, 287, 293, 324, 326, 332, 335, 338, 347, 353, 354, 358, 364, 393, 397, 405, 406, 407, 409, 413, 418, 419, 420, 421], "preced": [2, 25], "mention": [2, 6], "aros": 2, "70": [2, 324, 325], "80": 2, "90": 2, "effort": [2, 4, 38], "stage": [2, 4, 6, 13], "complet": [2, 6, 9, 23, 24, 324, 339], "natur": [2, 37, 164, 186, 197, 199, 324, 340], "like": [2, 6, 7, 8, 11, 12, 21, 23, 24, 25, 26, 37, 38, 287, 293, 393, 397, 425], "certainli": 2, "mission": [2, 425], "creat": [2, 4, 8, 13, 21, 22, 25, 36, 37, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 114, 123, 124, 224, 245, 246, 266, 269, 270, 281, 287, 300, 393, 394, 395, 397, 425, 431, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "At": 2, "process": [2, 3, 4, 6, 13, 21, 26, 114, 123, 124, 153, 163], "ourselv": 2, "lead": [2, 3, 38, 324, 339, 342], "quansight": 2, "compani": 2, "made": [2, 6, 21, 23], "organ": [2, 7], "panda": 2, "scipi": 2, "conda": 2, "dask": [2, 405, 406, 409], "apach": 2, "onnx": 2, "scikit": 2, "jupyt": 2, "aw": 2, "cupi": 2, "net": [2, 3, 21, 26], "sympi": 2, "rai": [2, 164, 172], "modin": 2, "spyder": 2, "includ": [2, 7, 8, 9, 12, 37, 38, 65, 66, 67, 77, 224, 252, 286, 324, 347, 373, 374, 393, 397, 400, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 430, 446, 456, 457, 460, 461], "member": [2, 6], "googl": [2, 425], "octoml": 2, "einop": [2, 224, 239, 240, 241], "further": [2, 3, 6, 12, 13, 20, 24, 25, 425], "sponsor": 2, "lg": 2, "electron": 2, "microsoft": 2, "d": [2, 3, 4, 6, 24, 303, 306, 311, 312, 313, 314, 315, 316, 317, 318, 324, 328, 425, 431], "e": [2, 3, 4, 6, 10, 24, 38, 39, 44, 64, 65, 76, 84, 89, 106, 114, 130, 164, 165, 172, 176, 178, 180, 186, 188, 189, 192, 197, 199, 206, 207, 212, 213, 287, 290, 292, 294, 295, 296, 324, 326, 332, 335, 338, 341, 342, 347, 353, 365, 393, 396, 397, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421], "shaw": 2, "co": [2, 21, 37, 164, 224, 244, 425], "intel": 2, "togeth": [2, 25, 26, 38, 468, 469], "major": [2, 8, 38, 400, 403], "involv": [2, 4, 8, 13, 26, 84, 106, 164, 168, 208, 425, 431], "anoth": [2, 6, 23, 26, 65, 71, 84, 91, 93, 95], "promis": 2, "sign": [2, 22, 26, 65, 66, 164, 165, 168, 172, 178, 208, 213, 324, 340, 405, 406, 409, 413, 418, 420], "pursuit": 2, "unif": [2, 4, 23, 425, 431], "clearli": [2, 12], "lot": [2, 3, 23, 38], "thought": [2, 6], "care": [2, 26], "attent": [2, 6, 311, 322, 323, 446, 457], "gone": 2, "simplifi": [2, 21, 22, 23, 25], "compat": [2, 84, 92, 164, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 191, 195, 196, 201, 202, 204, 205, 208, 210, 212, 213, 220, 324, 335, 338, 341, 344, 346, 347, 353, 361, 400, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "excit": [2, 4, 425], "complianc": 2, "hope": [2, 38], "due": [2, 164, 208], "suit": [2, 24, 37], "some": [2, 3, 6, 8, 11, 12, 22, 23, 24, 25, 37, 38, 164, 187, 287, 289, 290, 292, 294, 295, 296, 301, 311, 319, 425, 446, 454], "motiv": [2, 23], "great": [2, 3, 21, 23], "convinc": 2, "celebr": 2, "encourag": [2, 37, 38, 425, 431], "foundat": 2, "point": [3, 6, 10, 11, 12, 21, 23, 24, 37, 64, 65, 66, 68, 70, 72, 78, 82, 84, 90, 101, 104, 106, 164, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 324, 325, 327, 329, 330, 331, 335, 338, 339, 341, 342, 347, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421], "mai": [3, 23, 25, 65, 66, 71, 164, 184, 191, 196, 203, 204, 224, 238, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417], "ask": [3, 21, 23, 38], "perfectli": 3, "happi": [3, 38], "current": [3, 5, 8, 13, 21, 26, 37, 38, 39, 43, 44, 51, 84, 95, 103, 113, 114, 123, 147, 148, 150, 154, 224, 247, 254, 258, 265, 267, 373, 374, 383, 384, 425], "abund": 3, "better": [3, 8, 23, 24, 25], "ll": [3, 4, 12, 24], "give": [3, 6, 12, 23, 353, 361, 413, 414], "two": [3, 9, 12, 20, 24, 26, 65, 66, 70, 76, 80, 81, 164, 178, 224, 227, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 353, 366, 405, 406, 408, 409, 425], "exampl": [3, 4, 7, 8, 10, 11, 21, 23, 24, 25, 26, 37, 38, 39, 43, 44, 45, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 72, 73, 76, 78, 79, 82, 83, 84, 90, 114, 134, 149, 151, 152, 159, 161, 164, 168, 173, 175, 178, 180, 181, 186, 190, 195, 221, 224, 227, 234, 249, 275, 281, 282, 283, 303, 306, 309, 311, 312, 316, 324, 325, 327, 328, 331, 335, 342, 345, 349, 351, 353, 354, 355, 357, 361, 362, 364, 365, 393, 394, 395, 396, 397, 399, 413, 414, 419, 420, 425], "streamlin": 3, "workflow": [3, 24, 36, 425], "save": [3, 38, 224, 274, 303, 305, 458, 459], "week": 3, "let": [3, 8, 10, 12, 21, 23, 24, 25, 26, 413, 416, 419, 420, 421, 425], "sai": [3, 23], "deepmind": 3, "releas": [3, 5], "awesom": 3, "paper": 3, "love": 3, "choic": [3, 24, 413, 419, 421], "perceiverio": 3, "happen": [3, 6, 24], "slew": 3, "rush": 3, "f": [3, 4, 6, 21, 24, 26, 164, 190, 224, 254, 258, 303, 308], "g": [3, 4, 38, 84, 89, 106, 114, 130, 393, 396, 397, 405, 406, 409, 413, 415, 417, 418, 420], "inevit": 3, "deviat": [3, 391, 392, 393, 396, 413, 419, 460, 461], "origin": [3, 21, 23, 164, 172, 324, 333, 353, 361, 362], "often": [3, 38], "erron": 3, "train": [3, 24, 25, 26, 36, 37, 38, 287, 289, 290, 294, 425], "poor": 3, "converg": 3, "perform": [3, 7, 8, 9, 10, 12, 21, 24, 38, 54, 59, 65, 74, 75, 114, 224, 235, 239, 240, 241, 255, 256, 257, 287, 290, 292, 294, 295, 296, 303, 304, 307, 311, 319, 321, 324, 342, 369, 370, 371, 372, 373, 380, 381, 422, 423, 424], "issu": [3, 4, 21, 23, 25, 38], "etc": [3, 6, 7, 8, 10, 21, 23, 24, 38, 65, 74, 75, 224, 245, 246, 266, 269, 270, 393, 394, 395, 397, 405, 406, 409, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "publish": [3, 38], "manag": [3, 4, 38, 114], "get": [3, 4, 5, 6, 21, 22, 23, 24, 25, 84, 99, 100, 101, 102, 114, 123, 124, 134, 147, 148, 153, 157, 160, 163, 224, 226, 247, 248, 249, 268, 425, 431, 446, 455], "work": [3, 6, 8, 21, 22, 23, 25, 26, 425, 431], "repositori": [3, 5, 6, 9], "pull": [3, 4, 8], "request": [3, 4, 8], "confus": 3, "do": [3, 6, 7, 8, 10, 12, 21, 23, 24, 25, 26, 38, 164, 213, 287, 293, 301, 373, 374, 383, 384, 385], "don": [3, 6, 25, 38], "expect": [3, 38, 224, 226], "codebas": [3, 4, 20, 114, 156, 157, 425], "total": [3, 4, 24, 25, 38, 114, 160, 400, 403, 413, 419, 421], "hour": 3, "spent": 3, "spin": 3, "off": [3, 324, 328, 345], "test": [3, 4, 84, 104, 105, 164, 192, 193, 194, 422, 423, 424], "error": [3, 5, 8, 23, 38, 54, 55, 114, 164, 185, 413, 415, 417, 458, 459, 462, 466], "iter": [3, 21, 24, 62, 63, 114, 137, 139, 140, 141, 142, 145, 158, 224, 225, 270, 275, 353, 356, 360, 363, 367, 368, 373, 374, 375, 379, 383, 384, 385], "address": [3, 6, 21], "sake": 3, "singl": [3, 8, 12, 21, 24, 25, 26, 38, 114, 123, 124, 143, 144, 145, 146, 224, 283, 286, 393, 396, 397, 405, 406], "multipl": [3, 38, 164, 208, 224, 263, 324, 331, 353, 363, 391, 392, 400, 401, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 456], "line": [3, 10, 22, 23, 24, 25, 36, 425, 431], "convert": [3, 7, 8, 21, 38, 65, 67, 77, 84, 88, 89, 95, 114, 130, 131, 224, 276, 282, 283, 303, 305, 310, 324, 348, 373, 375, 385, 436], "directli": [3, 6, 7, 8, 9, 21, 23, 25, 26, 37, 38, 373, 385], "graph": [3, 22, 38, 287, 290, 292, 294, 295, 296, 405, 406, 409, 458, 459], "guarante": [3, 10, 405, 406], "turn": [3, 12], "4": [3, 12, 13, 21, 23, 24, 25, 26, 65, 73, 76, 79, 83, 164, 168, 172, 221, 224, 244, 303, 305, 306, 310, 311, 314, 315, 316, 318, 321, 324, 327, 328, 331, 335, 345, 353, 355, 361, 362, 393, 394, 399, 413, 414, 425, 462, 463, 464, 465, 467], "step": [3, 6, 8, 12, 13, 21, 24, 25, 26, 37, 65, 66, 74, 75, 114, 287, 289, 290, 292, 294, 295, 296, 369, 370, 371, 372, 425, 462, 463, 464, 465, 466, 467], "take": [3, 6, 8, 10, 12, 21, 23, 25, 26, 38, 303, 307, 425, 431], "few": [3, 8, 22, 23, 24, 25, 36, 425, 431], "second": [3, 12, 23, 114, 145, 164, 168, 174, 176, 177, 178, 179, 184, 189, 191, 195, 196, 201, 202, 204, 205, 208, 210, 212, 220, 224, 227, 268, 273, 287, 289, 290, 294, 324, 326, 328, 329, 332, 337, 339, 342, 344, 346, 353, 365, 366, 369, 371, 405, 406, 407, 462, 463, 464], "automat": [3, 6, 8, 20, 21, 22, 25, 26, 425], "convers": [3, 20, 22, 26, 37, 38, 425, 431], "everyon": [3, 4, 38], "regardless": [3, 4, 23, 26, 62, 63], "wouldn": 3, "nice": 3, "write": [3, 4, 6, 11, 13, 21, 23, 26, 54, 57, 114, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 232, 236, 243, 245, 349, 351, 353, 357, 358, 359, 362, 364, 365, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "onc": [3, 6, 8, 21, 24, 114, 158, 324, 331, 342, 393, 394], "know": [3, 405, 406, 409], "among": [3, 10], "frantic": 3, "port": 3, "last": [3, 39, 51, 54, 59, 303, 307, 311, 321, 324, 326, 328, 333, 345, 346, 349, 351, 353, 358, 362, 363, 365, 410, 411, 412, 422, 423, 424, 446, 456], "lucid": 3, "honk": 3, "improv": [3, 21], "understand": [3, 12], "pattern": [3, 8, 10, 224, 239, 240, 241], "hasn": 3, "chang": [3, 6, 11, 21, 25, 38, 114, 353, 361, 373, 375, 385, 425, 431], "now": [3, 23, 24, 26, 37, 38, 446, 457, 458, 459], "spend": 3, "torchvis": 3, "probabl": [3, 311, 319, 393, 394, 446, 454], "sonnet": 3, "about": [3, 21, 25, 26, 38, 84, 101, 102], "next": [3, 12, 23, 24, 84, 101, 425, 458, 459, 462, 463, 464, 465, 466, 467], "everyth": [3, 22, 38], "zero": [3, 8, 12, 21, 24, 25, 65, 68, 70, 76, 80, 81, 83, 84, 90, 164, 168, 176, 187, 203, 204, 208, 212, 213, 221, 224, 266, 269, 270, 287, 289, 290, 294, 295, 311, 319, 324, 327, 332, 335, 338, 346, 347, 353, 362, 368, 400, 401, 402, 403, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 437, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 462, 463, 464, 465], "need": [3, 6, 7, 8, 9, 11, 12, 21, 23, 24, 37, 38, 224, 231, 232, 353, 357], "said": 3, "high": [3, 24, 393, 395, 397], "level": [3, 4, 8, 21, 24, 25, 26, 38], "modul": [3, 5, 8, 13, 21, 22, 24, 26, 37, 38, 39, 43, 44, 224, 264, 393, 394, 395, 396, 397, 425, 432, 433, 434, 435, 436, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 468, 469], "optim": [3, 22, 24, 26, 37, 114, 287, 290, 292, 294, 295, 296, 369, 370, 371, 372, 425, 463, 464, 465, 467], "trainer": [3, 36, 38, 425], "statu": 3, "quo": 3, "kera": 3, "dopamin": 3, "ignit": 3, "catalyst": 3, "lightn": 3, "fastai": 3, "haiku": [3, 26], "flax": [3, 26, 38], "trax": [3, 26], "objax": [3, 26], "idea": [3, 37], "fulli": [3, 7, 21, 22, 23, 24, 25, 26, 38, 446, 456, 457], "offer": [3, 25], "strongli": [4, 425, 431], "welcom": [4, 425, 431], "absolut": [4, 164, 165, 324, 340], "skill": 4, "whether": [4, 8, 54, 55, 62, 63, 84, 90, 99, 103, 104, 105, 113, 114, 134, 145, 149, 153, 158, 161, 163, 164, 194, 224, 225, 227, 228, 235, 238, 242, 244, 250, 252, 254, 258, 259, 260, 261, 262, 263, 275, 279, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 298, 311, 319, 324, 329, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 386, 393, 394, 422, 423, 424, 435, 436, 446, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "vetern": 4, "beginn": 4, "start": [4, 6, 8, 11, 12, 13, 21, 23, 24, 25, 37, 65, 66, 74, 75, 114, 129], "aspect": [4, 24, 303, 309, 425], "guid": [4, 6, 425], "through": [4, 6, 12, 21, 23, 24, 25, 26, 37, 164, 172], "journei": [4, 425, 431], "inclusvi": 4, "big": [4, 38], "team": [4, 6], "board": 4, "contributor": [4, 6, 425], "split": [4, 20, 21, 38, 114, 123, 139, 140, 141, 142, 156, 157, 158, 224, 263, 353, 425], "section": [4, 8, 9, 11, 24, 25, 405, 406, 409], "below": [4, 5, 8, 11, 12, 21, 22, 23, 24, 25, 26, 37, 65, 76, 80, 81, 164, 168, 221, 324, 328, 345, 353, 362, 425], "best": [4, 6, 8, 12, 224, 263], "go": [4, 5, 12, 24, 373, 384], "finish": [4, 425], "dive": [4, 23, 24, 38], "right": [4, 5, 6, 12, 24, 164, 176, 178, 324, 342], "environ": [4, 5, 37], "basic": 4, "fork": [4, 224, 264], "navig": 4, "quick": [4, 25], "tour": 4, "add": [4, 5, 7, 8, 9, 10, 11, 21, 23, 164, 349, 350, 352, 391, 392, 425, 431, 460, 461], "type": [4, 5, 7, 11, 12, 21, 23, 24, 26, 39, 45, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 130, 131, 132, 134, 146, 147, 149, 151, 152, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 259, 260, 261, 262, 266, 269, 270, 271, 272, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 293, 298, 300, 303, 307, 309, 311, 312, 316, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 375, 379, 383, 384, 385, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "hint": [4, 7, 8, 11, 65, 76, 164, 168, 221, 353, 362], "correct": [4, 7, 8, 413, 419, 421, 425], "docstr": [4, 7, 8, 13, 65, 76, 164, 168, 221, 353, 362], "properli": 4, "h": [4, 303, 304, 305, 306, 308, 310, 311, 314, 315, 316, 317, 318], "page": [5, 22, 26, 36, 425, 431], "instruct": 5, "contribut": [5, 6, 21, 431], "toward": [5, 21, 353, 362, 425, 431], "remot": 5, "interpret": [5, 65, 67, 77], "docker": 5, "help": [5, 6, 12, 23, 24, 25, 36, 413, 420, 425], "packag": [5, 38], "mitig": 5, "conflict": [5, 6, 24], "addit": [5, 6, 8, 9, 11, 23, 24, 26, 164, 168, 224, 239, 240, 241, 391, 392, 446, 456], "yet": [5, 8], "system": [5, 38, 324, 341], "jaxlib": [5, 8, 23, 39, 45], "requir": [5, 7, 8, 9, 12, 13, 23, 38, 62, 63, 164, 218, 324, 329, 353, 365, 435, 436], "setup": 5, "instal": [5, 13, 37, 425], "desktop": 5, "wsl": 5, "2": [5, 12, 13, 20, 21, 23, 24, 25, 26, 39, 43, 54, 56, 58, 64, 65, 72, 73, 76, 78, 79, 83, 84, 90, 114, 134, 151, 159, 164, 168, 169, 171, 172, 175, 178, 181, 186, 190, 195, 200, 221, 224, 227, 231, 232, 275, 303, 304, 306, 309, 311, 314, 315, 316, 318, 324, 325, 327, 328, 331, 332, 333, 335, 338, 339, 342, 344, 345, 347, 353, 355, 357, 361, 362, 364, 393, 394, 395, 396, 397, 399, 413, 414, 425], "run": [5, 6, 9, 13, 21, 22, 23, 24, 25, 26, 37, 38, 114, 123, 287, 289, 290, 294, 369, 370, 371, 372, 446, 457, 458, 459], "command": [5, 13, 425], "powershel": 5, "admin": 5, "mode": [5, 12, 38, 62, 63, 114, 143, 144, 145, 146, 158, 164, 168, 208, 324, 339], "visit": 5, "link": 5, "doesn": [5, 12, 21, 38, 39, 44], "latest": [5, 11, 13, 446, 455], "imag": [5, 8, 13, 21, 22, 24, 26, 37, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 425], "cmd": 5, "rm": 5, "unifyai": [5, 13], "python3": 5, "pycharm": 5, "profession": 5, "clone": [5, 114, 135, 136, 137, 138], "click": [5, 425], "icon": 5, "side": [5, 6], "choos": [5, 26, 164, 203, 204, 400, 404, 405, 406, 409, 413, 415, 416, 417], "left": [5, 12, 164, 176, 324, 329, 333, 342, 400, 401], "panel": 5, "path": [5, 13], "press": [5, 24, 425], "ok": 5, "done": [5, 6, 12, 24], "caus": [5, 12], "earlier": 5, "note": [5, 6, 7, 12, 164, 213, 324, 329, 342, 353, 365, 413, 416], "Then": [6, 13, 23, 38], "practic": 6, "separ": [6, 21, 23, 24], "branch": [6, 38, 62, 63, 164, 172], "master": 6, "simpli": [6, 8, 11, 21, 25, 26, 164, 187], "role": [6, 22], "kept": [6, 369, 370, 371], "date": 6, "upstream": [6, 9], "pr": 6, "base": [6, 9, 21, 37, 39, 65, 75, 84, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 164, 186, 197, 198, 199, 200, 212, 224, 248, 271, 278, 287, 405, 406, 409, 413, 414, 432, 433, 434, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "more": [6, 8, 12, 21, 22, 23, 24, 25, 26, 37, 38, 65, 66, 84, 91, 164, 187, 324, 332, 353, 358, 405, 406, 407, 409, 425], "complic": [6, 8, 21], "keep": [6, 9, 22, 24, 26, 224, 285], "script": [6, 21, 38], "root": [6, 13, 24, 164, 218, 393, 394, 395, 396, 397], "folder": [6, 7, 9, 13], "merge_with_upstream": 6, "sh": 6, "To": [6, 8, 24, 25, 26, 425], "updat": [6, 9, 12, 13, 21, 23, 24, 26, 114, 123, 224, 257, 269, 270, 287, 289, 290, 292, 294, 295, 296, 311, 321, 369, 370, 371, 373, 380, 381, 389, 390, 435, 436, 462, 463, 464, 465, 466, 467], "name_of_your_branch": 6, "extens": [6, 11, 65, 76, 164, 168, 221, 353, 362], "act": [6, 12, 38], "placehold": [6, 373, 385], "track": [6, 114, 373, 385, 458, 459], "relat": [6, 37], "sub": [6, 23, 24, 25, 114, 139, 140, 143, 144, 145, 146, 324, 328, 353, 363, 369, 370, 371, 372, 425], "task": [6, 37, 369, 370, 371, 372], "i": [6, 10, 21, 24, 26, 39, 44, 65, 66, 76, 164, 165, 172, 176, 178, 180, 188, 189, 192, 206, 207, 212, 213, 224, 227, 287, 290, 292, 294, 295, 296, 324, 326, 332, 335, 338, 341, 342, 345, 347, 353, 365, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421], "mark": 6, "tick": 6, "ii": [6, 413, 414], "iii": 6, "comment": 6, "titl": [6, 425], "name": [6, 11, 13, 21, 23, 24, 26, 62, 63, 324, 329, 339, 342, 405, 406, 407], "refer": [6, 10, 38, 65, 70, 164, 187, 199, 287, 289, 290, 324, 346, 348, 413, 419, 421, 422, 423, 424, 446, 456], "issue_numb": 6, "delet": [6, 13], "No": [6, 21], "wait": 6, "befor": [6, 7, 8, 21, 24, 38, 39, 51, 114, 158, 164, 223, 311, 322, 323, 369, 370, 371, 373, 385, 405, 406, 409, 413, 418, 420], "progress": [6, 22, 26], "soon": [6, 36, 38, 425, 431], "partial": [6, 458, 459], "solut": [6, 324, 341], "review": [6, 8], "either": [6, 8, 10, 11, 21, 23, 24, 38, 39, 44, 51, 65, 71, 164, 168, 172, 193, 197, 198, 200, 201, 208, 213, 215, 216, 221, 224, 238, 259, 263, 264, 324, 332, 369, 370, 371, 372, 413, 418, 420, 446, 457, 458, 459], "merg": 6, "everi": [6, 8, 9, 12, 13, 21, 23, 25, 65, 72, 73, 224, 225], "respond": 6, "good": [6, 11, 12, 21, 25], "shape": [6, 7, 8, 11, 12, 21, 23, 24, 25, 26, 54, 57, 65, 68, 69, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 114, 126, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 232, 243, 246, 250, 266, 269, 270, 276, 303, 306, 308, 309, 311, 313, 315, 317, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 349, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 368, 393, 395, 396, 397, 400, 401, 407, 410, 411, 412, 413, 414, 422, 423, 424, 425, 446, 448, 449, 450, 451, 452, 453, 460, 461], "move": [6, 7, 114, 159], "within": [6, 25, 38, 65, 66, 393, 397], "7": [6, 8, 12, 13, 164, 168, 175, 186, 221, 287, 289, 290, 294, 303, 306, 324, 328, 349, 350, 351, 352, 393, 394, 395, 413, 414], "dai": 6, "close": [6, 164, 187, 303, 309, 324, 342], "method": [6, 7, 8, 9, 10, 11, 12, 21, 22, 25, 26, 38, 65, 71, 76, 164, 168, 221, 224, 233, 269, 270, 287, 294, 295, 353, 362, 373, 374, 384, 385, 386, 425, 446, 457, 458, 459], "free": [6, 37], "likewis": [6, 8, 24], "associ": [6, 38, 39, 44, 164, 168, 208, 324, 335, 338, 348], "freed": 6, "flag": [6, 23, 287, 293], "purpos": [6, 8, 10, 12, 13, 20, 23, 164, 187, 425], "ensur": [6, 7, 8, 10], "remain": [6, 7, 12, 38, 164, 168, 208, 213, 353, 361, 373, 379], "access": [6, 13], "prioriti": [6, 39, 43], "who": [6, 38], "short": [6, 25, 311, 321], "basi": [6, 9, 24], "avoid": [6, 23, 114, 164, 187], "situat": [6, 26], "alloc": [6, 38, 65, 80, 81, 84, 90, 114], "upon": [6, 8, 12], "long": [6, 12, 311, 321], "period": 6, "whilst": [6, 26], "prevet": 6, "instead": [6, 8, 12, 21, 23, 24, 38], "unabl": 6, "communuti": 6, "obvious": 6, "never": 6, "reflect": 6, "qualiti": 6, "hypothet": 6, "frustrat": 6, "delai": 6, "respons": [6, 8, 13], "cours": [6, 24, 38], "busi": 6, "peopl": 6, "sometim": 6, "person": 6, "becaus": [6, 7, 8, 10, 11, 21, 25, 26, 38], "limit": [6, 12, 21, 24, 26, 38, 84, 101, 102, 224, 231, 232, 353, 354], "me": 6, "unfairli": 6, "definit": [6, 23, 324, 325], "investig": 6, "newli": [6, 8, 62, 63, 84, 90, 224, 230], "repeat": [6, 11, 12, 224, 241, 353, 367], "yourslef": 6, "simpler": [6, 23], "cannot": [6, 8, 26], "alreadi": [6, 23, 38, 114, 164, 180, 188, 208, 223, 324, 337, 425], "receiv": [6, 8, 114, 123, 124, 224, 226, 263, 446, 456], "least": [6, 8, 10, 12, 324, 332], "final": [6, 11, 12, 21, 23, 24, 65, 74, 75, 224, 244, 446, 457], "tickbox": 6, "lower": [6, 12, 21, 65, 70, 80, 164, 206, 324, 325, 393, 397], "corner": 6, "fix": 6, "without": [6, 7, 8, 21, 23, 24, 25, 37, 38, 224, 268, 273, 353, 361, 373, 375, 405, 406, 409], "yourself": [6, 37], "namespac": [7, 8, 13, 21, 26], "matmul": [7, 21, 324, 342, 425], "some_namespac": 7, "insid": [7, 8], "some_backend": 7, "another_backend": 7, "file": [7, 8, 13, 21, 24, 224, 274, 458, 459], "break": [7, 23], "anyth": 7, "refactor": 7, "part": [7, 8, 21, 22, 26, 37, 38, 65, 80, 81, 287, 290, 292, 294, 295, 296, 458, 459], "structur": [7, 13, 24, 25, 224, 233, 373, 386], "ongo": 7, "dtype": [7, 8, 12, 23, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 82, 83, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 164, 178, 224, 227, 266, 303, 306, 400, 401, 410, 412, 413, 418, 419, 420, 425], "gener": [7, 8, 11, 13, 21, 23, 25, 26, 37, 38, 62, 65, 66, 74, 75, 164, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 393, 394, 395, 397, 398, 425, 462, 466], "defin": [7, 11, 23, 25, 38, 164, 208, 213, 224, 266, 324, 326, 329, 341, 393, 395, 413, 415, 416, 417], "here": [7, 12, 21, 22, 23, 24, 25, 26, 37, 38, 39, 51], "format": [7, 13, 21, 23, 24, 84, 95, 99, 114, 134, 413, 414, 425], "def": [7, 8, 10, 12, 21, 23, 24, 25, 26, 40, 85, 86, 87, 115, 122, 125, 288, 425, 438, 441, 444], "my_func": [7, 12], "x": [7, 8, 10, 11, 12, 13, 21, 23, 24, 25, 26, 39, 43, 51, 54, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 71, 73, 76, 77, 79, 80, 81, 82, 83, 84, 90, 92, 99, 114, 134, 135, 136, 139, 140, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 181, 182, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 203, 206, 207, 209, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 266, 275, 279, 281, 282, 283, 285, 286, 287, 291, 293, 298, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 342, 343, 345, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 379, 383, 384, 385, 391, 392, 393, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 446, 457], "union": [7, 8, 10, 12, 21, 26, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 130, 131, 132, 134, 139, 140, 141, 142, 147, 153, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 250, 252, 253, 266, 269, 270, 275, 276, 281, 282, 283, 285, 286, 287, 300, 303, 307, 309, 311, 312, 316, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 374, 375, 384, 385, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424], "arrai": [7, 8, 10, 11, 12, 20, 21, 22, 24, 25, 26, 38, 39, 43, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 99, 101, 102, 104, 105, 106, 114, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 154, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 266, 267, 269, 270, 275, 279, 281, 282, 283, 285, 286, 287, 293, 298, 300, 301, 303, 304, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 375, 385, 386, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 446, 454, 457], "nativearrai": [7, 8, 10, 11, 12, 21, 23, 26, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 90, 91, 92, 99, 101, 102, 104, 105, 106, 114, 134, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 234, 235, 236, 239, 240, 241, 243, 244, 245, 246, 250, 252, 253, 266, 269, 270, 275, 281, 282, 283, 285, 286, 287, 300, 303, 307, 309, 311, 312, 316, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 375, 385, 393, 394, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424], "ax": [7, 8, 12, 23, 114, 158, 324, 333, 341, 344, 347, 353, 356, 358, 359, 362, 364, 366, 368, 400, 401, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "int": [7, 8, 10, 12, 26, 54, 59, 62, 63, 65, 68, 70, 72, 73, 74, 75, 78, 80, 81, 82, 84, 92, 98, 100, 101, 102, 105, 114, 139, 140, 141, 142, 151, 152, 158, 224, 235, 236, 239, 240, 241, 244, 245, 250, 266, 269, 270, 275, 276, 285, 303, 307, 309, 311, 312, 316, 324, 326, 328, 344, 345, 346, 347, 349, 351, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 373, 385, 393, 394, 395, 396, 397, 400, 401, 402, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424], "tupl": [7, 8, 10, 12, 23, 24, 25, 38, 62, 63, 65, 67, 68, 72, 77, 78, 82, 84, 92, 224, 244, 276, 303, 309, 324, 335, 338, 342, 344, 347, 353, 355, 356, 358, 359, 362, 364, 365, 368, 373, 375, 376, 378, 380, 381, 382, 384, 385, 387, 388, 389, 390, 393, 395, 396, 397, 400, 403, 405, 406, 407, 408, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "list": [7, 8, 12, 13, 21, 24, 25, 26, 38, 65, 66, 67, 68, 76, 77, 78, 82, 84, 91, 114, 123, 124, 135, 136, 139, 140, 143, 144, 158, 224, 228, 276, 281, 285, 303, 309, 311, 312, 313, 314, 315, 316, 317, 318, 324, 344, 353, 355, 358, 363, 365, 373, 374, 375, 379, 384, 385, 422, 423, 424, 425, 446, 447, 448, 449, 450, 451, 452, 453], "option": [7, 8, 10, 11, 12, 21, 26, 54, 56, 57, 59, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 94, 96, 97, 98, 103, 113, 114, 133, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 232, 235, 236, 237, 243, 245, 246, 264, 266, 269, 270, 277, 278, 287, 298, 311, 323, 324, 333, 335, 338, 347, 349, 351, 353, 355, 357, 358, 359, 360, 362, 363, 364, 365, 373, 374, 379, 384, 385, 393, 394, 395, 396, 397, 400, 401, 402, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "nativedtyp": [7, 8, 65, 66, 67, 68, 69, 70, 72, 73, 77, 78, 79, 82, 83, 84, 89, 97, 98, 99, 413, 420], "none": [7, 8, 10, 12, 21, 23, 25, 26, 39, 41, 44, 51, 54, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 96, 97, 98, 101, 102, 114, 123, 124, 132, 133, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 232, 235, 236, 238, 242, 243, 245, 246, 251, 254, 258, 264, 266, 269, 270, 271, 272, 277, 278, 284, 287, 290, 292, 294, 295, 296, 302, 303, 308, 311, 313, 315, 317, 320, 321, 322, 323, 324, 333, 335, 338, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "dev": [7, 8, 21, 23, 25, 114, 123], "str": [7, 8, 65, 76, 84, 88, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113, 114, 130, 134, 139, 140, 141, 142, 158, 224, 237, 239, 240, 241, 264, 269, 270, 311, 312, 316, 324, 339, 373, 379, 413, 414], "my": 7, "someth": [7, 24, 25, 38], "cool": 7, "special": [7, 10, 11, 12, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 215, 216, 217, 218, 221, 223, 413, 415, 416, 417, 419, 420, 421], "particular": [7, 164, 165], "nan": [7, 11, 64, 84, 90, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 192, 194, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 224, 252, 286, 405, 406, 409, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424], "y": [7, 12, 21, 23, 54, 56, 57, 58, 59, 60, 61, 65, 72, 73, 76, 78, 79, 83, 84, 90, 114, 134, 164, 168, 172, 175, 178, 180, 181, 186, 206, 207, 221, 224, 227, 234, 243, 281, 282, 283, 287, 291, 311, 320, 324, 325, 331, 345, 349, 351, 353, 355, 357, 361, 362, 393, 394, 395, 396, 397, 399, 400, 404, 413, 414, 419, 420], "0": [7, 11, 12, 21, 23, 24, 25, 26, 39, 43, 54, 56, 57, 58, 59, 60, 61, 65, 66, 70, 74, 75, 79, 80, 81, 82, 83, 84, 90, 101, 114, 116, 119, 123, 126, 130, 134, 139, 140, 141, 142, 143, 144, 145, 146, 158, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 186, 187, 188, 197, 198, 200, 208, 212, 213, 215, 216, 217, 218, 221, 223, 224, 227, 231, 232, 234, 235, 236, 245, 246, 251, 266, 269, 270, 275, 281, 282, 287, 289, 290, 294, 295, 303, 306, 309, 311, 312, 316, 324, 325, 328, 331, 342, 345, 347, 349, 351, 353, 354, 355, 356, 357, 359, 362, 363, 364, 365, 373, 385, 393, 394, 395, 396, 397, 398, 399, 405, 406, 409, 413, 414, 416, 419, 420, 421, 425, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469], "els": [7, 8, 21, 23, 25, 26, 224, 229, 238, 242, 373, 383], "paramet": [7, 11, 23, 24, 37, 39, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 430, 435, 436, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "input": [7, 8, 10, 11, 12, 21, 23, 24, 25, 26, 38, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 71, 73, 76, 77, 79, 80, 81, 83, 84, 90, 91, 93, 94, 96, 97, 98, 99, 100, 104, 105, 106, 114, 123, 124, 134, 135, 138, 139, 142, 146, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 275, 276, 279, 281, 282, 283, 285, 286, 287, 291, 293, 298, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 391, 392, 393, 394, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461], "numer": [7, 25, 65, 76, 84, 90, 164, 165, 168, 180, 183, 187, 188, 189, 192, 193, 194, 195, 203, 204, 208, 209, 210, 212, 213, 215, 220, 223, 224, 248, 249, 271, 272, 277, 278, 324, 326, 332, 337, 342, 344, 345, 346, 393, 399, 400, 401, 402, 413, 415, 418, 420, 437], "along": [7, 65, 74, 75, 114, 139, 140, 141, 142, 143, 144, 145, 146, 158, 224, 235, 236, 245, 285, 303, 307, 324, 333, 345, 346, 347, 349, 351, 353, 355, 358, 360, 362, 363, 365, 367, 369, 370, 371, 372, 393, 399, 400, 401, 402, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "op": [7, 21, 38, 39, 51], "place": [7, 8, 10, 11, 12, 26, 65, 66, 67, 68, 69, 70, 72, 73, 77, 78, 79, 82, 83, 114, 159, 164, 168, 221, 224, 255, 256, 257, 353, 362, 462, 463, 464, 465, 466, 467], "return": [7, 8, 10, 11, 21, 23, 24, 25, 26, 38, 39, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 435, 436, 446, 455, 456, 462, 466], "cooler": 7, "_cur_framework": [7, 8], "wherea": [7, 8, 26], "output": [7, 8, 10, 11, 12, 21, 23, 25, 26, 38, 54, 57, 65, 66, 68, 69, 70, 72, 73, 76, 78, 79, 82, 83, 114, 123, 124, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 230, 232, 236, 243, 245, 287, 291, 311, 313, 315, 317, 319, 321, 322, 323, 324, 345, 349, 351, 353, 357, 358, 359, 360, 362, 364, 365, 367, 393, 395, 396, 397, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457], "alwai": [7, 8, 10, 21, 23, 84, 90, 164, 168, 208, 224, 257, 287, 293, 298], "instanc": [7, 8, 10, 11, 12, 24, 25, 26, 65, 76, 114, 123, 164, 168, 221, 224, 257, 353, 362, 435, 436], "subsequ": [7, 8, 12, 25, 39, 45], "agnost": [7, 10, 21, 23, 26, 38, 425], "handl": [7, 8, 25, 38, 62, 63, 114, 130, 131, 132, 134, 153, 160, 163, 287, 290, 292, 294, 295, 296, 462, 463, 464, 465, 466, 467], "prevent": [7, 8, 23, 287, 289, 290, 294, 413, 420, 462, 463, 464], "nativ": [7, 8, 23, 24, 39, 45, 65, 77, 84, 88, 89, 94, 114, 130, 131, 132, 134, 153, 160, 163, 224, 257, 259, 262, 435, 436], "permit": [7, 10], "wrap": [7, 8, 21, 23, 26, 38, 224, 230, 287, 301], "implement": [7, 8, 10, 11, 21, 23, 24, 25, 26, 37, 38, 39, 51, 84, 90, 106, 164, 165, 166, 167, 169, 170, 171, 172, 181, 182, 186, 187, 197, 198, 199, 200, 208, 212, 213, 216, 217, 221, 324, 329, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 425], "torch": [7, 8, 10, 21, 23, 24, 25, 26, 38, 39, 44, 51, 62, 63, 425], "anywai": 7, "composit": [7, 21, 25, 26, 38], "lstm_updat": [7, 21, 311], "execut": [7, 13, 21, 23, 26, 38, 224, 284], "arg": [7, 21, 23, 25, 39, 43, 114, 123, 138, 142, 146, 158, 224, 270, 435, 436, 458, 459], "dictat": [7, 8, 12], "repres": [7, 13, 23, 65, 76, 84, 95, 100, 164, 167, 168, 170, 173, 182, 208, 217, 311, 320, 324, 340, 341], "sequenc": [7, 37, 114, 123, 124, 224, 228, 263, 303, 309, 353, 363, 365, 446, 455, 460, 461, 468, 469], "brittl": 7, "accept": [7, 8, 10, 11, 12, 23, 65, 76, 164, 168, 203, 204, 213, 221, 353, 362, 413, 416, 425], "both": [7, 8, 10, 12, 21, 23, 24, 25, 26, 37, 38, 164, 212, 324, 326, 332, 346], "intend": [7, 413, 420], "subset": [7, 9, 11, 21], "behaviour": [7, 9, 11, 23], "freeli": 7, "extend": [7, 11], "abov": [7, 8, 10, 11, 12, 23, 24, 25, 26, 65, 76, 80, 81, 164, 168, 208, 221, 324, 328, 329, 345, 353, 362, 393, 395, 413, 418, 419, 420], "creation": [7, 8, 21, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "though": [7, 24, 38], "string": [7, 21, 24, 84, 88, 89, 99, 103, 113, 114, 130, 131, 132, 147, 153, 159, 160, 163, 224, 237], "represent": [7, 37, 64, 84, 88, 89, 95, 101, 102, 114, 130, 131, 164, 165, 168, 174, 177, 179, 205, 208, 224, 276, 281], "int32": [7, 413, 418, 420], "float32": [7, 12, 84, 88, 89, 303, 306], "bool": [7, 8, 12, 26, 62, 63, 65, 72, 84, 90, 93, 96, 97, 98, 99, 103, 104, 105, 113, 114, 133, 134, 149, 158, 161, 164, 184, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 210, 224, 225, 227, 228, 235, 238, 242, 244, 250, 252, 259, 260, 261, 262, 275, 285, 286, 287, 298, 324, 325, 333, 342, 347, 353, 363, 373, 374, 375, 379, 383, 384, 385, 393, 394, 400, 401, 402, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "cpu": [7, 8, 38, 65, 74, 75, 114, 134, 151, 153, 159, 160, 163, 224, 245, 246, 266, 269, 270, 393, 394, 395, 397, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "gpu0": 7, "gpu2": 7, "align": [7, 10, 21, 23, 425, 431], "categori": [7, 8, 20, 425], "as_native_dtyp": [7, 84], "default_dtyp": [7, 8, 84], "as_native_dev": [7, 114], "default_dev": 7, "something_cool": 7, "apart": 7, "decid": [8, 373, 384], "taken": [8, 9, 26, 324, 328], "constant": [8, 25, 26, 114, 123, 124, 349, 350, 352, 353, 356, 373, 379, 391, 392, 437, 438, 442, 445, 458, 459, 460, 461], "data_typ": [8, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "elementwis": [8, 21, 26, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "linear_algebra": [8, 23, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "sort": [8, 324, 329, 342, 343, 411], "statist": [8, 414, 415, 416, 417, 418, 419, 420, 421], "util": [8, 114, 147, 423, 424], "categoris": 8, "activ": [8, 25, 55, 56, 57, 58, 59, 60, 61, 425, 433, 434], "compil": [8, 20, 22, 38, 425, 458, 459, 462, 463, 464, 465, 466, 467], "gradient": [8, 24, 25, 37, 38, 114, 158, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 369, 370, 371, 372, 425, 462, 463, 464, 465, 466, 467], "loss": [8, 24, 25, 26, 350, 351, 352, 425], "meta": [8, 370, 371, 372], "nest": [8, 23, 24, 25, 38, 114, 138, 142, 146, 224, 281, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 458, 459, 462, 463, 464, 465, 466, 467], "norm": [8, 224, 231, 232, 324, 333, 347, 392, 425, 461, 462, 464], "random": [8, 26, 37, 394, 395, 396, 397, 398, 399, 425], "might": [8, 21, 23, 24, 224, 238], "overlap": 8, "sever": [8, 38, 324, 331], "judgement": 8, "suitabl": 8, "suggest": 8, "locat": [8, 393, 394], "lowest": [8, 38, 373, 385, 393, 395], "block": [8, 20, 22, 26, 425], "backend": [8, 9, 10, 22, 23, 26, 38, 39, 43, 44, 45, 51, 84, 95, 103, 113, 114, 149, 152, 161, 224, 254, 257, 258, 287, 290, 292, 294, 295, 296, 301, 425, 435, 436, 462, 463, 464, 465, 466, 467], "specifi": [8, 10, 21, 24, 25, 26, 39, 44, 65, 66, 68, 72, 74, 75, 78, 80, 81, 82, 84, 90, 92, 95, 114, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 150, 154, 157, 158, 159, 164, 213, 224, 245, 246, 252, 285, 303, 309, 324, 328, 333, 344, 345, 346, 347, 349, 351, 353, 354, 355, 356, 358, 362, 364, 365, 368, 373, 378, 380, 381, 387, 388, 389, 390, 400, 401, 402, 405, 406, 409, 410, 411, 413, 414, 418, 420, 422, 423, 424], "backend_nam": 8, "category_nam": 8, "py": [8, 21, 23, 25, 26, 39, 43, 44, 393, 394, 395, 396, 397], "light": [8, 38], "around": [8, 23, 38], "serv": [8, 10, 20, 425], "explain": [8, 11, 12, 21, 22, 23, 24, 25, 26, 425, 431], "detail": [8, 24, 25, 65, 71, 405, 406, 409], "actual": [8, 23, 25, 38], "defer": 8, "tan": [8, 10, 11, 21, 164, 425], "remov": [8, 11, 13, 26, 324, 328, 332, 345, 353, 364, 369, 370, 371], "hand": [8, 38], "thei": [8, 9, 12, 23, 24, 25, 26, 38, 369, 370, 371, 393, 394, 425, 468, 469], "themselv": [8, 25, 373, 374], "cross_entropi": [8, 349], "true": [8, 12, 21, 23, 24, 25, 26, 54, 55, 62, 63, 65, 74, 84, 90, 93, 114, 164, 190, 192, 193, 194, 195, 203, 204, 224, 225, 227, 229, 230, 242, 244, 252, 253, 275, 281, 283, 286, 287, 290, 292, 293, 294, 295, 296, 298, 311, 319, 324, 325, 333, 342, 347, 349, 350, 351, 352, 369, 370, 371, 372, 373, 374, 383, 384, 386, 393, 394, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "pred": [8, 349, 350, 351, 352], "axi": [8, 10, 12, 21, 23, 26, 37, 54, 59, 65, 74, 75, 114, 116, 119, 126, 139, 140, 141, 142, 143, 144, 145, 146, 158, 224, 235, 236, 245, 285, 303, 307, 324, 326, 328, 346, 347, 349, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 393, 399, 400, 401, 402, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "epsilon": [8, 25, 287, 289, 290, 294, 324, 335, 338, 349, 350, 351, 352, 391, 392, 460, 461, 462, 463, 464], "float": [8, 11, 23, 25, 54, 56, 64, 65, 66, 68, 70, 72, 73, 75, 78, 82, 84, 90, 97, 101, 104, 106, 114, 147, 153, 160, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 224, 231, 232, 244, 248, 249, 271, 272, 277, 278, 303, 305, 310, 324, 325, 327, 329, 330, 331, 335, 338, 339, 341, 342, 347, 349, 351, 393, 396, 397, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421], "1e": [8, 25, 26, 224, 249, 287, 289, 290, 294, 324, 342, 349, 350, 351, 352, 425, 462, 463, 464, 465, 467], "clip": [8, 21, 24, 26, 164, 206, 207, 224, 231, 232, 353, 425], "log_pr": 8, "log": [8, 21, 24, 65, 75, 164, 199, 201, 324, 340, 349, 350, 352, 425], "sum": [8, 21, 114, 143, 144, 145, 146, 158, 164, 168, 201, 224, 236, 240, 269, 270, 324, 342, 345, 347, 413, 414, 419], "explicitli": [8, 21, 38, 324, 329, 446, 455, 457, 458, 459], "set_framework": [8, 21, 23, 24, 26, 39, 43, 44, 51, 425], "been": [8, 11, 21, 37, 39, 44, 224, 239, 240, 241, 393, 394], "func_nam": [8, 12], "approach": [8, 23, 24, 38], "explicit": [8, 21], "effici": [8, 21, 24, 38], "typic": 8, "well": [8, 25, 26, 37, 224, 252, 324, 341], "arbitrari": [8, 25, 38, 65, 76, 84, 91, 106, 114, 143, 144, 146], "combin": [8, 10, 12, 26, 303, 309], "addition": [8, 10], "class": [8, 10, 12, 13, 21, 22, 24, 25, 26, 36, 37, 38, 39, 45, 51, 84, 102, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 224, 226, 257, 263, 282, 287, 301, 349, 352, 373, 375, 385, 425, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "default": [8, 11, 12, 25, 54, 55, 56, 57, 59, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 96, 97, 98, 99, 114, 123, 124, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 225, 231, 232, 235, 236, 243, 244, 245, 246, 250, 251, 252, 254, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 273, 275, 277, 278, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 333, 335, 338, 339, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 435, 436, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "_wrap_funct": 8, "appli": [8, 12, 21, 23, 24, 25, 26, 36, 38, 54, 55, 56, 57, 58, 59, 60, 61, 84, 106, 224, 239, 240, 241, 287, 294, 295, 311, 320, 322, 323, 324, 335, 338, 349, 351, 353, 365, 369, 370, 371, 373, 379, 382, 385, 386, 391, 392, 425, 432, 433, 434, 460, 461], "except": [8, 14, 17, 23, 38, 84, 92, 224, 229, 238, 284, 324, 338, 353, 355, 365, 400, 403, 422, 423, 424], "appear": [8, 23, 353, 357], "non_wrapped_funct": 8, "dure": [8, 38, 62, 63, 224, 284, 287, 289, 290, 294, 324, 332, 369, 370, 371, 372, 413, 419, 421, 458, 459, 462, 463, 464, 466], "_function_w_arrays_n_out_handl": 8, "pass": [8, 10, 12, 23, 38, 39, 43, 84, 94, 114, 123, 158, 164, 172, 224, 230, 257, 287, 301, 369, 370, 371, 435, 436, 458, 459, 462, 466, 468, 469], "programmat": 8, "add_ivy_array_instance_method": 8, "add_ivy_container_instance_method": 8, "respect": [8, 12, 65, 76, 164, 165, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 190, 191, 195, 196, 201, 202, 204, 205, 208, 210, 213, 220, 287, 289, 290, 291, 292, 294, 295, 296, 324, 339, 369, 370, 371, 372], "self": [8, 10, 21, 23, 24, 25, 26, 425, 462, 466], "key_chain": [8, 373, 386], "dict": [8, 24, 25, 39, 51, 114, 123, 124, 139, 140, 141, 142, 224, 239, 240, 241, 373, 375, 376, 379, 382, 385, 386], "to_appli": [8, 373, 386], "prune_unappli": [8, 373, 386], "fals": [8, 12, 24, 25, 26, 39, 46, 47, 48, 49, 50, 84, 90, 93, 99, 114, 134, 145, 149, 153, 158, 161, 163, 164, 190, 192, 193, 194, 195, 203, 204, 224, 225, 227, 235, 238, 242, 244, 250, 259, 260, 262, 263, 275, 285, 287, 290, 291, 292, 293, 294, 295, 296, 324, 325, 333, 342, 347, 353, 363, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 386, 393, 394, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 435, 436, 458, 459, 462, 463, 464, 465, 466, 467], "map_sequ": 8, "handle_inplac": 8, "map": [8, 24, 37, 38, 114, 123, 373, 380, 381, 385, 386, 425, 446, 457], "lambda": [8, 21, 24, 462, 465, 467], "x_": 8, "_": [8, 11, 13, 23, 24, 287, 289, 290, 324, 348], "is_arrai": [8, 224], "bit": [8, 12, 23, 84, 100, 101, 102, 164, 175, 176, 178, 303, 305, 310, 413, 418, 420], "arug": 8, "across": [8, 12, 114, 123, 124, 135, 136, 138, 139, 140, 141, 142, 146, 156, 157, 224, 227, 228, 373, 379, 400, 402], "leav": [8, 10, 24, 25, 353, 365, 373, 374, 375, 383, 384, 385], "autocomplet": [8, 24], "id": [8, 458, 459], "show": [8, 12, 37, 38, 425], "otherwis": [8, 21, 23, 39, 51, 65, 66, 84, 90, 93, 96, 97, 98, 164, 192, 193, 194, 224, 229, 284, 287, 293, 298, 324, 325, 327, 346, 347, 369, 370, 371, 373, 386, 400, 401, 402, 404, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "unfound": 8, "backup": 8, "robust": 8, "were": [8, 12], "forgotten": 8, "inclus": [8, 65, 66, 393, 395], "keyword": [8, 24, 65, 76, 114, 123, 124, 138, 142, 146, 224, 226, 263, 373, 379, 413, 420, 458, 459], "unspecifi": [8, 164, 212, 213, 324, 329, 353, 365], "result": [8, 10, 11, 12, 24, 54, 57, 65, 66, 84, 106, 114, 123, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 232, 236, 243, 245, 269, 270, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 325, 328, 333, 342, 347, 349, 351, 353, 357, 358, 359, 362, 364, 365, 400, 401, 402, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425], "predominatli": 8, "dynam": [8, 21, 62, 63], "tf": [8, 21, 26, 38, 425], "math": [8, 26, 425], "mx": [8, 425], "nd": [8, 21, 26, 425], "jaxarrai": 8, "jnp": [8, 26, 425], "ndarrai": [8, 10, 23, 39, 45, 65, 67, 77, 224, 282], "np": [8, 10, 23, 24, 26, 39, 43, 425], "It": [8, 11, 12, 13, 21, 23, 24, 25, 54, 57, 114, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 232, 243, 349, 351, 353, 357, 358, 359, 362, 364, 365, 400, 401, 410, 411, 412, 422, 423, 424], "presenc": 8, "wrapper": [8, 23], "concern": [8, 12], "altern": [8, 24], "_wrap_fn": 8, "non": [8, 12, 21, 62, 63, 84, 90, 103, 164, 203, 204, 324, 327, 335, 342, 344, 346, 347, 400, 401, 402, 403, 413, 415, 416, 417, 418, 421, 422, 423, 424, 458, 459, 462, 466], "prod": [8, 12, 224, 240, 413], "compound": 8, "reduct": [8, 23, 224, 240, 269, 270, 422, 423, 424, 425], "overflow": [8, 164, 168, 413, 420], "_function_w_arrays_dtype_n_dev_handl": 8, "non_dtype_wrapped_funct": 8, "applic": [8, 25, 311, 322, 323, 373, 379, 385], "overal": [8, 13, 26], "infer": [8, 21, 26, 39, 43, 62, 63, 65, 66, 67, 69, 72, 73, 77, 79, 83, 164, 190, 224, 250, 275, 303, 308, 353, 361], "arr": 8, "scalar": [8, 21, 26, 38, 65, 73, 224, 266, 283, 286, 324, 347], "deriv": [8, 23, 25, 65, 69, 73, 79, 83, 287, 289, 290, 292, 294, 295, 296, 373, 375, 385, 458, 462, 466, 468], "default_int_dtyp": [8, 84], "global": [8, 21, 39, 43, 44, 45, 51, 84, 96, 97, 98, 114, 123, 124, 156, 157, 158, 224, 248, 249, 268, 271, 272, 273, 277, 278, 391, 392, 460, 461], "settabl": 8, "via": [8, 21, 23, 24, 37, 373, 374, 383, 384], "set_default_int_dtyp": [8, 84], "set_default_float_dtyp": [8, 84], "arang": [8, 65, 74, 75, 303, 306, 425], "valu": [8, 12, 21, 23, 26, 38, 65, 66, 70, 72, 73, 74, 75, 84, 90, 96, 97, 98, 114, 126, 133, 157, 158, 164, 165, 166, 168, 169, 171, 180, 184, 185, 188, 189, 190, 191, 195, 196, 206, 207, 208, 210, 211, 212, 214, 223, 224, 231, 232, 233, 238, 244, 245, 246, 251, 254, 258, 268, 269, 270, 271, 272, 273, 286, 287, 289, 290, 291, 294, 298, 302, 303, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 335, 338, 339, 340, 341, 342, 343, 347, 353, 354, 356, 360, 361, 368, 369, 370, 371, 373, 377, 378, 379, 380, 381, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 466], "irrelev": [8, 12], "dim": [8, 224, 266, 303, 304, 309, 446, 457], "integ": [8, 23, 65, 66, 72, 84, 102, 105, 106, 164, 165, 174, 175, 176, 177, 178, 179, 180, 188, 189, 205, 212, 213, 214, 223, 324, 334, 346, 347, 353, 363, 393, 395, 398, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "control": [8, 10, 23, 24, 37], "configur": [8, 13, 373, 386], "bear": 8, "set_default_dtyp": [8, 84], "popul": [8, 21, 393, 394, 413, 419, 421], "enter": 8, "keepdim": [8, 224, 285, 324, 333, 347, 400, 401, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "One": [8, 21, 23, 24, 224, 240, 353, 361, 393, 395], "abl": [8, 23, 26], "correctli": [8, 25, 38, 324, 333, 400, 401], "deleg": 8, "fill_valu": [8, 65, 72, 73], "shape_to_tupl": [8, 224], "item": [8, 21, 23, 24, 26, 84, 96, 114, 123, 124, 126, 133, 135, 137, 139, 141, 145, 224, 233, 251, 277, 278, 373, 378, 379, 380, 381, 385, 389, 390, 425, 458, 459], "as_n": [8, 84, 96, 97, 98, 99, 114, 133, 134], "outsid": [8, 21, 23, 26, 353, 354, 365], "submodul": [8, 9, 13, 20, 21, 25, 425, 460, 461, 468, 469], "random_uniform": [8, 25, 393, 425], "dual": 8, "thrown": [8, 38], "non_dev_wrapped_funct": 8, "omit": [8, 405, 406, 409], "rare": [8, 38], "far": [8, 12, 22, 23, 373, 374, 384], "gpu": [8, 23, 38, 114, 149, 152, 393, 395], "idx": [8, 23], "multi": [8, 20, 38, 311, 322, 324, 326, 425, 431, 446, 457], "set_default_devic": [8, 114], "nativedevic": [8, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 114, 131, 132, 147, 153, 159, 160, 163, 224, 245, 246, 266, 269, 270, 393, 394, 395, 396, 397], "xla_extens": [8, 23, 39, 45], "context": [8, 224, 264, 311, 322, 446, 457], "default_devic": [8, 21, 114], "intern": [8, 114, 287, 301, 373, 374, 383, 384, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 468, 469], "correspond": [9, 11, 12, 84, 91, 164, 172, 212, 324, 326, 329, 341, 353, 355, 362, 393, 394, 400, 401, 402, 405, 406, 407, 409, 413, 418, 419, 420, 421], "unit": [9, 54, 55, 56, 57, 114], "test_array_api": 9, "independ": [9, 12, 21, 26, 324, 326, 341, 393, 394], "push": 9, "thoroughli": 9, "On": [9, 22, 26], "top": [9, 24, 25], "somewher": 9, "hypothesi": 9, "properti": [9, 23, 24, 25, 114, 126, 458, 459, 462, 463, 464, 465, 467], "todo": 9, "thorough": 10, "explan": [10, 23], "three": [10, 12, 20, 65, 76, 425], "randomli": [10, 303, 308, 311, 319, 446, 454], "chosen": [10, 65, 66, 164, 172, 400, 404], "roll": [10, 11, 353], "consum": [10, 114], "flexibl": [10, 12], "broadcast": [10, 11, 12, 54, 57, 84, 91, 92, 114, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 220, 221, 224, 232, 243, 324, 332, 333, 335, 338, 341, 346, 347, 349, 351, 353, 357, 358, 359, 360, 362, 364, 365, 400, 401, 402, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "furthermor": [10, 21], "__add__": [10, 23], "__sub__": [10, 23], "__mul__": [10, 23], "__div__": 10, "dicat": 10, "similarli": [10, 23, 65, 76], "shift": [10, 12, 164, 176, 178, 353, 362], "x1": [10, 12, 164, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 190, 191, 195, 196, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 220, 224, 227, 311, 316, 324, 326, 332, 337, 341, 344, 346, 400, 404], "x2": [10, 12, 164, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 190, 191, 195, 196, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 220, 311, 316, 324, 326, 332, 337, 341, 344, 346, 400, 404], "exemplar": 11, "firstli": [11, 12, 24], "templat": [11, 425], "found": 11, "under": [11, 12, 21, 24, 26], "spec": [11, 12], "api_specif": 11, "approxim": [11, 54, 55, 164, 166, 167, 169, 170, 171, 172, 181, 182, 186, 187, 197, 198, 199, 200, 212, 216, 217, 221, 324, 335, 338], "tangent": [11, 54, 61, 164, 171, 172, 173, 221, 222], "domain": [11, 164, 166, 167, 169, 170, 171, 172, 181, 182, 186, 187, 197, 198, 200, 216, 217, 218, 221], "infin": [11, 64, 84, 90, 164, 165, 167, 168, 170, 171, 172, 180, 181, 182, 186, 187, 188, 189, 192, 193, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 324, 347, 413, 415, 417, 422, 423, 424], "codomain": [11, 164, 166, 167, 169, 170, 171, 172, 181, 182, 186, 187, 197, 198, 200, 216, 217, 218, 221], "element": [11, 21, 26, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 72, 73, 80, 81, 114, 137, 141, 145, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 231, 232, 235, 236, 243, 253, 282, 283, 311, 319, 324, 326, 329, 332, 339, 342, 353, 354, 358, 360, 362, 363, 364, 393, 394, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 454], "x_i": [11, 164, 165, 166, 167, 169, 170, 171, 175, 180, 181, 182, 186, 187, 188, 192, 193, 194, 197, 198, 200, 203, 215, 216, 217, 218, 219, 221, 223, 405, 406, 409, 413, 415, 416, 417, 419, 420, 421], "assum": [11, 23, 24, 38, 65, 76, 164, 168, 181, 216, 221, 353, 362], "express": [11, 21, 26, 164, 166, 169, 171, 172, 181, 216, 221], "radian": [11, 164, 166, 169, 171, 172, 181, 216, 221], "operand": [11, 164, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 186, 187, 188, 197, 198, 200, 201, 208, 212, 213, 216, 217, 218, 221, 223, 413, 414, 415, 417, 420], "whose": [11, 65, 80, 81, 164, 167, 170, 173, 181, 182, 212, 216, 217, 221, 224, 230, 324, 325, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 341, 342, 343, 345, 353, 358, 362, 405, 406, 407, 413, 414], "ref": [11, 164, 178, 195, 208, 210, 213, 220, 353, 365], "promot": [11, 84, 90, 93, 106, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 186, 187, 197, 198, 200, 201, 205, 208, 212, 213, 216, 217, 218, 221, 324, 325, 326, 331, 332, 335, 337, 338, 341, 346, 347, 353, 365, 413, 416], "But": [11, 26], "doc": [11, 21, 24, 25, 425], "needless": 11, "duplic": [11, 23, 25], "info": [11, 425], "renam": 11, "ret": [11, 21, 26, 39, 43, 44, 51, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 123, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 430, 435, 436, 462, 466], "modifi": [11, 21], "conform": [11, 65, 76, 164, 168, 187, 221, 353, 362], "http": [11, 287, 289, 290], "org": [11, 287, 289, 290], "elementwise_funct": 11, "descript": [11, 65, 76, 164, 168, 221, 324, 347, 353, 362], "simplic": [11, 25, 37, 65, 76, 164, 168, 221, 353, 362], "shown": [11, 12, 21, 23, 65, 76, 164, 168, 221, 353, 362], "cover": 12, "variant": 12, "combinatorili": 12, "mean": [12, 21, 23, 24, 25, 26, 37, 38, 114, 143, 144, 145, 146, 158, 224, 240, 369, 370, 371, 372, 373, 379, 393, 396, 413, 437], "equal": [12, 65, 70, 72, 73, 84, 90, 164, 176, 178, 192, 193, 212, 224, 225, 227, 228, 324, 328, 335, 338, 353, 356, 363, 368, 393, 397, 405, 406, 409, 410, 411, 412, 413, 416, 419, 420, 421], "maximum": [12, 21, 24, 26, 114, 138, 142, 146, 158, 164, 224, 231, 232, 244, 287, 294, 353, 354, 373, 385, 400, 401, 413, 415, 417, 425], "variat": 12, "grid": [12, 37, 65, 76], "vari": [12, 23, 405, 406, 409], "simplest": 12, "small": [12, 21, 25, 164, 208, 324, 335, 338, 349, 350, 352, 391, 392, 460, 461], "dimens": [12, 21, 24, 54, 59, 65, 80, 81, 114, 145, 224, 239, 240, 241, 244, 250, 266, 285, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 341, 342, 343, 345, 346, 347, 349, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 393, 399, 400, 401, 402, 403, 405, 406, 407, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457], "unus": [12, 62, 63], "inplac": [12, 23, 25, 224, 229, 254, 258, 279, 287, 290, 292, 294, 295, 296, 435, 436, 462, 463, 464, 465, 466, 467], "highlight": 12, "5": [12, 13, 23, 24, 25, 65, 73, 76, 79, 82, 83, 164, 168, 173, 178, 221, 303, 306, 311, 316, 317, 324, 325, 328, 331, 345, 353, 355, 361, 362, 393, 394, 395, 399, 413, 414, 446, 457], "extra": [12, 21, 287, 291], "6": [12, 13, 23, 24, 25, 65, 73, 164, 168, 175, 221, 303, 306, 324, 328, 342, 353, 355, 361, 362, 393, 394, 395, 413, 414], "14": [12, 13, 393, 395], "versatil": 12, "excess": [12, 23], "z": [12, 21, 23, 164, 168, 224, 227, 349, 351, 413, 414], "hood": [12, 21, 24, 26], "meant": 12, "imaginari": 12, "std": [12, 393, 396, 413], "var": [12, 21, 369, 370, 371, 413], "some_flag": 12, "another_flag": 12, "3": [12, 13, 21, 23, 24, 25, 26, 64, 65, 73, 76, 79, 82, 83, 114, 159, 164, 168, 178, 186, 190, 195, 221, 224, 227, 275, 303, 306, 309, 311, 312, 313, 316, 317, 324, 325, 326, 327, 328, 331, 335, 342, 345, 348, 353, 355, 361, 362, 364, 393, 394, 395, 399, 413, 414, 420, 425], "54": [12, 164, 181], "jointli": 12, "x0": [12, 224, 227], "procedur": 12, "think": 12, "sens": [12, 23], "miss": [12, 462, 466], "12": [12, 224, 249, 353, 362, 393, 395, 413, 414], "print": [12, 21, 23, 24, 25, 39, 43, 44, 45, 51, 54, 56, 57, 58, 59, 60, 61, 65, 72, 73, 76, 78, 79, 82, 83, 84, 90, 114, 134, 149, 151, 152, 154, 161, 164, 168, 173, 175, 178, 180, 181, 186, 190, 195, 221, 224, 227, 234, 249, 267, 275, 281, 282, 283, 303, 306, 309, 311, 312, 316, 324, 325, 327, 328, 331, 342, 345, 349, 351, 353, 357, 361, 362, 364, 393, 394, 395, 396, 397, 399, 413, 414, 419, 420, 425], "5574077": 12, "1850398": 12, "5463025": 12, "8422884": 12, "91601413": 12, "9647598": 12, "3738229": 12, "1597457": 12, "0963247": 12, "9955841": 12, "3278579": 12, "satisfi": [12, 324, 348], "ignor": [12, 38, 65, 76, 373, 384, 462, 466], "8": [12, 13, 20, 24, 164, 168, 303, 306, 324, 328, 393, 394, 395, 413, 414, 425, 446, 457], "9": [12, 13, 24, 25, 164, 168, 175, 287, 289, 290, 294, 324, 342, 353, 362, 393, 394, 395, 413, 414, 462, 463, 464], "asid": [12, 37], "increasingli": 12, "complex": [12, 24, 25, 26, 324, 329, 342], "rule": [12, 84, 90, 93, 106, 164, 173, 178, 183, 208, 213, 324, 325, 326, 337, 341], "exclud": [12, 21, 39, 41, 65, 66, 393, 397], "count": [12, 24, 324, 346, 353, 358, 405, 406, 407, 422, 423, 424], "native_arrai": [12, 39, 45, 51, 65, 76, 164, 168, 221, 353, 362, 393, 394], "14254655": 12, "1578213": 12, "380515": 12, "11": [12, 164, 168, 393, 395], "15": [12, 353, 362, 393, 395, 413, 414], "trivial": 12, "By": [12, 25, 26, 224, 235, 236, 324, 346, 353, 360, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "demonstr": [12, 23], "mix": [12, 21, 84, 106, 164, 168, 413, 416], "13": [12, 393, 395], "docst": 12, "ever": 12, "unsur": 12, "proce": 12, "document": [13, 22, 24, 26], "builder": [13, 36, 38, 425], "synchron": 13, "rest": [13, 22, 26], "remove_doc": 13, "indic": [13, 22, 26, 54, 59, 164, 215, 224, 245, 246, 253, 266, 269, 270, 311, 312, 313, 314, 315, 316, 317, 318, 324, 347, 353, 362, 373, 374, 376, 378, 380, 381, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 400, 401, 402, 403, 405, 406, 408, 410, 411, 412, 425, 428, 430, 446, 447, 448, 449, 450, 451, 452, 453, 458, 459], "privat": [13, 462, 466], "fulfil": [13, 20, 425], "previous": [13, 21, 39, 51, 224, 230], "autogenerated_sourc": 13, "png": [13, 24], "_imag": 13, "lastli": 13, "rst": 13, "main": [13, 65, 70, 80, 81, 324, 328, 345], "skip": [13, 373, 386], "read": [13, 425], "partial_sourc": 13, "conf": 13, "copi": [13, 21, 23, 24, 37, 38, 65, 71, 84, 90, 224, 234, 282, 283, 353, 361, 373, 375, 410, 412], "create_rst_fil": 13, "filter": [13, 311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "recurs": [13, 25, 38, 373, 374, 375, 383, 384, 385], "directori": [13, 224, 274], "its": [13, 84, 91, 114, 158, 324, 332, 353, 357, 361, 362, 366], "markup": 13, "extract": 13, "get_functions_and_class": 13, "doctr": 13, "readm": [13, 38], "module_nam": 13, "copy_readme_to_rst": 13, "tabl": 13, "content": [13, 21, 24], "toc": 13, "tree": 13, "accord": [13, 84, 93, 101, 164, 168, 178, 208, 224, 245, 269, 270, 324, 346, 353, 356, 368, 413, 419, 421], "append": [13, 21, 24, 164, 176, 324, 328, 332], "append_toctree_to_rst": 13, "index": [13, 23, 64, 65, 70, 76, 224, 245, 246, 353, 365, 373, 376, 377, 380, 381, 382, 387, 389, 400, 401, 402, 403, 405, 406, 407, 410, 411, 428, 430], "create_index_rst": 13, "\u03c0": [13, 164, 166, 169, 171, 172], "debug_mod": 14, "set_breakpoint_debug_mod": 14, "set_debug_mod": 14, "debug_mode_in": [14, 17], "set_exception_debug_mod": 14, "unset_debug_mod": 14, "debugg": [15, 16, 17, 18, 19], "fall": [20, 425, 458, 459, 462, 466], "end": [20, 37, 38, 65, 66, 164, 172, 425, 431], "handler": [20, 22, 26, 425], "transpil": [20, 22, 425, 431], "fledg": [21, 22], "label": [21, 22, 26, 349, 350, 351, 352], "cuda": [21, 24, 38, 65, 74, 75, 114, 123, 130, 224, 245, 246, 266, 269, 270, 393, 394, 395, 397, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 468, 469], "syntact": [21, 26], "x_min": [21, 26, 353, 354], "x_max": [21, 26, 353, 354], "clip_by_valu": [21, 26], "clamp": [21, 26], "mayb": [21, 23], "behavior": [21, 38, 164, 212, 213, 405, 406, 409], "fit": [21, 303, 309, 353, 360], "logspac": [21, 65], "construct": [21, 22, 25, 26, 353, 367, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "stop": [21, 38, 65, 66, 74, 75, 114, 129, 158, 287, 290, 292, 294, 295, 296, 298, 369, 370, 371, 372, 462, 463, 464, 465, 466, 467], "num": [21, 65, 74, 75, 303, 309], "power_seq": 21, "linspac": [21, 65, 66, 425], "okai": 21, "bound": 21, "resid": [21, 25], "interv": [21, 26, 65, 66, 74, 75, 324, 346, 353, 354, 365, 393, 395, 397, 422, 423, 424], "edg": [21, 26, 353, 354, 356, 368], "wise": [21, 26, 54, 55, 56, 57, 58, 59, 60, 61, 164, 165, 166, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 183, 184, 185, 189, 190, 191, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 220, 224, 243, 353, 354], "smaller": [21, 26, 353, 354, 362, 413, 418, 420], "larger": [21, 26, 84, 101, 353, 354, 362, 413, 419, 421], "param": [21, 26, 224, 245, 246], "minimum": [21, 26, 114, 164, 165, 224, 248, 249, 271, 272, 277, 278, 353, 354, 400, 402, 413, 415, 417, 425], "ml_framework": [21, 26, 65, 66], "current_framework": [21, 26, 39], "implicit": 21, "select": [21, 23, 26], "ones": [21, 23, 24, 65, 70, 79, 224, 266, 303, 309, 425], "concaten": [21, 24, 224, 244, 353, 355, 425], "unset": [21, 23, 39, 51], "framework_handl": [21, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 425], "face": 21, "kwarg": [21, 23, 25, 39, 43, 114, 123, 138, 142, 146, 224, 263, 435, 436, 458, 459], "verbos": [21, 425, 472], "cprint": [21, 471], "framework_stack": 21, "stack": [21, 65, 80, 81, 303, 309, 324, 327, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 342, 343, 345, 353, 373, 374, 383, 384, 425, 446, 455], "_determine_framework_from_arg": 21, "valueerror": [21, 353, 364], "get_framework": [21, 39], "fail": [21, 23], "valid": [21, 84, 94, 311, 312, 313, 314, 315, 316, 317, 318, 353, 365, 422, 423, 424, 446, 447, 448, 449, 450, 451, 452, 453], "neither": [21, 164, 168, 208], "callabl": [21, 62, 63, 114, 158, 224, 230, 238, 240, 369, 370, 371, 372, 373, 379, 383, 384, 385], "__dict__": [21, 23], "overwrit": [21, 114, 158], "slightli": [21, 25], "illustr": [21, 37], "un": [21, 84, 103], "ivy_original_dict": 21, "k": [21, 65, 70, 80, 81, 224, 227, 311, 323, 324, 332, 339, 341, 342, 343, 345, 393, 396, 397, 400, 403], "v": [21, 24, 25, 26, 311, 323, 425, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 466, 468, 469], "termin": [21, 24], "constitut": [21, 413, 419, 421], "higher": [21, 26, 38, 287, 290, 292, 294, 295, 296], "nn": [21, 26, 65, 76, 425], "init_h": [21, 311, 321], "init_c": [21, 311, 321], "kernel": [21, 38, 311, 321], "recurrent_kernel": [21, 311, 321], "bia": [21, 25, 311, 320, 321, 446, 447, 448, 449, 450, 451, 452, 453, 456], "recurrent_bia": [21, 311, 321], "x_shape": 21, "batch_shap": [21, 23, 26, 224, 266, 303, 304, 305, 306, 308, 309, 310, 311, 321, 322, 323, 324, 348, 393, 394, 446, 455], "timestep": [21, 311, 321, 446, 455], "input_channel": [21, 25, 446, 447, 448, 449, 450, 451, 452, 455, 456], "x_flat": 21, "reshap": [21, 23, 26, 303, 306, 353, 425], "wi": 21, "wi_x": 21, "wii_x": 21, "wif_x": 21, "wig_x": 21, "wio_x": 21, "recurr": [21, 311, 321], "wh": 21, "lstm": [21, 311, 321, 446], "ht": 21, "ct": 21, "hts_list": 21, "unrol": [21, 24, 311, 321], "wii_xt": 21, "wif_xt": 21, "wig_xt": 21, "wio_xt": 21, "zip": 21, "unstack": [21, 24, 224, 425], "htm1": 21, "ctm1": 21, "wh_htm1": 21, "whi_htm1": 21, "whf_htm1": 21, "whg_htm1": 21, "who_htm1": 21, "num_or_size_split": [21, 353, 363], "sigmoid": [21, 24, 25, 54, 425], "ft": 21, "gt": 21, "tanh": [21, 54, 164, 425], "ot": 21, "expand_dim": [21, 24, 353, 425], "offici": 21, "stabl": [21, 224, 248, 249, 271, 272, 277, 278, 410, 411, 412], "reliabl": 21, "decis": [21, 23], "minim": 21, "sacrific": 21, "hear": 21, "hit": 21, "virtu": 21, "piec": 21, "exact": [21, 405, 406], "pure_ivi": 21, "reduce_mean": [21, 24, 25, 26, 425], "reduce_sum": [21, 425], "reduce_var": 21, "m": [21, 65, 76, 80, 81, 324, 325, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 343, 345, 393, 396, 397], "sin": [21, 164, 224, 244, 425], "o": 21, "compile_graph": [21, 26], "pure_torch": 21, "cat": [21, 26], "backbon": [21, 24], "underpin": 21, "__init__": [21, 23, 24, 25, 26, 39, 40, 43, 44, 84, 85, 86, 87, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 287, 288, 393, 394, 395, 396, 397, 425, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "_layer": 21, "linear": [21, 24, 25, 26, 54, 55, 56, 57, 224, 244, 303, 307, 311, 319, 341, 425, 446, 447, 448, 449, 450, 451, 452, 453], "super": [21, 24, 25, 26], "_forward": [21, 24, 25, 425], "clean": [21, 22, 24], "w": [21, 24, 25, 287, 289, 290, 292, 294, 295, 296, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318], "random_unifrom": 21, "unclean": 21, "wx": 21, "temp": 21, "trace": [21, 38, 224, 259, 260, 262, 324], "store": [21, 23, 24, 25, 224, 244, 287, 301, 324, 345, 353, 363, 458, 459], "travers": [21, 23, 373, 385], "torchscript": 21, "fn": [21, 23, 114, 123, 124, 224, 284, 373, 374, 379, 380, 381, 383, 384, 385, 428, 430], "example_input": [21, 62, 63], "static_argnum": [21, 62, 63], "static_argnam": [21, 62, 63], "jit": [21, 38], "maxim": 21, "low": [21, 393, 395, 397], "explor": [22, 26, 37], "frontend": 22, "mainli": [22, 24], "treat": [22, 26, 62, 63], "abil": [22, 38], "primit": [22, 38], "conveni": [22, 24, 25], "experi": [22, 24, 38], "describ": [22, 26, 413, 414, 418, 419, 420], "hierarch": [22, 24, 25], "solv": [22, 37, 324], "behind": [22, 287, 290, 292, 294, 295, 296], "trainabl": [22, 24, 25, 287, 293, 435, 436, 458, 459, 468], "built": [22, 65, 66, 114, 446, 457, 458, 459], "attribut": [22, 23, 24, 25, 84, 101, 102], "straight": 23, "constructor": [23, 224, 226, 468, 469], "arraywithdevic": 23, "arraywithgener": 23, "arraywithgradi": 23, "arraywithimag": 23, "arraywithlinalg": 23, "arraywithlog": 23, "arraywithmath": 23, "arraywithmeta": 23, "arraywithrandom": 23, "arraywithreduct": 23, "is_ivy_arrai": [23, 224], "_data": 23, "assert": [23, 24, 224, 229], "is_native_arrai": [23, 224], "_shape": 23, "_size": 23, "functool": 23, "reduc": [23, 114, 158, 224, 240, 324, 339, 400, 401, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "mul": 23, "len": [23, 26, 65, 76], "_dtype": 23, "_devic": 23, "_dev_str": 23, "as_ivy_dev": [23, 114], "_pre_repr": 23, "_post_repr": 23, "ndim": [23, 324, 339, 342], "size": [23, 24, 65, 74, 75, 114, 156, 157, 158, 224, 269, 303, 308, 324, 328, 333, 337, 339, 342, 346, 353, 357, 362, 363, 364, 393, 394, 396, 397, 400, 401, 403, 422, 423, 424, 446, 447, 448], "matrix_transpos": [23, 324], "mt": 23, "dedic": [23, 25, 287, 301, 435, 436], "coupl": [23, 25], "answer": [23, 38], "perhap": [23, 24, 25, 38], "consol": 23, "throw": 23, "typeerror": 23, "devicearrai": [23, 39, 45], "object": [23, 26, 39, 65, 71, 84, 101, 114, 287, 373, 376, 378, 380, 381, 382, 387, 388, 389, 390, 393, 399, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459], "assign": 23, "immut": 23, "pure": [23, 26, 38], "behav": 23, "irrespect": [23, 84, 90], "ve": [23, 393, 394, 425], "claim": 23, "truli": 23, "__setitem__": 23, "_native_wrapp": 23, "queri": [23, 114, 147, 157, 311, 322, 323, 446, 457], "val": [23, 224, 255, 256, 257, 271, 272], "attributeerror": 23, "scatter_nd": [23, 224, 425], "genuin": 23, "logic": [23, 164, 202, 203, 204, 422, 423, 424, 425], "some_method": 23, "rewritten": 23, "__pow__": 23, "fine": [23, 26], "strang": 23, "power": [23, 24, 25, 164, 178, 186, 212, 224, 248, 271, 278, 324, 334, 437], "enforc": 23, "notic": 23, "inv": [23, 324, 425], "invers": [23, 37, 164, 166, 167, 169, 170, 171, 172, 173, 324, 331, 338], "opt": 23, "_wrap_method": 23, "func_wrapp": 23, "hasattr": 23, "__name__": 23, "non_wrapped_method": 23, "_method_wrap": 23, "native_arg": 23, "native_kwarg": 23, "args_to_n": 23, "to_ivi": 23, "inner_fn": 23, "outlin": 23, "whist": 23, "down": 23, "verifi": [23, 425, 431], "unwrap": 23, "inner": [23, 324, 329, 332, 369, 370, 371, 372], "importantli": [23, 26, 37], "transit": 23, "needlessli": 23, "randn": 23, "_unwrap_method": 23, "method_wrap": 23, "whenev": [23, 24], "parent": 23, "compartment": 23, "readabl": [23, 24], "public": [23, 224, 233], "inherit": 23, "abc": [23, 114, 123, 129, 458, 459, 462, 466], "newshap": [23, 353, 361], "new_shap": 23, "transpos": [23, 26, 114, 145, 311, 313, 315, 317, 324, 336, 338, 425, 446, 448, 450, 452], "flip": [23, 24, 26, 164, 175, 353, 425], "tidi": 23, "20": [23, 164, 186, 393, 395], "shorter": 23, "hard": 23, "crystal": 23, "topic": 23, "41": [23, 324, 325, 413, 420], "builtin": [23, 25], "That": [23, 24, 25, 164, 213], "enough": [23, 24, 25], "ton": 24, "ado": [24, 25], "dictionari": [24, 38], "incred": [24, 38], "hash": 24, "arbitrarili": 24, "soup": 24, "featur": [24, 425], "walk": [24, 25], "dct": 24, "cnt": 24, "combo": [24, 425, 431], "intuit": [24, 25], "hold": [24, 224, 269, 270], "larg": [24, 164, 168, 208], "1000": 24, "uda": 24, "3333": 24, "6667": 24, "Or": [24, 39, 45, 413, 414], "178": 24, "grad": [24, 25, 26, 425, 462, 466], "lr": [24, 25, 287, 290, 292, 294, 295, 296, 462, 463, 464, 465, 466, 467], "new_weight": 24, "0600": 24, "3100": 24, "2400": 24, "6900": 24, "kei": [24, 114, 126, 224, 233, 311, 322, 323, 369, 370, 371, 373, 376, 382, 386, 435, 436, 446, 457, 462, 466], "equival": [24, 26, 65, 66, 164, 178, 203, 204, 213, 324, 335, 338, 341, 347], "delimit": 24, "auto": 24, "tab": [24, 425], "midwai": 24, "agent": 24, "total_spe": 24, "total_height": 24, "total_width": 24, "ag": 24, "tot": 24, "total_": 24, "total_h": 24, "disk": [24, 303, 305], "hdf5": [24, 458, 459], "to_disk_as_hdf5": 24, "from_disk_as_hdf5": 24, "same_arrai": 24, "pickl": 24, "to_disk_as_pickl": 24, "from_disk_as_pickl": 24, "config": [24, 373, 386], "batch_siz": [24, 303, 306, 311, 312, 313, 314, 315, 316, 317, 318, 393, 394], "16": [24, 164, 221, 393, 395], "dir": 24, "dataset": [24, 36, 425], "dropout": [24, 311, 446, 457], "adam": [24, 25, 26, 287, 289, 290, 294, 425, 462, 464], "json": 24, "to_disk_as_json": 24, "from_disk_as_json": 24, "all_tru": 24, "compar": [24, 224, 225, 227, 228, 405, 406, 409, 410, 411, 412], "achiev": [24, 26], "per": [24, 114, 311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "leaf": [24, 373, 374, 383, 384], "debug": 24, "cnt0": 24, "cnt1": 24, "deep_copi": 24, "diff": 24, "diff_0": 24, "diff_1": 24, "detect": [24, 25, 373, 374, 384], "config0": 24, "config1": 24, "Not": [24, 25, 64], "helper": 24, "hierarchi": 24, "screen": 24, "decod": 24, "l0": 24, "l1": [24, 324, 347], "depth": [24, 25, 26, 37, 114, 138, 142, 146, 224, 251, 266, 373, 385, 458, 459], "clearer": 24, "truncat": 24, "__": 24, "flatten_key_chain": [24, 458, 459], "above_height": 24, "decoder__l0": 24, "decoder__l1": 24, "encoder__l0": 24, "encoder__l1": 24, "height": [24, 303, 309], "below_depth": 24, "l0__b": 24, "l0__w": 24, "l1__b": 24, "l1__w": 24, "with_print_limit": 24, "printabl": 24, "displai": 24, "with_key_length_limit": 24, "length": [24, 65, 66, 76, 324, 342, 343, 353, 361], "with_print_ind": 24, "indent": 24, "obviou": 24, "foresight": 24, "untidili": 24, "update_ag": 24, "normalize_img": 24, "img": 24, "img_max": 24, "reduce_max": [24, 425], "img_min": 24, "reduce_min": [24, 425], "img_rang": 24, "agent_posit": 24, "agent_veloc": 24, "agent_cam_front_rgb": 24, "agent_cam_front_depth": 24, "agent_cam_rear_rgb": 24, "agent_cam_rear_depth": 24, "agent_cam_lidar": 24, "normal": [24, 353, 365, 391, 392, 393, 396, 460, 461], "cleaner": 24, "particularli": 24, "camera": 24, "front_rgb": 24, "front_depth": 24, "rear_rgb": 24, "rear_depth": 24, "lidar": 24, "rgb": 24, "rear": 24, "posit": [24, 37, 64, 65, 70, 84, 101, 114, 138, 142, 146, 164, 165, 192, 193, 208, 213, 224, 244, 324, 325, 353, 357, 362, 393, 398, 400, 403, 422, 423, 424, 435, 436], "veloc": 24, "cam": 24, "cam_max": 24, "cam_min": 24, "cam_rang": 24, "Of": 24, "isn": [24, 39, 44], "five": 24, "four": 24, "briefli": 24, "ideal": 24, "perman": 24, "afterward": 24, "thread": 24, "incorpor": 24, "multiprocess": [24, 38, 114, 123, 224], "queue": [24, 114, 123, 124, 224, 268, 273], "pretti": 24, "straightforward": 24, "batch": [24, 114, 156, 157, 224, 244, 303, 308, 311, 320, 324, 347, 369, 370, 371, 372, 391, 392, 460, 461], "dataload": [24, 36, 425], "_cnt": 24, "img_": 24, "_dataset_s": 24, "_batch_siz": 24, "_count": [24, 25], "__next__": 24, "filenam": 24, "img_fnam": 24, "list_stack": 24, "fname": 24, "rang": [24, 25, 26, 65, 66, 74, 75, 413, 418, 420, 425], "loaded_img": 24, "cv2": 24, "imread": 24, "from_numpi": 24, "loader": [24, 38], "32": 24, "batch_slic": 24, "fact": 24, "variabl": [24, 25, 26, 38, 224, 229, 255, 256, 257, 258, 259, 260, 262, 279, 287, 290, 291, 292, 293, 294, 295, 296, 298, 301, 311, 322, 324, 341, 369, 370, 371, 372, 391, 392, 425, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "model": [24, 25, 425], "mymodel": [24, 425], "linear0": [24, 25, 425], "64": [24, 25, 425, 446, 457], "linear1": [24, 25, 425], "relu": [24, 25, 54, 55, 56, 425], "x_in": [24, 25, 26, 425], "target": [24, 25, 26, 114, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 425], "001": [24, 25], "loss_fn": [24, 25, 26, 425], "execute_with_gradi": [24, 25, 26, 38, 287, 425], "to_numpi": [24, 224, 425], "0145": 24, "grad_fn": 24, "addbackward0": 24, "manual": [25, 373, 374, 383, 384], "_create_vari": 25, "output_channel": [25, 446, 447, 448, 449, 450, 451, 452, 455, 456], "with_bia": [25, 446, 456], "_input_channel": 25, "_output_channel": 25, "_w_shape": 25, "_b_shape": 25, "_with_bia": 25, "8979": 25, "3198": 25, "0196": 25, "3126": 25, "3717": 25, "9687": 25, "6958": 25, "5122": 25, "3902": 25, "8800": 25, "5613": 25, "1982": 25, "nightmar": 25, "overcom": 25, "fc": 25, "9563": 25, "direct": [25, 26, 37, 410, 412], "impact": 25, "v0": 25, "v1": 25, "6440": 25, "key0": 25, "key1": 25, "1823": 25, "8075": 25, "linear3": 25, "v2": 25, "2346": 25, "seem": [25, 38], "counter": 25, "hidden": [25, 311, 321, 446, 455], "weight": [25, 26, 287, 289, 290, 292, 294, 295, 296, 311, 320, 321, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 462, 464, 465], "chain": [25, 26, 38, 369, 370, 371, 373, 386, 468, 469], "fed": [25, 114, 158], "sequenti": 25, "1300": 25, "decoupl": 25, "scheme": 25, "come": [25, 36, 425, 431], "weight_initi": [25, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456], "glorotuniform": [25, 437, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456], "bias_initi": [25, 446, 447, 448, 449, 450, 451, 452, 453, 456], "_w_init": 25, "_b_init": 25, "create_vari": [25, 437], "var_shap": [25, 437], "fan_out": [25, 437], "fan_in": [25, 437], "uniform": [25, 393, 394, 395, 397, 437, 439, 440, 443, 444], "fan_mod": [25, 437], "fan_sum": 25, "gain": [25, 437], "slight": 25, "misnom": 25, "belong": 25, "recap": 25, "saw": 25, "vanilla": [25, 369, 371], "descent": [25, 287, 292, 462, 467], "lar": [25, 287, 294, 295, 462], "lamb": [25, 287, 294, 462], "beta1": [25, 287, 289, 290, 294, 462, 463, 464], "beta2": [25, 287, 289, 290, 294, 462, 463, 464], "999": [25, 287, 289, 290, 294, 462, 463, 464], "07": [25, 287, 289, 290, 294, 349, 350, 351, 352, 462, 463, 464], "stop_gradi": [25, 114, 158, 287, 290, 292, 294, 295, 296, 369, 370, 371, 372, 425, 462, 463, 464, 465, 466, 467], "compile_on_next_step": [25, 458, 459, 462, 463, 464, 465, 466, 467], "_beta1": 25, "_beta2": 25, "_epsilon": 25, "_mw": 25, "_vw": 25, "_first_pass": 25, "_should_compil": 25, "_step": [25, 462, 466], "new_v": 25, "adam_upd": [25, 287], "_lr": 25, "isinst": [25, 26, 224, 281], "_inplac": 25, "_stop_gradi": 25, "set_stat": [25, 462, 463, 464, 465, 466, 467], "mw": [25, 287, 289, 290], "vw": [25, 287, 289, 290], "revisit": 26, "revers": [26, 38, 224, 238, 353, 358], "pre": [26, 38, 114], "captur": 26, "one_hot": [26, 224, 425], "sparse_funct": 26, "num_class": [26, 393, 394], "ey": [26, 65], "cumprod": [26, 224], "exclus": [26, 65, 66, 224, 235, 259, 260, 262, 287, 293, 393, 395], "ones_lik": [26, 65, 425], "num_dim": 26, "new_axi": 26, "plai": 26, "constitu": 26, "_linear": 26, "forward": [26, 37, 38, 458, 459, 462, 466], "previou": [26, 287, 290, 294], "to_backend": 26, "jax_graph": 26, "learnabl": [26, 391, 392, 460, 461], "post": [26, 391, 392, 425, 431], "to_ivy_modul": [26, 435], "thinli": 26, "preserv": [26, 38, 287, 298, 353, 358], "to_haiku_modul": 26, "hk": 26, "loss_fn_t": 26, "transform": [26, 37, 311, 319, 320], "without_apply_rng": 26, "rng": 26, "prngkei": 26, "42": 26, "init": 26, "update_rul": 26, "01": 26, "tree_multimap": 26, "architectur": [26, 38], "mechan": [36, 38, 425], "vision": [36, 425], "robot": [36, 425], "memori": [36, 38, 114, 132, 153, 158, 160, 163, 311, 321, 425], "overview": 37, "focus": 37, "variou": 37, "field": [37, 324, 329, 339, 342, 405, 406, 407], "perfect": 37, "showcas": 37, "3d": [37, 446, 451, 452], "differenti": 37, "demo": [37, 425], "pip": [37, 425], "orient": 37, "pose": 37, "largest": [37, 84, 101, 102, 324, 342], "euler": [37, 64], "quaternion": 37, "rotat": 37, "matric": [37, 65, 76, 80, 81, 311, 320, 324, 325, 327, 328, 329, 330, 331, 334, 335, 336, 338, 339, 341, 342, 343, 345], "vector": [37, 65, 76, 224, 232, 311, 320, 324, 326, 329, 332, 337, 342, 343, 346, 347, 348, 446, 456], "angl": [37, 164, 172, 182, 217], "ivy_mech": 37, "target_facing_rotation_matrix": 37, "polar_to_cartesian_coord": 37, "predominantli": 37, "ordin": [37, 324, 341], "warp": [37, 303, 304], "optic": 37, "flow": 37, "voxel": 37, "cloud": 37, "ivy_vis": 37, "coords_to_voxel_grid": 37, "render_pixel_coord": 37, "neural": [37, 311, 425, 432, 446], "radianc": 37, "nerf": 37, "trajectori": 37, "motion": 37, "plan": [37, 425], "mobil": 37, "ivy_robot": 37, "sample_spline_path": 37, "rigidmobil": 37, "sample_bodi": 37, "drone": 37, "sample_link": 37, "openai": 37, "swimmer": 37, "cumul": [37, 224, 235, 236], "reward": 37, "supervis": 37, "reinforc": 37, "door": [37, 38], "intersect": 37, "cartpol": 37, "mountain_car": 37, "pendulum": 37, "reacher": 37, "polici": 37, "condit": [37, 62, 63, 373, 383, 384, 400, 404], "learnt": 37, "ture": 37, "ntm": 37, "egospher": 37, "spatial": 37, "esm": 37, "ivy_memori": 37, "egocentr": 37, "room": 37, "collect": [37, 54, 62, 114, 224, 287, 303, 311, 349, 373, 386, 391, 393, 432, 446, 460, 462], "inspir": 37, "technic": 38, "doubt": 38, "grate": 38, "put": 38, "probe": 38, "q": [38, 311, 323, 324, 329, 339], "static": [38, 62, 63], "xla": 38, "buffer": 38, "certain": [38, 65, 66, 74, 75], "deal": 38, "kind": [38, 84, 101, 102, 164, 212, 413, 418, 420], "gold": 38, "dex": 38, "phase": 38, "loop": [38, 369, 370, 371, 372], "lax": 38, "scan": 38, "tricki": 38, "predictor": 38, "tight": 38, "driver": 38, "schedul": 38, "algorithm": [38, 311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "eager": 38, "dispatch": 38, "Will": 38, "pars": 38, "ast": 38, "dynamic": 38, "cond": 38, "strive": 38, "statement": 38, "jacobian": 38, "checkpoint": 38, "autodiff": 38, "realli": 38, "shine": 38, "unless": [38, 164, 208, 224, 266], "merci": 38, "whatev": 38, "superset": 38, "denomin": [38, 224, 243, 249, 272, 277, 278, 391, 392, 460, 461], "inde": 38, "autograd": 38, "cluster": 38, "compet": 38, "paradigm": 38, "parallelis": [38, 114, 123, 124], "spmd": 38, "mixtur": 38, "expert": 38, "sophist": 38, "depart": 38, "routin": 38, "hundr": 38, "thousand": 38, "too": [38, 164, 168, 208], "deepli": [38, 373, 375], "moment": [38, 287, 289, 290, 294, 462, 463, 464], "distribut": [38, 114, 135, 139, 140, 141, 142, 311, 319, 349, 351, 393, 394, 395, 396, 397, 446, 454, 458, 459], "broadli": 38, "heavili": 38, "supplementari": 38, "someon": 38, "drop": 38, "Is": 38, "reusabl": 38, "difficult": [38, 405, 406, 409], "fanci": 38, "fusion": 38, "lose": 38, "vmap": 38, "pmap": 38, "primari": 38, "overhead": 38, "ineffici": 38, "eventu": 38, "supplement": 38, "backdoor": 38, "callback": 38, "attempt": 38, "load": 38, "record": 38, "metric": 38, "visual": 38, "somewhat": 38, "advoc": 38, "compos": 38, "outsourc": 38, "third": [38, 324, 342, 405, 406], "contextmanag": [39, 40], "choose_random_framework": 39, "clear_framework_stack": 39, "global_framework": [39, 43], "noqa": [39, 43, 44, 65, 76, 164, 168, 221, 353, 362], "retriev": [39, 44], "ivy_np": [39, 44], "ivy_jax": [39, 44], "try_import_ivy_jax": 39, "warn": [39, 46, 47, 48, 49, 50], "try_import_ivy_mxnet": 39, "try_import_ivy_numpi": 39, "try_import_ivy_tf": 39, "try_import_ivy_torch": 39, "unset_framework": 39, "adjust": [39, 51, 413, 419, 421], "henc": [39, 51, 405, 406, 409], "swap": [39, 51, 353, 366], "eagertensor": [39, 51], "gelu": [54, 432], "gaussian": [54, 55], "leaki": [54, 55, 56], "leaky_relu": [54, 425], "alpha": [54, 56], "rectifi": [54, 56, 57], "neg": [54, 56, 65, 66, 70, 164, 192, 193, 208, 212, 213, 324, 342, 346, 347, 353, 358, 362, 422, 423, 424], "slope": [54, 56], "39": [54, 56], "85": [54, 56], "17": [54, 56], "269": [54, 58], "731": [54, 58], "881": [54, 58], "softmax": [54, 311, 322, 323, 425], "09003057": [54, 59], "24472848": [54, 59], "66524094": [54, 59], "softplu": [54, 425], "3461": [54, 60], "6491": [54, 60], "5349962": [54, 60], "4203641": [54, 60], "hyperbol": [54, 61, 164, 167, 170, 173, 182, 217, 222], "55": [54, 61], "50": [54, 61], "func": [62, 63, 114, 158, 224, 230, 287, 291, 373, 386], "faster": [62, 63], "invoc": [62, 63], "718281828459045": 64, "inf": [64, 224, 252, 286, 324, 347], "newaxi": 64, "alia": 64, "pi": 64, "141592653589793": 64, "mathemat": [64, 164, 168, 172, 187, 208, 324, 347], "evenli": [65, 66, 74, 75, 353, 363], "half": [65, 66, 393, 395, 397], "word": [65, 66, 393, 397, 435, 436], "distanc": [65, 66], "adjac": [65, 66], "empti": [65, 66, 413, 419, 420, 422, 423, 424], "dimension": [65, 66, 70, 76, 324, 326, 327, 332, 335, 337, 338, 346, 347, 353, 363, 400, 401, 402, 403, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "ceil": [65, 66, 164, 425], "datatyp": [65, 67, 77, 84, 94, 104, 105], "asarrai": [65, 311, 312], "fill": [65, 68, 72, 73, 78, 79, 82, 83, 393, 395], "uniniti": [65, 68, 69], "empty_lik": 65, "n_row": [65, 70], "n_col": [65, 70], "diagon": [65, 70, 80, 81, 324, 345, 413, 414], "elsewher": [65, 70, 400, 404], "row": [65, 70, 324, 341, 342, 393, 394, 400, 403], "column": [65, 70, 324, 329, 339, 341, 342, 413, 414], "upper": [65, 70, 81, 324, 325, 339, 393, 397], "from_dlpack": 65, "__dlpack__": [65, 71], "view": [65, 71], "interchang": [65, 71, 353, 366], "boolean": [65, 72, 84, 90, 103, 113, 114, 149, 161, 164, 174, 175, 177, 179, 202, 203, 204, 205, 224, 225, 227, 228, 252, 253, 254, 258, 259, 260, 261, 262, 279, 286, 287, 293, 369, 370, 371, 373, 383, 413, 417], "full_lik": 65, "endpoint": [65, 74], "entri": [65, 74, 75, 353, 363, 373, 386], "meshgrid": 65, "xy": [65, 76], "coordin": [65, 76, 164, 172], "cartesian": [65, 76], "matrix": [65, 76, 80, 81, 224, 225, 231, 311, 320, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 345, 348, 446, 456], "ij": [65, 76, 413, 414], "n": [65, 76, 80, 81, 311, 319, 324, 328, 332, 334, 335, 336, 337, 338, 339, 342, 343, 345, 346, 347, 348, 353, 356, 357, 359, 365, 368, 393, 396, 397, 400, 403, 413, 416, 419, 420, 421, 422, 423, 424], "rank": [65, 76, 224, 285, 324, 326, 335, 339, 341, 345, 346, 347, 353, 356, 357, 365, 368, 400, 403, 422, 423, 424], "ni": [65, 76], "xi": [65, 76], "n1": [65, 76], "n2": [65, 76], "n3": [65, 76], "accordingli": [65, 76, 164, 187, 324, 347, 400, 402, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "p": [65, 76, 224, 231, 232, 311, 319, 324, 333, 347, 446, 454], "xv": [65, 76], "yv": [65, 76], "tril": 65, "triangular": [65, 80, 81, 324, 325, 339], "innermost": [65, 80, 81, 324, 325, 327, 328, 329, 330, 331, 335, 336, 338, 339, 341, 342, 343, 345], "mxn": [65, 80, 81, 324, 328, 335, 336, 338, 339, 343, 345], "triu": 65, "zeros_lik": [65, 425], "defaultdtyp": [84, 85], "defaultfloatdtyp": [84, 86], "float_dtyp": [84, 97, 108], "defaultintdtyp": [84, 87], "as_ivy_dtyp": 84, "dtype_in": [84, 88, 89, 95, 100, 103, 104, 105, 113], "astyp": 84, "cast": [84, 90, 93, 303, 305, 310, 353, 355, 413, 418, 420, 425], "integr": [84, 90], "match": [84, 90, 164, 213, 224, 263], "float64": [84, 90], "broadcast_arrai": 84, "broadcast_to": 84, "incompat": [84, 92], "can_cast": 84, "from_": [84, 93], "occur": [84, 93, 400, 401, 402, 405, 406, 407, 409], "closest_valid_dtyp": 84, "closest": [84, 94, 164, 180, 188, 189, 223], "convert_dtyp": 84, "summari": [84, 96, 97, 98, 107, 108, 109, 114, 127, 128, 133, 155, 224, 233, 237, 251, 287, 297, 302], "default_float_dtyp": 84, "floatdtyp": [84, 97], "int_dtyp": [84, 98, 109], "intdtyp": [84, 98], "dtype_bit": 84, "finfo": 84, "inform": [84, 101, 102, 287, 298], "followng": [84, 101], "occupi": [84, 101, 102, 224, 269, 270], "ep": [84, 101, 324, 335, 338], "smallest": [84, 101, 102, 164, 180], "max": [84, 101, 102, 164, 206, 224, 231, 232, 240, 269, 270, 324, 335, 338, 413, 462, 464], "min": [84, 101, 102, 164, 207, 224, 240, 269, 270, 277, 324, 339, 342, 343, 347, 413], "smallest_norm": [84, 101], "precis": [84, 101, 164, 208, 218], "iinfo": 84, "encapsul": [84, 102], "invalid_dtyp": 84, "is_float_dtyp": 84, "is_int_dtyp": [84, 224, 283], "result_typ": 84, "arrays_and_dtyp": [84, 106], "unset_default_dtyp": 84, "unset_default_float_dtyp": 84, "unset_default_int_dtyp": 84, "valid_dtyp": 84, "noinspect": [85, 86, 87, 115, 288], "pyshadowingnam": [85, 86, 87, 115, 288], "defaultdevic": [114, 115], "devcloneditem": 114, "multidevitem": [114, 116, 119], "devclonedit": 114, "multidevit": [114, 117, 120, 123, 124, 128], "devclonednest": 114, "max_depth": [114, 118, 121, 128, 138, 142, 146, 224, 251, 373, 385], "multidevnest": [114, 118, 121], "devdistitem": 114, "devdistit": 114, "devdistnest": 114, "devmanag": [114, 122], "dev_mapp": 114, "da_dim_s": 114, "safety_factor": 114, "min_dev_dim_s": 114, "max_dev_dim_step_ratio": 114, "min_unit_dev_tune_step": 114, "min_sf_tune_step": 114, "starting_split_factor": 114, "max_split_factor_step_s": 114, "05": 114, "tune_dev_alloc": 114, "tune_dev_split": 114, "mapper": [114, 123, 124], "receivess": 114, "ratio": [114, 287, 294, 303, 309, 462, 464], "safe": [114, 123], "oom": 114, "tune": 114, "da_tune_step": 114, "dim_siz": 114, "ds_tune_step": 114, "to_clon": 114, "to_distribut": 114, "multidevic": [114, 123], "parallel": [114, 123, 124], "mutlidevic": [114, 123], "repeated_config_check": 114, "tune_step": 114, "devmapp": [114, 124], "ret_fn": [114, 123, 124], "queue_class": [114, 123, 124], "worker_class": [114, 123, 124], "timeout": [114, 123, 124, 224, 268, 273], "produc": [114, 123, 124], "worker": [114, 123, 124], "used_dev": [114, 123], "split_factor": [114, 123], "sf": [114, 123], "devmappermultiproc": 114, "multidev": [114, 125, 126, 127, 146], "at_dev": [114, 127, 128], "profil": 114, "save_dir": [114, 129], "conver": [114, 131, 132, 153, 160, 163], "clear_mem_on_dev": 114, "cach": [114, 132, 224, 230], "dev_clon": 114, "deviceic": [114, 135], "dev_clone_arrai": 114, "dev_clone_it": 114, "xs": [114, 137, 141, 143, 144, 145, 224, 225, 228, 287, 291, 353, 355], "dev_clone_nest": 114, "dev_dist": 114, "dev_dist_arrai": 114, "dev_dist_it": 114, "iterbal": [114, 141, 145], "dev_dist_nest": 114, "dev_unifi": 114, "concatten": [114, 143, 144, 145, 146, 158], "concat": [114, 143, 144, 145, 146, 158, 224, 244, 353, 425], "dev_unify_arrai": 114, "dev_unify_it": 114, "dev_unify_nest": 114, "spread": [114, 146], "dev_util": 114, "get_all_arrays_on_dev": 114, "aliv": [114, 148, 150, 154, 224, 247, 265, 267], "gpu_is_avail": 114, "num_arrays_on_dev": 114, "num_cpu_cor": 114, "num_gpu": 114, "percent_used_mem_on_dev": 114, "process_specif": [114, 153, 163], "percentag": [114, 153], "ram": [114, 153, 160, 163], "alon": [114, 153, 163], "print_all_arrays_on_dev": 114, "set_split_factor": 114, "scale": [114, 156, 157, 287, 295, 311, 319, 322, 323, 391, 392, 446, 454, 457, 462, 465], "chunk": [114, 156, 157, 158], "split_func_cal": 114, "max_chunk_s": [114, 158], "chunk_siz": [114, 158], "input_ax": [114, 158], "output_ax": [114, 158], "feed": [114, 158], "fist": [114, 158], "to_dev": 114, "total_mem_on_dev": 114, "amount": [114, 160, 349, 351], "gb": [114, 160, 163], "tpu_is_avail": 114, "tpu": [114, 161], "unset_default_devic": 114, "used_mem_on_dev": 114, "ab": [164, 212, 324, 347, 425], "magnitud": [164, 165, 168, 208, 324, 342, 343], "aco": [164, 425], "princip": [164, 166, 169, 171], "cosin": [164, 166, 167, 181, 182], "greater": [164, 166, 169, 172, 176, 178, 188, 189, 212, 213, 215, 223, 324, 326, 353, 364, 393, 397], "acosh": [164, 425], "x1_i": [164, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 190, 191, 195, 196, 201, 202, 204, 205, 208, 210, 212, 213, 220], "x2_i": [164, 168, 172, 174, 176, 177, 178, 179, 183, 184, 189, 190, 191, 195, 196, 201, 202, 204, 205, 208, 210, 212, 213, 220], "finit": [164, 168, 172, 192, 208, 212, 213], "nonzero": [164, 168, 208, 400], "nor": [164, 168, 208], "nearest": [164, 168, 208, 214], "2019": [164, 168, 187, 208], "appropri": [164, 168, 208, 400, 401], "commut": [164, 168], "asin": [164, 425], "sine": [164, 169, 170, 216, 217], "asinh": [164, 425], "atan": [164, 425], "atan2": [164, 425], "quotient": [164, 172], "notat": [164, 172, 413, 414], "denot": [164, 172], "pair": [164, 172, 311, 323, 324, 326], "quadrant": [164, 172], "3\u03c0": [164, 172], "atanh": [164, 425], "549": [164, 173], "bitwise_and": 164, "bitwis": [164, 174, 177, 179, 205], "AND": [164, 174, 202, 422, 423], "underli": [164, 174, 177, 179, 205], "binari": [164, 174, 177, 179, 205, 349, 350], "bitwise_invert": 164, "invert": [164, 175], "bitwise_left_shift": 164, "bitwise_or": 164, "OR": [164, 177, 204, 422, 424], "bitwise_right_shift": 164, "arithmet": [164, 178, 413, 416], "propag": [164, 178, 413, 415, 416, 417, 419, 420, 421], "thu": [164, 178, 212, 213, 324, 329], "floor": [164, 178, 224, 243, 425], "divis": [164, 178, 183, 189, 213, 224, 243, 249, 272, 277, 278, 287, 289, 290, 294, 462, 463, 464], "lh": [164, 178], "int64": [164, 178, 413, 418, 420], "rh": [164, 178], "bitwise_xor": 164, "xor": [164, 179, 205], "416": [164, 181], "cosh": [164, 425], "divid": [164, 189, 224, 277, 353, 363], "dividend": [164, 183, 213], "divisor": [164, 183, 213, 287, 289, 290, 294, 413, 419, 421, 462, 463, 464], "truth": [164, 184, 190, 191, 195, 196, 210], "erf": 164, "gauss": [164, 185], "exponenti": [164, 185, 186, 201, 212], "exp": [164, 187, 201, 425], "logarithm": [164, 186, 197, 198, 199, 200, 201, 324, 340], "evalu": [164, 186, 187, 197, 198, 199, 200, 209, 215, 219, 373, 374, 383, 384, 422, 423, 424], "7182817": [164, 186], "389056": [164, 186], "085537": [164, 186], "expm1": 164, "accur": [164, 187], "fdlibm": [164, 187], "compliant": [164, 187, 203, 204, 413, 415, 416, 417], "potenti": [164, 187], "greatest": [164, 188, 189], "floor_divid": 164, "greater_equ": 164, "isfinit": 164, "out_i": [164, 192, 193, 194], "isinf": 164, "isnan": 164, "less_equ": 164, "log10": 164, "log1p": 164, "log2": 164, "logaddexp": 164, "logical_and": [164, 425], "logical_not": [164, 425], "NOT": [164, 203], "recommend": [164, 203, 204, 213, 413, 416], "logical_or": [164, 425], "logical_xor": 164, "threshold": [164, 206, 207], "exce": [164, 207], "multipli": [164, 224, 235], "product": [164, 208, 224, 235, 311, 322, 323, 324, 326, 332, 337, 346, 413, 414, 418, 446, 457], "not_equ": 164, "pow": 164, "expon": [164, 212, 224, 278], "versu": [164, 212], "odd": [164, 212], "remaind": [164, 224, 243, 353, 363], "modulu": [164, 213], "primarili": [164, 213], "backward": [164, 213, 324, 346, 422, 423, 424], "sinh": [164, 425], "sqrt": [164, 324, 347], "squar": [164, 218, 324, 325, 327, 329, 330, 331, 334, 340, 341, 342], "after": [164, 218, 287, 290, 291, 292, 294, 295, 296, 303, 304, 307, 391, 392, 462, 463, 464, 465, 466, 467], "indistinguish": [164, 218], "infinit": [164, 218], "subtract": 164, "56": [164, 221], "19": [164, 221], "546": [164, 221], "842": [164, 221], "916": [164, 221], "96": [164, 221], "37": [164, 221], "996": [164, 221], "328": [164, 221], "143": [164, 221], "38": [164, 221], "trunc": 164, "decim": [164, 223], "all_equ": 224, "equality_matrix": [224, 225], "arg_nam": 224, "array_equ": 224, "j": [224, 227, 324, 345, 413, 414], "arrays_equ": 224, "assert_supports_inplac": 224, "cache_fn": 224, "later": [224, 230], "clip_matrix_norm": 224, "max_norm": [224, 231, 232], "downscal": [224, 231, 232], "clip_vector_norm": 224, "container_typ": 224, "copy_arrai": 224, "cumsum": [224, 425], "current_framework_str": 224, "default_v": [224, 238], "catch_except": [224, 238], "rev": [224, 238], "with_cal": [224, 238], "catch": [224, 238], "einops_rearrang": 224, "axes_length": [224, 239, 240, 241], "rearrang": [224, 239, 241], "arrang": [224, 239], "einops_reduc": 224, "einops_repeat": 224, "floormod": [224, 425], "mod": [224, 243], "fourier_encod": 224, "max_freq": [224, 244], "num_band": [224, 244], "flatten": [224, 244, 324, 337, 347, 353, 360, 362, 400, 401, 402, 405, 406, 407, 409], "pad": [224, 244, 311, 312, 313, 314, 315, 316, 317, 318, 353, 356, 368, 446, 447, 448, 449, 450, 451, 452, 453], "fourier": [224, 244], "frequenc": [224, 244], "band": [224, 244], "linearli": [224, 244, 324, 341], "oppos": [224, 244], "geometr": [224, 244], "seper": [224, 244], "expand": [224, 244, 353, 357], "channel": [224, 244, 303, 305, 306, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456], "gather": [224, 246], "slice": [224, 245, 246, 373, 382], "gather_nd": [224, 425], "get_all_arrays_in_memori": 224, "get_min_bas": 224, "get_min_denomin": 224, "get_num_dim": [224, 425], "as_arrai": [224, 250, 275], "get_referrers_recurs": 224, "seen_set": [224, 251], "local_set": [224, 251], "has_nan": 224, "include_inf": [224, 252, 286], "indices_wher": [224, 425], "inplace_arrays_support": 224, "inplace_decr": 224, "decrement": [224, 255], "inplace_incr": 224, "increment": [224, 256], "inplace_upd": [224, 435, 436], "inplace_variables_support": 224, "is_ivy_contain": 224, "match_kwarg": 224, "allow_dupl": [224, 263], "forkserv": [224, 264], "spawn": [224, 264], "num_arrays_in_memori": 224, "hot": [224, 266], "scatter": [224, 266, 269, 270], "overrid": [224, 266], "print_all_arrays_in_memori": 224, "queue_timeout": 224, "scatter_flat": 224, "flat": [224, 269, 353, 360], "set_min_bas": 224, "set_min_denomin": 224, "set_queue_timeout": 224, "set_tmp_dir": 224, "tmp_dr": [224, 274], "temporari": [224, 274], "y_tupl": [224, 275], "y_tensor": [224, 275], "as_tensor": [224, 275], "stable_divid": 224, "min_denomin": [224, 277], "stabil": [224, 277, 278, 410, 411, 412], "_min_denomin": [224, 277], "stable_pow": 224, "min_bas": [224, 278], "_min_bas": [224, 278, 391, 392, 460, 461], "supports_inplac": 224, "tmp_dir": 224, "to_list": [224, 425], "to_scalar": 224, "try_else_non": 224, "unpack": [224, 285], "r": [224, 285, 324, 339, 348], "value_is_nan": 224, "gradienttrack": [287, 288], "with_grad": [287, 297], "adam_step": 287, "dcdw": [287, 289, 290, 292, 294, 295], "delta": [287, 289], "cost": [287, 289, 290, 292, 294, 295, 296, 369, 370, 371, 372], "ws": [287, 289, 290, 292, 294, 295, 296], "en": [287, 289, 290], "wikipedia": [287, 289, 290], "wiki": [287, 289, 290], "stochastic_gradient_desc": [287, 289, 290], "dc": [287, 289, 290, 292, 294, 295, 296], "dw": [287, 289, 290, 292, 294, 295, 296], "averag": [287, 289, 290, 294, 369, 370, 371], "forget": [287, 289, 290, 294, 462, 463, 464], "mw_tm1": [287, 290, 294], "vw_tm1": [287, 290, 294], "rate": [287, 290, 292, 294, 295, 296, 369, 370, 371, 372, 446, 457, 462, 463, 464, 465, 466, 467], "rel": [287, 290, 292, 294, 295, 296, 324, 328, 335, 338, 345, 353, 358, 362, 410, 411, 412], "ws_new": [287, 290, 292, 294, 295, 296], "retain_grad": [287, 291], "dy": [287, 291, 303, 306], "dx": [287, 291, 303, 306], "retain": [287, 291], "gradient_descent_upd": [287, 369, 370, 371, 372, 425], "is_vari": 287, "lamb_upd": 287, "max_trust_ratio": [287, 294, 462, 464], "decay_lambda": [287, 294, 295, 462, 464, 465], "trust": [287, 294, 462, 464], "decai": [287, 294, 295, 462, 464, 465], "lars_upd": 287, "layerwis": [287, 295, 462, 465], "optimizer_upd": 287, "effective_grad": [287, 296], "set_with_grad": 287, "preserve_typ": [287, 298], "unset_with_grad": 287, "variable_data": 287, "bilinear_resampl": [303, 425], "bilinearli": [303, 304], "sampl": [303, 304, 307, 311, 319, 393, 394, 396, 397, 413, 419, 421, 446, 454], "num_sampl": [303, 304, 307, 393, 394], "bilinear": [303, 304], "float_img_to_uint8_img": 303, "uint8": [303, 305, 310], "gradient_imag": [303, 425], "linear_resampl": 303, "interpol": [303, 307], "resampl": [303, 307], "random_crop": 303, "crop_siz": [303, 308], "image_dim": [303, 308], "crop": [303, 308], "2d": [303, 308, 324, 340, 446, 449, 450, 453], "nh": [303, 308], "nw": [303, 308], "stack_imag": [303, 425], "desired_aspect_ratio": [303, 309], "group": [303, 309], "window": [303, 309, 311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "width": [303, 309], "uint8_img_to_float_img": 303, "conv1d": [311, 446], "stride": [311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "data_format": [311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "nwc": [311, 312, 313, 446, 447, 448], "dilat": [311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "convolut": [311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "d_in": [311, 312, 313, 314, 315, 316, 317], "fw": [311, 312, 313, 314, 315, 316, 317, 318], "d_out": [311, 312, 313, 314, 315, 316, 317], "slide": [311, 312, 313, 314, 315, 316, 317, 318, 446, 447, 448, 449, 450, 451, 452, 453], "ncw": [311, 312, 313, 446, 447, 448], "wio": [311, 312], "conv1d_transpos": 311, "output_shap": [311, 313, 315, 317, 446, 448, 450, 452], "conv2d": [311, 425, 446], "nhwc": [311, 314, 315, 318, 446, 449, 450, 453], "fh": [311, 314, 315, 316, 317, 318], "nchw": [311, 314, 315, 318, 446, 449, 450, 453], "conv2d_transpos": 311, "conv3d": [311, 446], "ndhwc": [311, 316, 317, 446, 451, 452], "volum": [311, 316], "fd": [311, 316, 317], "ncdhw": [311, 316, 317, 446, 451, 452], "dhwio": [311, 316], "conv3d_transpos": 311, "depthwise_conv2d": [311, 425], "depthwis": [311, 318, 446, 453], "prob": [311, 319, 393, 394, 446, 454], "bernoul": [311, 319, 446, 454], "out_featur": [311, 319, 320], "incom": [311, 320], "outer_batch_shap": [311, 320], "inner_batch_shap": [311, 320], "in_featur": [311, 320], "cell": [311, 321, 446, 455], "multi_head_attent": 311, "num_head": [311, 322, 446, 457], "mask": [311, 322, 323], "to_q_fn": [311, 322], "to_kv_fn": [311, 322], "to_out_fn": [311, 322], "to_q_v": [311, 322], "to_kv_v": [311, 322], "to_out_v": [311, 322], "head": [311, 322, 425, 446, 457], "num_queri": [311, 322, 323], "x_feat_dim": [311, 322], "measur": [311, 322, 446, 457], "num_kei": [311, 322, 323], "cont_feat_dim": [311, 322], "numhead": [311, 322], "feat_dim": [311, 322, 323], "dot": [311, 322, 323, 324, 346, 446, 457], "out_feat_dim": [311, 322], "scaled_dot_product_attent": 311, "choleski": 324, "decomposit": [324, 325, 339, 342], "symmetr": [324, 325, 329, 330, 348], "u": [324, 325, 342], "l": [324, 325, 329, 332, 345], "73": [324, 325], "57": [324, 325], "63": [324, 325], "cross": [324, 349, 350, 351, 352, 425], "vif": [324, 326], "det": 324, "offset": [324, 328, 345, 391, 392], "axis1": [324, 328, 353, 366], "axis2": [324, 328], "eigh": 324, "eigendecomposit": [324, 329], "qlq\u1d40": [324, 329], "orthogon": [324, 329], "eig": [324, 329], "namedtupl": [324, 329, 339, 342, 405, 406, 407], "eigenvalu": [324, 329, 330], "eigenvector": [324, 329], "eigvalsh": 324, "25": [324, 331, 349, 351], "75": [324, 331], "prepend": [324, 332], "matrix_norm": 324, "ord": [324, 333, 347], "fro": [324, 333], "matrix_pow": 324, "matrix_rank": 324, "rtol": [324, 335, 338], "singular": [324, 335, 338, 342, 343], "toler": [324, 335, 338], "largest_singular_valu": [324, 335, 338], "outer": [324, 369, 370, 371, 372], "array_lik": [324, 337], "pinv": [324, 425], "moor": [324, 338], "penros": [324, 338], "pseudo": [324, 338], "qr": 324, "orthonorm": [324, 339, 342], "slodget": 324, "logdet": [324, 340], "equat": [324, 341, 413, 414], "coeffici": [324, 341], "svd": [324, 425], "full_matric": [324, 342], "usvh": [324, 342], "vh": [324, 342], "hermitian": [324, 342], "descend": [324, 342, 343, 410, 411, 412], "et": [324, 342], "cetera": [324, 342], "adjoint": [324, 342], "random_norm": [324, 342, 393], "reconstruct": [324, 342, 405, 406, 408], "reconstructed_x": [324, 342], "svdval": 324, "tensordot": 324, "contract": [324, 344, 413, 414], "vecdot": 324, "invalid": [324, 346, 422, 423, 424], "vector_norm": 324, "singleton": [324, 347, 353, 364, 400, 402, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "liter": [324, 347], "manhattan": [324, 347], "l2": [324, 347], "euclidean": [324, 347], "vector_to_skew_symmetric_matrix": [324, 425], "mathbf": [324, 348], "mathbb": [324, 348], "skew": [324, 348], "binary_cross_entropi": 349, "entropi": [349, 350, 351, 352], "predict": [349, 350, 351, 352], "discret": [349, 351], "smooth": [349, 351], "3862944": [349, 351], "35667497": [349, 351], "sparse_cross_entropi": 349, "spars": [349, 352], "logit": [349, 352], "join": [353, 355, 365, 425], "constant_pad": 353, "pad_width": [353, 356, 368], "before_1": [353, 356, 368], "after_1": [353, 356, 368], "before_n": [353, 356, 368], "after_n": [353, 356, 368], "insert": [353, 357, 373, 378, 400, 401], "reorder": [353, 358], "permute_dim": 353, "permut": [353, 359, 366], "repetit": [353, 360, 367], "beyond": [353, 362], "restor": [353, 362], "with_remaind": [353, 363], "squeez": [353, 425], "famili": [353, 365], "intxx": [353, 365], "floatxx": [353, 365], "swapax": 353, "axis0": [353, 366], "tile": [353, 425], "rep": [353, 367], "zero_pad": [353, 425], "fomaml_step": 369, "inner_cost_fn": [369, 370, 371], "outer_cost_fn": [369, 370, 371], "inner_grad_step": [369, 370, 371, 372], "inner_learning_r": [369, 370, 371, 372], "inner_optimization_step": [369, 370, 371, 372], "inner_batch_fn": [369, 370, 371], "outer_batch_fn": [369, 370, 371], "average_across_step": [369, 370, 371], "inner_v": [369, 370, 371], "keep_inner_v": [369, 370, 371], "outer_v": [369, 370, 371], "keep_outer_v": [369, 370, 371], "return_inner_v": [369, 370, 371, 372], "num_task": [369, 370, 371, 372], "maml": [369, 370, 371], "recev": [369, 370, 371], "maml_step": 369, "rece": [369, 371], "reptile_step": 369, "cost_fn": [369, 372], "reptil": [369, 372], "receivng": [369, 372], "all_nested_indic": 373, "include_nest": [373, 374], "_index": [373, 374, 384], "_base": [373, 374, 383, 384], "begin": [373, 374, 384], "copy_nest": 373, "include_deriv": [373, 375, 385], "to_mut": [373, 375, 385], "mutabl": [373, 375, 385], "index_nest": 373, "insert_into_nest_at_index": 373, "insert_into_nest_at_indic": 373, "map_nest_at_index": 373, "map_nest_at_indic": 373, "multi_index_nest": 373, "repeatedli": [373, 382], "nested_ani": 373, "check_nest": [373, 383, 384], "conditon": [373, 383, 384], "nested_indices_wher": 373, "to_ignor": [373, 384], "nested_map": 373, "_depth": [373, 385], "_tuple_check_fn": [373, 385], "_list_check_fn": [373, 385], "_dict_check_fn": [373, 385], "wherebi": [373, 385], "nested_multi_map": 373, "prune": [373, 386, 387, 388], "leftmost": [373, 386], "container0": [373, 386], "prune_nest_at_index": 373, "prune_nest_at_indic": 373, "set_nest_at_index": 373, "set_nest_at_indic": 373, "layer_norm": 391, "normalized_idx": [391, 392], "new_std": [391, 392, 460, 461], "mini": [391, 392, 460, 461], "gamma": [391, 392], "beta": [391, 392], "multinomi": 393, "population_s": [393, 394], "draw": [393, 394, 396, 397], "unnorm": [393, 394], "drawn": [393, 394, 395, 396, 397], "home": [393, 394, 395, 396, 397], "randint": [393, 425], "uniformli": [393, 395, 397], "highest": [393, 395], "parameter": [393, 396, 397], "6444774682897879": [393, 396], "boundari": [393, 397], "89150229": [393, 397], "seed": [393, 425], "seed_valu": [393, 398], "shuffl": [393, 425], "argmax": [400, 425], "occurr": [400, 401, 402, 405, 406], "argmin": [400, 425], "style": [400, 403], "yield": [400, 404], "unique_al": 405, "x_j": [405, 406, 409], "impli": [405, 406, 409], "inverse_indic": [405, 406, 408], "aggreg": [405, 406], "fourth": [405, 406], "unique_count": 405, "unique_invers": 405, "unique_valu": 405, "argsort": 410, "ascend": [410, 411], "einsum": 413, "einstein": [413, 414], "summat": [413, 414], "seq": [413, 414], "sentinel": [413, 415, 417], "uint64": [413, 418, 420], "int16": [413, 418, 420], "unsign": [413, 418, 420], "uint16": [413, 418, 420], "uint32": [413, 418, 420], "resolv": [413, 418, 420], "degre": [413, 419, 421], "freedom": [413, 419, 421], "commonli": [413, 419, 421], "bessel": [413, 419, 421], "8164966": [413, 419], "89": [413, 420], "varianc": [413, 421], "unbias": [413, 421], "autom": 425, "grow": 425, "ai": 425, "got": 425, "colab": 425, "interact": 425, "immedi": 425, "favourit": 425, "jax_concat": 425, "tf_concat": 425, "np_concat": 425, "mx_concat": 425, "torch_concat": 425, "prompt": 425, "get_devic": 425, "reduce_prod": 425, "linalg": 425, "neural_net": 425, "ecosystem": [425, 431], "popular": [425, 431], "acceler": 425, "articl": 425, "lenton2021ivi": 425, "inter": 425, "portabl": 425, "author": 425, "lenton": 425, "daniel": 425, "pardo": 425, "fabio": 425, "falck": 425, "fabian": 425, "jame": 425, "stephen": 425, "clark": 425, "ronald": 425, "journal": 425, "arxiv": 425, "preprint": 425, "2102": 425, "02886": 425, "2021": 425, "add_array_spec": 428, "fn_array_spec": 428, "inspect": [429, 430], "geglu": 432, "native_modul": [435, 436], "native_module_class": [435, 436], "firstlayersiren": 437, "kaimingnorm": [437, 441], "negative_slop": 437, "Ones": 437, "siren": 437, "w0": [437, 443], "30": [437, 443], "filter_s": [446, 447, 448], "1d": [446, 447, 448], "conv1dtranspos": 446, "filter_shap": [446, 449, 450, 451, 452, 453], "conv2dtranspos": 446, "conv3dtranspos": 446, "depthwiseconv2d": 446, "num_channel": [446, 453], "num_lay": [446, 455], "return_sequ": [446, 455], "return_st": [446, 455], "get_initial_st": [446, 455], "dens": [446, 456], "multiheadattent": 446, "query_dim": [446, 457], "head_dim": [446, 457], "dropout_r": [446, 457], "context_dim": [446, 457], "with_to_q_fn": [446, 457], "with_to_kv_fn": [446, 457], "with_to_out_fn": [446, 457], "build_mod": [446, 457, 458, 459], "on_init": [446, 457, 458, 459], "__call__": [446, 457, 458, 459], "store_var": [458, 459], "arg_stateful_idx": [458, 459], "kwarg_stateful_idx": [458, 459], "fallback_to_non_compil": [458, 459, 462, 466], "with_partial_v": [458, 459], "initialz": [458, 459], "from_cal": [458, 459], "check_submod_ret": [458, 459], "get_mod_kei": [458, 459], "top_mod": [458, 459], "mod_depth": [458, 459], "mod_height": [458, 459], "mod_with_top_mod_key_chain": [458, 459], "save_weight": [458, 459], "weights_path": [458, 459], "show_mod_in_top_mod": [458, 459], "upper_depth": [458, 459], "lower_depth": [458, 459], "show_structur": [458, 459], "show_v_in_top_v": [458, 459], "sub_mod": [458, 459], "show_v": [458, 459], "track_submod_call_ord": [458, 459], "track_submod_ret": [458, 459], "v_with_top_v_key_chain": [458, 459], "layernorm": 460, "normalized_shap": [460, 461], "elementwise_affin": [460, 461], "trail": [460, 461], "affin": [460, 461], "0001": [462, 463, 464], "init_on_first_step": [462, 466], "ignore_miss": [462, 466], "overriden": [462, 466], "sgd": 462, "stochast": [462, 467], "sub_modul": [468, 469], "color": [471, 472], "green": [471, 472]}, "objects": {"ivy": [[14, 0, 0, "-", "debugger"], [39, 0, 0, "-", "framework_handler"], [52, 0, 0, "-", "func_wrapper"], [428, 0, 0, "-", "inspection"], [471, 0, 0, "-", "verbosity"]], "ivy.debugger": [[15, 1, 1, "", "debug_mode"], [16, 1, 1, "", "set_breakpoint_debug_mode"], [17, 1, 1, "", "set_debug_mode"], [18, 1, 1, "", "set_exception_debug_mode"], [19, 1, 1, "", "unset_debug_mode"]], "ivy.framework_handler": [[39, 2, 1, "", "ContextManager"], [41, 1, 1, "", "choose_random_framework"], [42, 1, 1, "", "clear_framework_stack"], [43, 1, 1, "", "current_framework"], [44, 1, 1, "", "get_framework"], [45, 1, 1, "", "set_framework"], [46, 1, 1, "", "try_import_ivy_jax"], [47, 1, 1, "", "try_import_ivy_mxnet"], [48, 1, 1, "", "try_import_ivy_numpy"], [49, 1, 1, "", "try_import_ivy_tf"], [50, 1, 1, "", "try_import_ivy_torch"], [51, 1, 1, "", "unset_framework"]], "ivy.framework_handler.ContextManager": [[39, 3, 1, "", "__init__"]], "ivy.functional.ivy": [[54, 0, 0, "-", "activations"], [62, 0, 0, "-", "compilation"], [64, 0, 0, "-", "constants"], [65, 0, 0, "-", "creation"], [84, 0, 0, "-", "data_type"], [114, 0, 0, "-", "device"], [164, 0, 0, "-", "elementwise"], [224, 0, 0, "-", "general"], [287, 0, 0, "-", "gradients"], [303, 0, 0, "-", "image"], [311, 0, 0, "-", "layers"], [324, 0, 0, "-", "linear_algebra"], [349, 0, 0, "-", "losses"], [353, 0, 0, "-", "manipulation"], [369, 0, 0, "-", "meta"], [373, 0, 0, "-", "nest"], [391, 0, 0, "-", "norms"], [393, 0, 0, "-", "random"], [400, 0, 0, "-", "searching"], [405, 0, 0, "-", "set"], [410, 0, 0, "-", "sorting"], [413, 0, 0, "-", "statistical"], [422, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[55, 1, 1, "", "gelu"], [56, 1, 1, "", "leaky_relu"], [57, 1, 1, "", "relu"], [58, 1, 1, "", "sigmoid"], [59, 1, 1, "", "softmax"], [60, 1, 1, "", "softplus"], [61, 1, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[63, 1, 1, "", "compile"]], "ivy.functional.ivy.constants": [[64, 4, 1, "", "e"], [64, 4, 1, "", "inf"], [64, 4, 1, "", "nan"], [64, 4, 1, "", "newaxis"], [64, 4, 1, "", "pi"]], "ivy.functional.ivy.creation": [[66, 1, 1, "", "arange"], [65, 1, 1, "", "array"], [67, 1, 1, "", "asarray"], [68, 1, 1, "", "empty"], [69, 1, 1, "", "empty_like"], [70, 1, 1, "", "eye"], [71, 1, 1, "", "from_dlpack"], [72, 1, 1, "", "full"], [73, 1, 1, "", "full_like"], [74, 1, 1, "", "linspace"], [75, 1, 1, "", "logspace"], [76, 1, 1, "", "meshgrid"], [77, 1, 1, "", "native_array"], [78, 1, 1, "", "ones"], [79, 1, 1, "", "ones_like"], [80, 1, 1, "", "tril"], [81, 1, 1, "", "triu"], [82, 1, 1, "", "zeros"], [83, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[84, 2, 1, "", "DefaultDtype"], [84, 2, 1, "", "DefaultFloatDtype"], [84, 2, 1, "", "DefaultIntDtype"], [88, 1, 1, "", "as_ivy_dtype"], [89, 1, 1, "", "as_native_dtype"], [90, 1, 1, "", "astype"], [91, 1, 1, "", "broadcast_arrays"], [92, 1, 1, "", "broadcast_to"], [93, 1, 1, "", "can_cast"], [94, 1, 1, "", "closest_valid_dtype"], [95, 1, 1, "", "convert_dtype"], [96, 1, 1, "", "default_dtype"], [97, 1, 1, "", "default_float_dtype"], [98, 1, 1, "", "default_int_dtype"], [99, 1, 1, "", "dtype"], [100, 1, 1, "", "dtype_bits"], [101, 1, 1, "", "finfo"], [102, 1, 1, "", "iinfo"], [103, 1, 1, "", "invalid_dtype"], [104, 1, 1, "", "is_float_dtype"], [105, 1, 1, "", "is_int_dtype"], [106, 1, 1, "", "result_type"], [107, 1, 1, "", "set_default_dtype"], [108, 1, 1, "", "set_default_float_dtype"], [109, 1, 1, "", "set_default_int_dtype"], [110, 1, 1, "", "unset_default_dtype"], [111, 1, 1, "", "unset_default_float_dtype"], [112, 1, 1, "", "unset_default_int_dtype"], [113, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[84, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[84, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[84, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[114, 2, 1, "", "DefaultDevice"], [116, 2, 1, "", "DevClonedItem"], [117, 2, 1, "", "DevClonedIter"], [118, 2, 1, "", "DevClonedNest"], [119, 2, 1, "", "DevDistItem"], [120, 2, 1, "", "DevDistIter"], [121, 2, 1, "", "DevDistNest"], [114, 2, 1, "", "DevManager"], [123, 2, 1, "", "DevMapper"], [124, 2, 1, "", "DevMapperMultiProc"], [114, 2, 1, "", "MultiDev"], [126, 2, 1, "", "MultiDevItem"], [127, 2, 1, "", "MultiDevIter"], [128, 2, 1, "", "MultiDevNest"], [129, 2, 1, "", "Profiler"], [130, 1, 1, "", "as_ivy_dev"], [131, 1, 1, "", "as_native_dev"], [132, 1, 1, "", "clear_mem_on_dev"], [133, 1, 1, "", "default_device"], [134, 1, 1, "", "dev"], [135, 1, 1, "", "dev_clone"], [136, 1, 1, "", "dev_clone_array"], [137, 1, 1, "", "dev_clone_iter"], [138, 1, 1, "", "dev_clone_nest"], [139, 1, 1, "", "dev_dist"], [140, 1, 1, "", "dev_dist_array"], [141, 1, 1, "", "dev_dist_iter"], [142, 1, 1, "", "dev_dist_nest"], [143, 1, 1, "", "dev_unify"], [144, 1, 1, "", "dev_unify_array"], [145, 1, 1, "", "dev_unify_iter"], [146, 1, 1, "", "dev_unify_nest"], [147, 1, 1, "", "dev_util"], [148, 1, 1, "", "get_all_arrays_on_dev"], [149, 1, 1, "", "gpu_is_available"], [150, 1, 1, "", "num_arrays_on_dev"], [151, 1, 1, "", "num_cpu_cores"], [152, 1, 1, "", "num_gpus"], [153, 1, 1, "", "percent_used_mem_on_dev"], [154, 1, 1, "", "print_all_arrays_on_dev"], [155, 1, 1, "", "set_default_device"], [156, 1, 1, "", "set_split_factor"], [157, 1, 1, "", "split_factor"], [158, 1, 1, "", "split_func_call"], [159, 1, 1, "", "to_dev"], [160, 1, 1, "", "total_mem_on_dev"], [161, 1, 1, "", "tpu_is_available"], [162, 1, 1, "", "unset_default_device"], [163, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[114, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "da_tune_step"], [114, 5, 1, "", "dim_size"], [114, 3, 1, "", "ds_tune_step"], [114, 3, 1, "", "map"], [114, 3, 1, "", "repeated_config_check"], [114, 5, 1, "", "tune_step"], [114, 5, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[124, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[114, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "items"], [126, 3, 1, "", "keys"], [126, 5, 1, "", "shape"], [126, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[127, 3, 1, "", "__init__"], [127, 3, 1, "", "at_dev"], [127, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "start"], [129, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[165, 1, 1, "", "abs"], [166, 1, 1, "", "acos"], [167, 1, 1, "", "acosh"], [168, 1, 1, "", "add"], [169, 1, 1, "", "asin"], [170, 1, 1, "", "asinh"], [171, 1, 1, "", "atan"], [172, 1, 1, "", "atan2"], [173, 1, 1, "", "atanh"], [174, 1, 1, "", "bitwise_and"], [175, 1, 1, "", "bitwise_invert"], [176, 1, 1, "", "bitwise_left_shift"], [177, 1, 1, "", "bitwise_or"], [178, 1, 1, "", "bitwise_right_shift"], [179, 1, 1, "", "bitwise_xor"], [180, 1, 1, "", "ceil"], [181, 1, 1, "", "cos"], [182, 1, 1, "", "cosh"], [183, 1, 1, "", "divide"], [184, 1, 1, "", "equal"], [185, 1, 1, "", "erf"], [186, 1, 1, "", "exp"], [187, 1, 1, "", "expm1"], [188, 1, 1, "", "floor"], [189, 1, 1, "", "floor_divide"], [190, 1, 1, "", "greater"], [191, 1, 1, "", "greater_equal"], [192, 1, 1, "", "isfinite"], [193, 1, 1, "", "isinf"], [194, 1, 1, "", "isnan"], [195, 1, 1, "", "less"], [196, 1, 1, "", "less_equal"], [197, 1, 1, "", "log"], [198, 1, 1, "", "log10"], [199, 1, 1, "", "log1p"], [200, 1, 1, "", "log2"], [201, 1, 1, "", "logaddexp"], [202, 1, 1, "", "logical_and"], [203, 1, 1, "", "logical_not"], [204, 1, 1, "", "logical_or"], [205, 1, 1, "", "logical_xor"], [206, 1, 1, "", "maximum"], [207, 1, 1, "", "minimum"], [208, 1, 1, "", "multiply"], [209, 1, 1, "", "negative"], [210, 1, 1, "", "not_equal"], [211, 1, 1, "", "positive"], [212, 1, 1, "", "pow"], [213, 1, 1, "", "remainder"], [214, 1, 1, "", "round"], [215, 1, 1, "", "sign"], [216, 1, 1, "", "sin"], [217, 1, 1, "", "sinh"], [218, 1, 1, "", "sqrt"], [219, 1, 1, "", "square"], [220, 1, 1, "", "subtract"], [221, 1, 1, "", "tan"], [222, 1, 1, "", "tanh"], [223, 1, 1, "", "trunc"]], "ivy.functional.ivy.general": [[225, 1, 1, "", "all_equal"], [226, 1, 1, "", "arg_names"], [227, 1, 1, "", "array_equal"], [228, 1, 1, "", "arrays_equal"], [229, 1, 1, "", "assert_supports_inplace"], [230, 1, 1, "", "cache_fn"], [231, 1, 1, "", "clip_matrix_norm"], [232, 1, 1, "", "clip_vector_norm"], [233, 1, 1, "", "container_types"], [234, 1, 1, "", "copy_array"], [235, 1, 1, "", "cumprod"], [236, 1, 1, "", "cumsum"], [237, 1, 1, "", "current_framework_str"], [238, 1, 1, "", "default"], [239, 1, 1, "", "einops_rearrange"], [240, 1, 1, "", "einops_reduce"], [241, 1, 1, "", "einops_repeat"], [242, 1, 1, "", "exists"], [243, 1, 1, "", "floormod"], [244, 1, 1, "", "fourier_encode"], [245, 1, 1, "", "gather"], [246, 1, 1, "", "gather_nd"], [247, 1, 1, "", "get_all_arrays_in_memory"], [248, 1, 1, "", "get_min_base"], [249, 1, 1, "", "get_min_denominator"], [250, 1, 1, "", "get_num_dims"], [251, 1, 1, "", "get_referrers_recursive"], [252, 1, 1, "", "has_nans"], [253, 1, 1, "", "indices_where"], [254, 1, 1, "", "inplace_arrays_supported"], [255, 1, 1, "", "inplace_decrement"], [256, 1, 1, "", "inplace_increment"], [257, 1, 1, "", "inplace_update"], [258, 1, 1, "", "inplace_variables_supported"], [259, 1, 1, "", "is_array"], [260, 1, 1, "", "is_ivy_array"], [261, 1, 1, "", "is_ivy_container"], [262, 1, 1, "", "is_native_array"], [263, 1, 1, "", "match_kwargs"], [264, 1, 1, "", "multiprocessing"], [265, 1, 1, "", "num_arrays_in_memory"], [266, 1, 1, "", "one_hot"], [267, 1, 1, "", "print_all_arrays_in_memory"], [268, 1, 1, "", "queue_timeout"], [269, 1, 1, "", "scatter_flat"], [270, 1, 1, "", "scatter_nd"], [271, 1, 1, "", "set_min_base"], [272, 1, 1, "", "set_min_denominator"], [273, 1, 1, "", "set_queue_timeout"], [274, 1, 1, "", "set_tmp_dir"], [275, 1, 1, "", "shape"], [276, 1, 1, "", "shape_to_tuple"], [277, 1, 1, "", "stable_divide"], [278, 1, 1, "", "stable_pow"], [279, 1, 1, "", "supports_inplace"], [280, 1, 1, "", "tmp_dir"], [281, 1, 1, "", "to_list"], [282, 1, 1, "", "to_numpy"], [283, 1, 1, "", "to_scalar"], [284, 1, 1, "", "try_else_none"], [285, 1, 1, "", "unstack"], [286, 1, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[287, 2, 1, "", "GradientTracking"], [289, 1, 1, "", "adam_step"], [290, 1, 1, "", "adam_update"], [291, 1, 1, "", "execute_with_gradients"], [292, 1, 1, "", "gradient_descent_update"], [293, 1, 1, "", "is_variable"], [294, 1, 1, "", "lamb_update"], [295, 1, 1, "", "lars_update"], [296, 1, 1, "", "optimizer_update"], [297, 1, 1, "", "set_with_grads"], [298, 1, 1, "", "stop_gradient"], [299, 1, 1, "", "unset_with_grads"], [300, 1, 1, "", "variable"], [301, 1, 1, "", "variable_data"], [302, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[287, 3, 1, "", "__init__"]], "ivy.functional.ivy.image": [[304, 1, 1, "", "bilinear_resample"], [305, 1, 1, "", "float_img_to_uint8_img"], [306, 1, 1, "", "gradient_image"], [307, 1, 1, "", "linear_resample"], [308, 1, 1, "", "random_crop"], [309, 1, 1, "", "stack_images"], [310, 1, 1, "", "uint8_img_to_float_img"]], "ivy.functional.ivy.layers": [[312, 1, 1, "", "conv1d"], [313, 1, 1, "", "conv1d_transpose"], [314, 1, 1, "", "conv2d"], [315, 1, 1, "", "conv2d_transpose"], [316, 1, 1, "", "conv3d"], [317, 1, 1, "", "conv3d_transpose"], [318, 1, 1, "", "depthwise_conv2d"], [319, 1, 1, "", "dropout"], [320, 1, 1, "", "linear"], [321, 1, 1, "", "lstm_update"], [322, 1, 1, "", "multi_head_attention"], [323, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[325, 1, 1, "", "cholesky"], [326, 1, 1, "", "cross"], [327, 1, 1, "", "det"], [328, 1, 1, "", "diagonal"], [329, 1, 1, "", "eigh"], [330, 1, 1, "", "eigvalsh"], [331, 1, 1, "", "inv"], [332, 1, 1, "", "matmul"], [333, 1, 1, "", "matrix_norm"], [334, 1, 1, "", "matrix_power"], [335, 1, 1, "", "matrix_rank"], [336, 1, 1, "", "matrix_transpose"], [337, 1, 1, "", "outer"], [338, 1, 1, "", "pinv"], [339, 1, 1, "", "qr"], [340, 1, 1, "", "slodget"], [341, 1, 1, "", "solve"], [342, 1, 1, "", "svd"], [343, 1, 1, "", "svdvals"], [344, 1, 1, "", "tensordot"], [345, 1, 1, "", "trace"], [346, 1, 1, "", "vecdot"], [347, 1, 1, "", "vector_norm"], [348, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[350, 1, 1, "", "binary_cross_entropy"], [351, 1, 1, "", "cross_entropy"], [352, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[354, 1, 1, "", "clip"], [355, 1, 1, "", "concat"], [356, 1, 1, "", "constant_pad"], [357, 1, 1, "", "expand_dims"], [358, 1, 1, "", "flip"], [359, 1, 1, "", "permute_dims"], [360, 1, 1, "", "repeat"], [361, 1, 1, "", "reshape"], [362, 1, 1, "", "roll"], [363, 1, 1, "", "split"], [364, 1, 1, "", "squeeze"], [365, 1, 1, "", "stack"], [366, 1, 1, "", "swapaxes"], [367, 1, 1, "", "tile"], [368, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[370, 1, 1, "", "fomaml_step"], [371, 1, 1, "", "maml_step"], [372, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[374, 1, 1, "", "all_nested_indices"], [375, 1, 1, "", "copy_nest"], [376, 1, 1, "", "index_nest"], [377, 1, 1, "", "insert_into_nest_at_index"], [378, 1, 1, "", "insert_into_nest_at_indices"], [379, 1, 1, "", "map"], [380, 1, 1, "", "map_nest_at_index"], [381, 1, 1, "", "map_nest_at_indices"], [382, 1, 1, "", "multi_index_nest"], [383, 1, 1, "", "nested_any"], [384, 1, 1, "", "nested_indices_where"], [385, 1, 1, "", "nested_map"], [386, 1, 1, "", "nested_multi_map"], [387, 1, 1, "", "prune_nest_at_index"], [388, 1, 1, "", "prune_nest_at_indices"], [389, 1, 1, "", "set_nest_at_index"], [390, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[392, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[394, 1, 1, "", "multinomial"], [395, 1, 1, "", "randint"], [396, 1, 1, "", "random_normal"], [397, 1, 1, "", "random_uniform"], [398, 1, 1, "", "seed"], [399, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[401, 1, 1, "", "argmax"], [402, 1, 1, "", "argmin"], [403, 1, 1, "", "nonzero"], [404, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[406, 1, 1, "", "unique_all"], [407, 1, 1, "", "unique_counts"], [408, 1, 1, "", "unique_inverse"], [409, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[411, 1, 1, "", "argsort"], [412, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[414, 1, 1, "", "einsum"], [415, 1, 1, "", "max"], [416, 1, 1, "", "mean"], [417, 1, 1, "", "min"], [418, 1, 1, "", "prod"], [419, 1, 1, "", "std"], [420, 1, 1, "", "sum"], [421, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[423, 1, 1, "", "all"], [424, 1, 1, "", "any"]], "ivy.inspection": [[429, 1, 1, "", "add_array_specs"], [430, 1, 1, "", "fn_array_spec"]], "ivy.stateful": [[432, 0, 0, "-", "activations"], [435, 0, 0, "-", "converters"], [437, 0, 0, "-", "initializers"], [446, 0, 0, "-", "layers"], [458, 0, 0, "-", "module"], [460, 0, 0, "-", "norms"], [462, 0, 0, "-", "optimizers"], [468, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[433, 2, 1, "", "GEGLU"], [434, 2, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[433, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[434, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[436, 1, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[437, 2, 1, "", "Constant"], [439, 2, 1, "", "FirstLayerSiren"], [440, 2, 1, "", "GlorotUniform"], [437, 2, 1, "", "KaimingNormal"], [442, 2, 1, "", "Ones"], [443, 2, 1, "", "Siren"], [437, 2, 1, "", "Uniform"], [445, 2, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[437, 3, 1, "", "__init__"], [437, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[439, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[440, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[437, 3, 1, "", "__init__"], [437, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[442, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[443, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[437, 3, 1, "", "__init__"], [437, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[445, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[447, 2, 1, "", "Conv1D"], [448, 2, 1, "", "Conv1DTranspose"], [449, 2, 1, "", "Conv2D"], [450, 2, 1, "", "Conv2DTranspose"], [451, 2, 1, "", "Conv3D"], [452, 2, 1, "", "Conv3DTranspose"], [453, 2, 1, "", "DepthwiseConv2D"], [454, 2, 1, "", "Dropout"], [455, 2, 1, "", "LSTM"], [456, 2, 1, "", "Linear"], [457, 2, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[447, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[448, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[449, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[450, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[451, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[452, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[453, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[454, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[455, 3, 1, "", "__init__"], [455, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[456, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[457, 3, 1, "", "__init__"]], "ivy.stateful.module": [[459, 2, 1, "", "Module"]], "ivy.stateful.module.Module": [[459, 3, 1, "", "__init__"], [459, 3, 1, "", "build"], [459, 5, 1, "", "build_mode"], [459, 5, 1, "", "built"], [459, 3, 1, "", "check_submod_rets"], [459, 3, 1, "", "get_mod_key"], [459, 3, 1, "", "mod_depth"], [459, 3, 1, "", "mod_height"], [459, 3, 1, "", "mod_with_top_mod_key_chain"], [459, 3, 1, "", "save_weights"], [459, 3, 1, "", "show_mod_in_top_mod"], [459, 3, 1, "", "show_structure"], [459, 3, 1, "", "show_v_in_top_v"], [459, 3, 1, "", "sub_mods"], [459, 3, 1, "", "track_submod_call_order"], [459, 3, 1, "", "track_submod_rets"], [459, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[461, 2, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[461, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[463, 2, 1, "", "Adam"], [464, 2, 1, "", "LAMB"], [465, 2, 1, "", "LARS"], [466, 2, 1, "", "Optimizer"], [467, 2, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[463, 3, 1, "", "__init__"], [463, 3, 1, "", "set_state"], [463, 5, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[464, 3, 1, "", "__init__"], [464, 3, 1, "", "set_state"], [464, 5, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[465, 3, 1, "", "__init__"], [465, 3, 1, "", "set_state"], [465, 5, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[466, 3, 1, "", "__init__"], [466, 3, 1, "", "set_state"], [466, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[467, 3, 1, "", "__init__"], [467, 3, 1, "", "set_state"], [467, 5, 1, "", "state"]], "ivy.stateful.sequential": [[469, 2, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[469, 3, 1, "", "__init__"]], "ivy.verbosity": [[472, 1, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"background": [0, 425], "ml": 1, "explos": 1, "standard": 2, "skeptic": 2, "complimentari": 2, "vs": [2, 38], "competit": 2, "do": 2, "work": 2, "The": [2, 6, 23, 38], "arrai": [2, 9, 23], "api": [2, 7, 9, 21, 23, 25, 26], "why": 3, "unifi": [3, 23], "No": 3, "more": 3, "re": 3, "implement": 3, "infinit": 3, "shelf": 3, "life": 3, "contribut": [4, 425], "set": [5, 405], "up": 5, "window": 5, "basic": 6, "manag": 6, "your": 6, "fork": 6, "todo": 6, "list": 6, "issu": 6, "creat": 6, "pull": 6, "request": 6, "navig": 7, "code": 7, "submodul": 7, "design": [7, 20, 425], "ivi": [7, 9, 12, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], "backend": [7, 21], "ad": [8, 9], "function": [8, 21, 26, 38], "categor": 8, "primari": 8, "composit": 8, "partial": 8, "flexibl": 8, "inplac": 8, "updat": 8, "data": [8, 24, 38, 84, 405, 406, 409], "type": [8, 10, 38, 84], "devic": [8, 114], "test": 9, "suit": 9, "hint": 10, "docstr": [11, 12], "exampl": 12, "tan": [12, 221], "roll": [12, 362], "add": [12, 168], "build": [13, 21], "doc": 13, "make_doc": 13, "sh": 13, "entrypoint": 13, "_make_doc": 13, "generate_src_rst_fil": 13, "py": 13, "sphinx": 13, "correct_built_html_fil": 13, "remove_fil": 13, "debugg": 14, "debug_mod": 15, "set_breakpoint_debug_mod": 16, "set_debug_mod": 17, "set_exception_debug_mod": 18, "unset_debug_mod": 19, "block": 21, "framework": [21, 22, 39], "handler": [21, 39], "graph": [21, 26], "compil": [21, 26, 62, 63], "class": 23, "oper": [23, 38], "monkei": 23, "patch": 23, "instanc": 23, "method": [23, 24], "contain": 24, "construct": 24, "represent": 24, "recurs": 24, "built": 24, "ins": 24, "access": 24, "save": 24, "load": 24, "comparison": 24, "custom": [24, 38], "us": 24, "case": 24, "compartment": 24, "configur": 24, "network": [24, 26], "weight": 24, "state": [25, 38], "modul": [25, 458, 459], "initi": [25, 437], "optim": [25, 462, 466], "transpil": 26, "frontend": 26, "role": 26, "convert": [26, 435], "model": [26, 33, 38], "builder": 28, "ecosystem": 29, "gym": [30, 37], "mech": 31, "memori": [32, 37], "robot": [34, 37], "vision": [35, 37], "extens": [36, 425], "appli": 37, "librari": 37, "mechan": 37, "faq": 38, "dynam": 38, "size": 38, "shape": [38, 275, 405, 406, 409], "check": 38, "control": 38, "flow": 38, "auto": 38, "differenti": 38, "replica": 38, "parallel": 38, "support": 38, "altern": 38, "structur": 38, "pipelin": 38, "choose_random_framework": 41, "clear_framework_stack": 42, "current_framework": 43, "get_framework": 44, "set_framework": 45, "try_import_ivy_jax": 46, "try_import_ivy_mxnet": 47, "try_import_ivy_numpi": 48, "try_import_ivy_tf": 49, "try_import_ivy_torch": 50, "unset_framework": 51, "func": 52, "wrapper": 52, "activ": [54, 432], "gelu": [55, 434], "leaky_relu": 56, "relu": 57, "sigmoid": 58, "softmax": 59, "softplu": 60, "tanh": [61, 222], "constant": 64, "creation": 65, "note": [65, 71], "arang": 66, "asarrai": 67, "empti": 68, "empty_lik": 69, "ey": 70, "from_dlpack": 71, "full": 72, "full_lik": 73, "linspac": 74, "logspac": 75, "meshgrid": 76, "native_arrai": 77, "ones": 78, "ones_lik": 79, "tril": 80, "triu": 81, "zero": [82, 445], "zeros_lik": 83, "as_ivy_dtyp": 88, "as_native_dtyp": 89, "astyp": 90, "broadcast_arrai": 91, "broadcast_to": 92, "can_cast": 93, "closest_valid_dtyp": 94, "convert_dtyp": 95, "default_dtyp": 96, "default_float_dtyp": 97, "default_int_dtyp": 98, "dtype": 99, "dtype_bit": 100, "finfo": 101, "iinfo": 102, "invalid_dtyp": 103, "is_float_dtyp": 104, "is_int_dtyp": 105, "result_typ": 106, "set_default_dtyp": 107, "set_default_float_dtyp": 108, "set_default_int_dtyp": 109, "unset_default_dtyp": 110, "unset_default_float_dtyp": 111, "unset_default_int_dtyp": 112, "valid_dtyp": 113, "devcloneditem": 116, "devclonedit": 117, "devclonednest": 118, "devdistitem": 119, "devdistit": 120, "devdistnest": 121, "devmapp": 123, "devmappermultiproc": 124, "multidevitem": 126, "multidevit": 127, "multidevnest": 128, "profil": 129, "as_ivy_dev": 130, "as_native_dev": 131, "clear_mem_on_dev": 132, "default_devic": 133, "dev": 134, "dev_clon": 135, "dev_clone_arrai": 136, "dev_clone_it": 137, "dev_clone_nest": 138, "dev_dist": 139, "dev_dist_arrai": 140, "dev_dist_it": 141, "dev_dist_nest": 142, "dev_unifi": 143, "dev_unify_arrai": 144, "dev_unify_it": 145, "dev_unify_nest": 146, "dev_util": 147, "get_all_arrays_on_dev": 148, "gpu_is_avail": 149, "num_arrays_on_dev": 150, "num_cpu_cor": 151, "num_gpu": 152, "percent_used_mem_on_dev": 153, "print_all_arrays_on_dev": 154, "set_default_devic": 155, "set_split_factor": 156, "split_factor": 157, "split_func_cal": 158, "to_dev": 159, "total_mem_on_dev": 160, "tpu_is_avail": 161, "unset_default_devic": 162, "used_mem_on_dev": 163, "elementwis": 164, "ab": 165, "aco": 166, "acosh": 167, "asin": 169, "asinh": 170, "atan": 171, "atan2": 172, "atanh": 173, "bitwise_and": 174, "bitwise_invert": 175, "bitwise_left_shift": 176, "bitwise_or": 177, "bitwise_right_shift": 178, "bitwise_xor": 179, "ceil": 180, "co": 181, "cosh": 182, "divid": 183, "equal": 184, "erf": 185, "exp": 186, "expm1": 187, "floor": 188, "floor_divid": 189, "greater": 190, "greater_equ": 191, "isfinit": 192, "isinf": 193, "isnan": 194, "less": 195, "less_equ": 196, "log": 197, "log10": 198, "log1p": 199, "log2": 200, "logaddexp": 201, "logical_and": 202, "logical_not": 203, "logical_or": 204, "logical_xor": 205, "maximum": 206, "minimum": 207, "multipli": 208, "neg": 209, "not_equ": 210, "posit": 211, "pow": 212, "remaind": 213, "round": 214, "sign": 215, "sin": 216, "sinh": 217, "sqrt": 218, "squar": 219, "subtract": 220, "trunc": 223, "gener": 224, "all_equ": 225, "arg_nam": 226, "array_equ": 227, "arrays_equ": 228, "assert_supports_inplac": 229, "cache_fn": 230, "clip_matrix_norm": 231, "clip_vector_norm": 232, "container_typ": 233, "copy_arrai": 234, "cumprod": 235, "cumsum": 236, "current_framework_str": 237, "default": 238, "einops_rearrang": 239, "einops_reduc": 240, "einops_repeat": 241, "exist": 242, "floormod": 243, "fourier_encod": 244, "gather": 245, "gather_nd": 246, "get_all_arrays_in_memori": 247, "get_min_bas": 248, "get_min_denomin": 249, "get_num_dim": 250, "get_referrers_recurs": 251, "has_nan": 252, "indices_wher": 253, "inplace_arrays_support": 254, "inplace_decr": 255, "inplace_incr": 256, "inplace_upd": 257, "inplace_variables_support": 258, "is_arrai": 259, "is_ivy_arrai": 260, "is_ivy_contain": 261, "is_native_arrai": 262, "match_kwarg": 263, "multiprocess": 264, "num_arrays_in_memori": 265, "one_hot": 266, "print_all_arrays_in_memori": 267, "queue_timeout": 268, "scatter_flat": 269, "scatter_nd": 270, "set_min_bas": 271, "set_min_denomin": 272, "set_queue_timeout": 273, "set_tmp_dir": 274, "shape_to_tupl": 276, "stable_divid": 277, "stable_pow": 278, "supports_inplac": 279, "tmp_dir": 280, "to_list": 281, "to_numpi": 282, "to_scalar": 283, "try_else_non": 284, "unstack": 285, "value_is_nan": 286, "gradient": 287, "adam_step": 289, "adam_upd": 290, "execute_with_gradi": 291, "gradient_descent_upd": 292, "is_vari": 293, "lamb_upd": 294, "lars_upd": 295, "optimizer_upd": 296, "set_with_grad": 297, "stop_gradi": 298, "unset_with_grad": 299, "variabl": 300, "variable_data": 301, "with_grad": 302, "imag": 303, "bilinear_resampl": 304, "float_img_to_uint8_img": 305, "gradient_imag": 306, "linear_resampl": 307, "random_crop": 308, "stack_imag": 309, "uint8_img_to_float_img": 310, "layer": [311, 446], "conv1d": [312, 447], "conv1d_transpos": 313, "conv2d": [314, 449], "conv2d_transpos": 315, "conv3d": [316, 451], "conv3d_transpos": 317, "depthwise_conv2d": 318, "dropout": [319, 454], "linear": [320, 324, 456], "lstm_updat": 321, "multi_head_attent": 322, "scaled_dot_product_attent": 323, "algebra": 324, "choleski": 325, "cross": 326, "det": 327, "diagon": 328, "eigh": 329, "eigvalsh": 330, "inv": 331, "matmul": 332, "matrix_norm": 333, "matrix_pow": 334, "matrix_rank": 335, "matrix_transpos": 336, "outer": 337, "pinv": 338, "qr": 339, "slodget": 340, "solv": 341, "svd": 342, "svdval": 343, "tensordot": 344, "trace": 345, "vecdot": 346, "vector_norm": 347, "vector_to_skew_symmetric_matrix": 348, "loss": 349, "binary_cross_entropi": 350, "cross_entropi": 351, "sparse_cross_entropi": 352, "manipul": 353, "clip": 354, "concat": 355, "constant_pad": 356, "expand_dim": 357, "flip": 358, "permute_dim": 359, "repeat": 360, "reshap": 361, "split": 363, "squeez": 364, "stack": 365, "swapax": 366, "tile": 367, "zero_pad": 368, "meta": 369, "fomaml_step": 370, "maml_step": 371, "reptile_step": 372, "nest": 373, "all_nested_indic": 374, "copy_nest": 375, "index_nest": 376, "insert_into_nest_at_index": 377, "insert_into_nest_at_indic": 378, "map": 379, "map_nest_at_index": 380, "map_nest_at_indic": 381, "multi_index_nest": 382, "nested_ani": 383, "nested_indices_wher": 384, "nested_map": 385, "nested_multi_map": 386, "prune_nest_at_index": 387, "prune_nest_at_indic": 388, "set_nest_at_index": 389, "set_nest_at_indic": 390, "norm": [391, 460], "layer_norm": 392, "random": 393, "multinomi": 394, "randint": 395, "random_norm": 396, "random_uniform": 397, "seed": 398, "shuffl": 399, "search": 400, "argmax": 401, "argmin": 402, "nonzero": 403, "where": 404, "depend": [405, 406, 409], "output": [405, 406, 409], "unique_al": 406, "unique_count": 407, "unique_invers": 408, "unique_valu": 409, "sort": [410, 412], "argsort": 411, "statist": 413, "einsum": 414, "max": 415, "mean": 416, "min": 417, "prod": 418, "std": 419, "sum": 420, "var": 421, "util": 422, "all": 423, "ani": 424, "content": 425, "overview": 425, "quick": 425, "start": 425, "roadmap": [425, 431], "citat": 425, "inspect": 428, "add_array_spec": 429, "fn_array_spec": 430, "geglu": 433, "to_ivy_modul": 436, "firstlayersiren": 439, "glorotuniform": 440, "Ones": 442, "siren": 443, "conv1dtranspos": 448, "conv2dtranspos": 450, "conv3dtranspos": 452, "depthwiseconv2d": 453, "lstm": 455, "multiheadattent": 457, "layernorm": 461, "adam": 463, "lamb": 464, "lar": 465, "sgd": 467, "sequenti": [468, 469], "verbos": 471, "cprint": 472}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})